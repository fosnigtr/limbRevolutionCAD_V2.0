<?xml version="1.0" encoding="utf-8"?>
<history>
<session>
<command time_stamp="1502daf9026">%-- 10/3/2015 7:31 AM --%</command>
<command execution_time="72836">disp('Hello World')</command>
<command batch="1">main</command>
</session>
<session>
<command time_stamp="1502db31426">%-- 10/3/2015 7:35 AM --%</command>
<command error="true" execution_time="10631" repeat="4">main</command>
<command execution_time="480">mbuild -setup</command>
</session>
<session>
<command time_stamp="15048b38ecd">%-- 10/8/2015 1:25 PM --%</command>
<command error="true" execution_time="586" repeat="2">main</command>
</session>
<session>
<command time_stamp="15048b704d9">%-- 10/8/2015 1:29 PM --%</command>
<command error="true" execution_time="3675">main</command>
<command execution_time="84">opengl('save', 'software')</command>
<command error="true" execution_time="342" repeat="4">main</command>
</session>
<session>
<command time_stamp="15048bafd00">%-- 10/8/2015 1:33 PM --%</command>
<command execution_time="663" repeat="3">main</command>
<command error="true" execution_time="3709">getaopfile</command>
<command execution_time="897" repeat="4">main</command>
<command execution_time="795" repeat="2">CAD</command>
</session>
<session>
<command time_stamp="15048d43c72">%-- 10/8/2015 2:01 PM --%</command>
<command execution_time="1668" repeat="2">CAD</command>
</session>
<session>
<command time_stamp="15049330887">%-- 10/8/2015 3:44 PM --%</command>
<command execution_time="28">sum(2^(46-43))</command>
<command execution_time="21">2^(46-43)</command>
<command execution_time="21">2^(60-43)</command>
<command execution_time="28">log10(ans)</command>
<command error="true" execution_time="739">lgo10(8)</command>
<command execution_time="31">log10(8)</command>
</session>
<session>
<command time_stamp="1504dcf1096">%-- 10/9/2015 1:13 PM --%</command>
<command execution_time="76">t = 2.89; v = 12; @(t,v) (1-betainc(v/(v+t^2),v/2,0.5))</command>
<command error="true" execution_time="1701">1-(1-tdist2T(t,v))/2</command>
<command execution_time="17">tdist2T = @(t,v) (1-betainc(v/(v+t^2),v/2,0.5));</command>
<command execution_time="18">tdist1T = @(t,v) 1-(1-tdist2T(t,v))/2;</command>
<command execution_time="21">tdist1T</command>
<command execution_time="21">t</command>
<command execution_time="19">v</command>
<command execution_time="92">tdist2T = (1-betainc(v/(v+t^2),v/2,0.5));</command>
<command execution_time="19">tdist2T</command>
<command execution_time="18">tdist1T = @(t,v) 1-(1-tdist2T(t,v))/2;</command>
<command error="true" execution_time="88">tdist1T = 1-(1-tdist2T(t,v))/2;</command>
<command execution_time="22">tdist2T = @(t,v) (1-betainc(v/(v+t^2),v/2,0.5));</command>
<command execution_time="17">tdist1T = 1-(1-tdist2T(t,v))/2;</command>
<command execution_time="22">tdist1T</command>
<command execution_time="21">100/118</command>
<command execution_time="21">1/ans</command>
</session>
<session>
<command time_stamp="1505cd1ec7d">%-- 10/12/2015 11:11 AM --%</command>
<command error="true" execution_time="4956">load('HistHIFUBulkInVivoTumor.mat');</command>
<command error="true" execution_time="59">tumordia</command>
<command batch="2">cd('C:\Users\Tyler Fosnight\Desktop');</command>
<command batch="2" execution_time="162">load('HistHIFUBulkInVivoTumor.mat');</command>
<command execution_time="87" repeat="3">imagesc(maskpandn)</command>
<command error="true" execution_time="208">tumordia</command>
<command execution_time="20">size(maskpandn)</command>
<command execution_time="20">896/N</command>
<command error="true" execution_time="66" repeat="2">tumordia</command>
<command error="true" execution_time="2066">windwidth</command>
<command execution_time="20">winwidth</command>
<command execution_time="20">N</command>
<command execution_time="20">idx</command>
<command error="true" execution_time="413" repeat="2">tumordia</command>
<command execution_time="19">size(r)</command>
<command execution_time="50">A</command>
<command error="true" execution_time="91">tumordia</command>
<command execution_time="20">idx</command>
<command execution_time="119">imagesc(maskpandn)</command>
<command execution_time="14437" repeat="2">tumordia</command>
<command execution_time="84">figure; imagesc(maskpandn)</command>
<command execution_time="18">size(maskpandn,2)/N</command>
<command execution_time="14568">tumordia</command>
<command execution_time="17">r</command>
<command execution_time="85">figure; imagesc(maskpandn)</command>
<command execution_time="19">r(7:end)</command>
</session>
<session>
<command time_stamp="150710fbc7c">%-- 10/16/2015 9:31 AM --%</command>
<command execution_time="1467">VX2_invivo_decorrelation_stats</command>
<command execution_time="2184">t_paired_decorr_focused_liver_nonvsabl</command>
<command execution_time="18">t_paired_decorr_unfocused_liver_nonvsabl</command>
<command execution_time="20">[h p_paired_decorr_focused_liver_nonvsabl ci stats]=ttest(decorr_ablated_liver(focused),decorr_unablated_liver(focused),'tail','right');</command>
<command execution_time="19">stats</command>
<command execution_time="25">[h p_paired_decorr_unfocused_liver_nonvsabl ci stats]=ttest(decorr_ablated_liver(unfocused),decorr_unablated_liver(unfocused),'tail','right');</command>
<command execution_time="21">stats</command>
<command execution_time="22">unfocused</command>
<command execution_time="19">[h p_paired_decorr_unfocused_liver_nonvsabl ci stats]=ttest(decorr_ablated_liver(unfocused),decorr_unablated_liver(unfocused),'tail','right');</command>
<command execution_time="19">stats</command>
<command execution_time="27">ttest(decorr_ablated_liver(focused),decorr_unablated_liver(focused),'tail','right');</command>
<command execution_time="26">stats</command>
<command execution_time="20">ttest(decorr_ablated_liver(unfocused),decorr_unablated_liver(unfocused),'tail','right');</command>
<command execution_time="20">stats</command>
<command execution_time="19">ttest(decorr_ablated_liver(all),decorr_unablated_liver(all),'tail','right');</command>
<command execution_time="19">stats</command>
<command execution_time="37">all</command>
<command execution_time="20">[h p_paired_decorr_unfocused_liver_nonvsabl ci stats]=ttest(decorr_ablated_liver(unfocused),decorr_unablated_liver(unfocused),'tail','right');</command>
<command execution_time="24">stats</command>
<command execution_time="21">[h p_paired_decorr_all_liver_nonvsabl ci stats]=ttest(decorr_ablated_liver(all),decorr_unablated_liver(all),'tail','right');</command>
<command execution_time="20">stats</command>
<command execution_time="21">[h p_paired_decorr_focused_liver_nonvsabl ci stats]=ttest(decorr_ablated_liver(focused),decorr_unablated_liver(focused),'tail','right');</command>
<command execution_time="19">stats</command>
<command execution_time="20">[h p_paired_decorr_focused_tumor_nonvsabl ci stats]=ttest(decorr_ablated_tumor(focused),decorr_unablated_tumor(focused),'tail','right');</command>
<command execution_time="17">stats</command>
<command execution_time="19">[h p_paired_decorr_unfocused_tumor_nonvsabl ci stats]=ttest(decorr_ablated_tumor(unfocused),decorr_unablated_tumor(unfocused),'tail','right');</command>
<command execution_time="18">stats</command>
<command execution_time="26">[h p_paired_decorr_all_tumor_nonvsabl ci stats]=ttest(decorr_ablated_tumor(all),decorr_unablated_tumor(all),'tail','right');</command>
<command execution_time="19">stats</command>
<command execution_time="20">[h p_paired_decorr_focused_unablated_tumorvsliver ci stats]=ttest(decorr_unablated_tumor(focused),decorr_unablated_liver(focused),'tail','both');</command>
<command execution_time="19">stats</command>
<command execution_time="33">mse_decorr_untreated_tumor_focused</command>
<command batch="3" error="true">Y = vertcat(horzcat(mse_decorr_untreated_normal_focused(1),mse_decorr_treated_normal_focused(1)),...</command>
<command batch="3" error="true">horzcat(mse_decorr_untreated_tumor_focused(1),mse_decorr_treated_tumor_focused(1)));</command>
<command batch="3" error="true">errY = vertcat(horzcat(mse_decorr_untreated_normal_focused(2),mse_decorr_treated_normal_focused(2)),...</command>
<command batch="3" error="true">horzcat(mse_decorr_untreated_tumor_focused(2),mse_decorr_treated_tumor_focused(2)));</command>
<command batch="3" error="true">h = figure;</command>
<command batch="3" error="true">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="3" error="true">[hbar herror] = barwitherr(errY,Y,...</command>
<command batch="3" error="true">'grouped','EdgeColor', 'k', 'LineWidth', 2);</command>
<command batch="3" error="true">set(gca, 'YLim', [-6.5, -1]);</command>
<command batch="3" error="true">set(gca,'XTickLabel',{'Normal Tissue','VX2 Tumor'},'FontSize',font)</command>
<command batch="3" error="true">ylabel('log_{10}(Echo decorrelation)')</command>
<command batch="3" error="true">set(herror, 'LineWidth',2);</command>
<command batch="3" error="true">set(gcf,'color','w');</command>
<command batch="3" error="true">%grid on;</command>
<command batch="3" error="true">set(hbar(1), 'FaceColor', [0.33 0.33 0.33]);</command>
<command batch="3" error="true">set(hbar(2), 'FaceColor', [0.8 0.8 0.8]);</command>
<command batch="3" error="true">set(hbar(1), 'BaseValue', -5);</command>
<command batch="3" error="true">set(hbar(2), 'BaseValue', -5);</command>
<command batch="3" error="true">h2 = legend('Non-ablated', 'Ablated', 'Location','SouthEast');</command>
<command batch="3" error="true">set(h2, 'Fontsize', legendfont);</command>
<command batch="3" error="true">set(gca,'linewidth',2);</command>
<command batch="3" error="true">% Asterixs</command>
<command batch="3" error="true">asterix = [p_unpaired_decorr_focused_liver_nonvsabl p_unpaired_decorr_focused_tumor_nonvsabl ...</command>
<command batch="3" error="true">p_unpaired_decorr_focused_unablated_tumorvsliver p_unpaired_decorr_focused_ablated_tumorvsliver];</command>
<command batch="3" error="true">numgroups=size(Y, 1);</command>
<command batch="3" error="true">numbars=size(Y, 2);</command>
<command batch="3" error="true">for i=1:numbars</command>
<command batch="3" error="true">x=get(get(hbar(i), 'children'), 'xdata');</command>
<command batch="3" error="true">x=mean(x([1 3],:));</command>
<command batch="3" error="true">pos_bars(i,:)=x;</command>
<command batch="3" error="true">end</command>
<command batch="3" error="true">handles.pos_bars=pos_bars;</command>
<command batch="3" error="true">H = sigstar({[handles.pos_bars(1,1),handles.pos_bars(2,1)],...</command>
<command batch="3" error="true">[handles.pos_bars(1,2),handles.pos_bars(2,2)],...</command>
<command batch="3" error="true">[handles.pos_bars(1,1),handles.pos_bars(1,2)],...</command>
<command batch="3" error="true">[handles.pos_bars(2,1),handles.pos_bars(2,2)]},...</command>
<command batch="3" error="true">asterix);</command>
<command batch="3" error="true">axis square;</command>
<command batch="3" error="true" execution_time="5660">set(H(:,2),'Fontsize',20);</command>
<command batch="4" error="true">Y = vertcat(horzcat(mse_decorr_unablated_normal_focused(1),mse_decorr_ablated_normal_focused(1)),...</command>
<command batch="4" error="true">horzcat(mse_decorr_unablated_tumor_focused(1),mse_decorr_ablated_tumor_focused(1)));</command>
<command batch="4" error="true">errY = vertcat(horzcat(mse_decorr_unablated_normal_focused(2),mse_decorr_ablated_normal_focused(2)),...</command>
<command batch="4" error="true" execution_time="1892">horzcat(mse_decorr_unablated_tumor_focused(2),mse_decorr_ablated_tumor_focused(2)));</command>
<command batch="5" error="true">Y = vertcat(horzcat(mse_decorr_unablated_normal_focused(1),mse_decorr_ablated_normal_focused(1)),...</command>
<command batch="5" error="true" execution_time="1802">horzcat(mse_decorr_unablated_tumor_focused(1),mse_decorr_ablated_tumor_focused(1)));</command>
<command error="true" execution_time="384" repeat="2">ThesisPlots</command>
<command error="true" execution_time="2279">VX2_invivo_decorrelation_stats</command>
<command batch="6" error="true">Y = vertcat(horzcat(mse_decorr_unablated_liver_focused(1),mse_decorr_ablated_liver_focused(1)),...</command>
<command batch="6" error="true">horzcat(mse_decorr_unablated_tumor_focused(1),mse_decorr_ablated_tumor_focused(1)));</command>
<command batch="6" error="true">errY = vertcat(horzcat(mse_decorr_unablated_liver_focused(2),mse_decorr_ablated_liver_focused(2)),...</command>
<command batch="6" error="true">horzcat(mse_decorr_unablated_tumor_focused(2),mse_decorr_ablated_tumor_focused(2)));</command>
<command batch="6" error="true">h = figure;</command>
<command batch="6" error="true">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="6" error="true">[hbar herror] = barwitherr(errY,Y,...</command>
<command batch="6" error="true">'grouped','EdgeColor', 'k', 'LineWidth', 2);</command>
<command batch="6" error="true">set(gca, 'YLim', [-6.5, -1]);</command>
<command batch="6" error="true">set(gca,'XTickLabel',{'Normal Tissue','VX2 Tumor'},'FontSize',font)</command>
<command batch="6" error="true">ylabel('log_{10}(Echo decorrelation)')</command>
<command batch="6" error="true">set(herror, 'LineWidth',2);</command>
<command batch="6" error="true">set(gcf,'color','w');</command>
<command batch="6" error="true">%grid on;</command>
<command batch="6" error="true">set(hbar(1), 'FaceColor', [0.33 0.33 0.33]);</command>
<command batch="6" error="true">set(hbar(2), 'FaceColor', [0.8 0.8 0.8]);</command>
<command batch="6" error="true">set(hbar(1), 'BaseValue', -5);</command>
<command batch="6" error="true">set(hbar(2), 'BaseValue', -5);</command>
<command batch="6" error="true">h2 = legend('Non-ablated', 'Ablated', 'Location','SouthEast');</command>
<command batch="6" error="true">set(h2, 'Fontsize', legendfont);</command>
<command batch="6" error="true">set(gca,'linewidth',2);</command>
<command batch="6" error="true">% Asterixs</command>
<command batch="6" error="true">asterix = [p_unpaired_decorr_focused_liver_nonvsabl p_unpaired_decorr_focused_tumor_nonvsabl ...</command>
<command batch="6" error="true">p_unpaired_decorr_focused_unablated_tumorvsliver p_unpaired_decorr_focused_ablated_tumorvsliver];</command>
<command batch="6" error="true">numgroups=size(Y, 1);</command>
<command batch="6" error="true">numbars=size(Y, 2);</command>
<command batch="6" error="true">for i=1:numbars</command>
<command batch="6" error="true">x=get(get(hbar(i), 'children'), 'xdata');</command>
<command batch="6" error="true">x=mean(x([1 3],:));</command>
<command batch="6" error="true">pos_bars(i,:)=x;</command>
<command batch="6" error="true">end</command>
<command batch="6" error="true">handles.pos_bars=pos_bars;</command>
<command batch="6" error="true">H = sigstar({[handles.pos_bars(1,1),handles.pos_bars(2,1)],...</command>
<command batch="6" error="true">[handles.pos_bars(1,2),handles.pos_bars(2,2)],...</command>
<command batch="6" error="true">[handles.pos_bars(1,1),handles.pos_bars(1,2)],...</command>
<command batch="6" error="true">[handles.pos_bars(2,1),handles.pos_bars(2,2)]},...</command>
<command batch="6" error="true">asterix);</command>
<command batch="6" error="true">axis square;</command>
<command batch="6" error="true">set(H(:,2),'Fontsize',20);</command>
<command batch="6" error="true" execution_time="4355">export_fig(h, ['HIFUBarPlot.pdf'], '-painters');</command>
<command batch="7" error="true" repeat="3">h = figure;</command>
<command batch="7" error="true">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="7" error="true">[hbar herror] = barwitherr(errY,Y,...</command>
<command batch="7" error="true">'grouped','EdgeColor', 'k', 'LineWidth', 2);</command>
<command batch="7" error="true">set(gca, 'YLim', [-6.5, -1]);</command>
<command batch="7" error="true">set(gca,'XTickLabel',{'Normal Tissue','VX2 Tumor'},'FontSize',font)</command>
<command batch="7" error="true">ylabel('log_{10}(Echo decorrelation)')</command>
<command batch="7" error="true">set(herror, 'LineWidth',2);</command>
<command batch="7" error="true">set(gcf,'color','w');</command>
<command batch="7" error="true">%grid on;</command>
<command batch="7" error="true">set(hbar(1), 'FaceColor', [0.33 0.33 0.33]);</command>
<command batch="7" error="true">set(hbar(2), 'FaceColor', [0.8 0.8 0.8]);</command>
<command batch="7" error="true">set(hbar(1), 'BaseValue', -5);</command>
<command batch="7" error="true">set(hbar(2), 'BaseValue', -5);</command>
<command batch="7" error="true">h2 = legend('Non-ablated', 'Ablated', 'Location','SouthEast');</command>
<command batch="7" error="true">set(h2, 'Fontsize', legendfont);</command>
<command batch="7" error="true" execution_time="31786">set(gca,'linewidth',2);</command>
<command batch="8" error="true">font = 25;</command>
<command batch="8" error="true">legendfont = 25;</command>
<command batch="8" error="true">plotcolor = {'r:' 'r--' 'k:' 'k--' 'y--' 'g--' 'c--'};</command>
<command batch="8" error="true">location = 'southeast';</command>
<command batch="8" error="true">boxthick = 2.5;</command>
<command batch="8" error="true">% Focused exposures</command>
<command batch="8" error="true">Y = vertcat(horzcat(mse_decorr_unablated_liver_focused(1),mse_decorr_ablated_liver_focused(1)),...</command>
<command batch="8" error="true">horzcat(mse_decorr_unablated_tumor_focused(1),mse_decorr_ablated_tumor_focused(1)));</command>
<command batch="8" error="true">errY = vertcat(horzcat(mse_decorr_unablated_liver_focused(2),mse_decorr_ablated_liver_focused(2)),...</command>
<command batch="8" error="true">horzcat(mse_decorr_unablated_tumor_focused(2),mse_decorr_ablated_tumor_focused(2)));</command>
<command batch="8" error="true">h = figure;</command>
<command batch="8" error="true">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="8" error="true">[hbar herror] = barwitherr(errY,Y,...</command>
<command batch="8" error="true">'grouped','EdgeColor', 'k', 'LineWidth', 2);</command>
<command batch="8" error="true">set(gca, 'YLim', [-6.5, -1]);</command>
<command batch="8" error="true">set(gca,'XTickLabel',{'Normal Tissue','VX2 Tumor'},'FontSize',font)</command>
<command batch="8" error="true">ylabel('log_{10}(Echo decorrelation)')</command>
<command batch="8" error="true">set(herror, 'LineWidth',2);</command>
<command batch="8" error="true">set(gcf,'color','w');</command>
<command batch="8" error="true">%grid on;</command>
<command batch="8" error="true">set(hbar(1), 'FaceColor', [0.33 0.33 0.33]);</command>
<command batch="8" error="true">set(hbar(2), 'FaceColor', [0.8 0.8 0.8]);</command>
<command batch="8" error="true">set(hbar(1), 'BaseValue', -5);</command>
<command batch="8" error="true">set(hbar(2), 'BaseValue', -5);</command>
<command batch="8" error="true">h2 = legend('Non-ablated', 'Ablated', 'Location','SouthEast');</command>
<command batch="8" error="true">set(h2, 'Fontsize', legendfont);</command>
<command batch="8" error="true">set(gca,'linewidth',2);</command>
<command batch="8" error="true">% Asterixs</command>
<command batch="8" error="true">asterix = [p_unpaired_decorr_focused_liver_nonvsabl p_unpaired_decorr_focused_tumor_nonvsabl ...</command>
<command batch="8" error="true">p_unpaired_decorr_focused_unablated_tumorvsliver p_unpaired_decorr_focused_ablated_tumorvsliver];</command>
<command batch="8" error="true">numgroups=size(Y, 1);</command>
<command batch="8" error="true">numbars=size(Y, 2);</command>
<command batch="8" error="true">for i=1:numbars</command>
<command batch="8" error="true">x=get(get(hbar(i), 'children'), 'xdata');</command>
<command batch="8" error="true">x=mean(x([1 3],:));</command>
<command batch="8" error="true">pos_bars(i,:)=x;</command>
<command batch="8" error="true">end</command>
<command batch="8" error="true">handles.pos_bars=pos_bars;</command>
<command batch="8" error="true">H = sigstar({[handles.pos_bars(1,1),handles.pos_bars(2,1)],...</command>
<command batch="8" error="true">[handles.pos_bars(1,2),handles.pos_bars(2,2)],...</command>
<command batch="8" error="true">[handles.pos_bars(1,1),handles.pos_bars(1,2)],...</command>
<command batch="8" error="true">[handles.pos_bars(2,1),handles.pos_bars(2,2)]},...</command>
<command batch="8" error="true">asterix);</command>
<command batch="8" error="true">axis square;</command>
<command batch="8" error="true">set(H(:,2),'Fontsize',20);</command>
<command batch="8" error="true" execution_time="4562">export_fig(h, ['HIFUBarPlot.pdf'], '-painters');</command>
<command execution_time="26">p_unpaired_decorr_focused_liver_nonvsabl</command>
<command execution_time="20">asterix</command>
<command batch="9" error="true">for i=1:numbars</command>
<command batch="9" error="true">x=get(get(hbar(i), 'children'), 'xdata');</command>
<command batch="9" error="true">x=mean(x([1 3],:));</command>
<command batch="9" error="true">pos_bars(i,:)=x;</command>
<command batch="9" error="true" execution_time="53">end</command>
<command error="true" execution_time="249">s</command>
<command execution_time="18">x</command>
<command execution_time="109">hbar</command>
<command execution_time="21">get(get(hbar(1), 'children'), 'xdata')</command>
</session>
<session>
<command time_stamp="1508f713724">%-- 10/22/2015 7:06 AM --%</command>
<command execution_time="49">a = ones(10,10,10,10); a(:,1,1,1) = 5;</command>
<command execution_time="18">b = ones(10,10,10,10);</command>
<command execution_time="20">c = sum(a(:,:,1,:),3);</command>
<command execution_time="33">clear all</command>
<command execution_time="18">a = ones(10,10,10,10);</command>
<command execution_time="17">c = sum(a,3);</command>
<command execution_time="25">size(c)</command>
<command execution_time="53">c = squeeze(c);</command>
<command execution_time="7459">figure; imagesc(c(:,:,1))</command>
<command execution_time="18">a = ones(10,10,10,10,10,10);</command>
<command execution_time="19">c = squeeze(sum(a,5));</command>
<command execution_time="22">size(c)</command>
<command error="true" execution_time="216">figure; imagesc(c(1,1,:,:,1));</command>
<command execution_time="79">figure; imagesc(squeeze(c(1,1,:,:,1)));</command>
<command execution_time="22">size(a)</command>
<command execution_time="19">g = a(1,:,[10 10],:,:);</command>
<command execution_time="24">size(g)</command>
<command execution_time="18">a = ones(10,10);</command>
<command execution_time="17">a(2,4:5) = 6;</command>
<command error="true" execution_time="63">[x y] = a == 6;</command>
<command error="true" execution_time="27">[x y] = a(a == 6);</command>
<command execution_time="17">[x y] = find(a == 6);</command>
<command execution_time="24">x</command>
<command execution_time="22">y</command>
<command execution_time="20">size(a)</command>
<command execution_time="22">a(x,y)</command>
<command error="true" execution_time="226" repeat="6">callComputeDecorr</command>
<command execution_time="20">fnSham</command>
<command execution_time="17">length(fnSham)</command>
<command error="true" execution_time="340">callComputeDecorr</command>
<command execution_time="24">fileFolder</command>
<command error="true" execution_time="169">computeDecorr</command>
<command error="true" execution_time="324" repeat="2">callComputeDecorr</command>
<command execution_time="18">size(fnSham)</command>
<command batch="10" error="true">sham = num2str(cell2mat(fnSham(idx)));</command>
<command batch="10" error="true" execution_time="601">fileFolder = [sham(5:8) sham(1:4) '\'];</command>
<command batch="11">sham = num2str(cell2mat(fnSham));</command>
<command batch="11" execution_time="22">fileFolder = [sham(5:8) sham(1:4) '\'];</command>
<command execution_time="18">fileFolder</command>
<command error="true" execution_time="356">callComputeDecorr</command>
<command execution_time="20">fnSham</command>
<command error="true" execution_time="145">computeDecorr</command>
<command error="true" execution_time="5114" repeat="5">callComputeDecorr</command>
<command execution_time="17">whos aziSubROI</command>
<command execution_time="19">whos subROI</command>
<command error="true" execution_time="31942" repeat="2">callComputeDecorr</command>
<command execution_time="17">size(dBIBS)</command>
<command execution_time="18">size(avgIBS)</command>
<command execution_time="23">fnFPS</command>
<command execution_time="19">size(locDecorr)</command>
<command error="true" execution_time="66439">callComputeDecorr</command>
<command execution_time="20" repeat="2">clear all</command>
<command batch="12" error="true">load('11172014_094831_1_decorrmaxIBSmaxDecorrUncorrmaxDecorrCorrcdecfacfsdysigAzsigRA.mat')</command>
<command batch="12" error="true">load('11172014_094831sham_1_decorr.mat')</command>
<command batch="12" error="true" execution_time="128774">callComputeDecorr</command>
<command execution_time="24">sigRa</command>
<command execution_time="27966">callComputeDecorr</command>
<command execution_time="25">clear all</command>
<command execution_time="41">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="22">size(maxDecorrCorr)</command>
<command execution_time="179">figure; imagesc(squeeze(maxDecorrCorr))</command>
<command execution_time="22">size(maxDecorrUncorr)</command>
<command execution_time="18">decorr = squeeze(maxDecorrUncorr);</command>
<command error="true" execution_time="438">figure; imagesc(decorr(1,:,:,end));</command>
<command execution_time="82">figure; imagesc(squeeze(decorr(1,:,:,end)));</command>
<command execution_time="21">size(decorr)</command>
<command execution_time="47">max(max(max(max(decorr))))</command>
<command execution_time="76">figure; imagesc(squeeze(decorr(1,:,:,1)));</command>
<command error="true" execution_time="45">find(decorr = ans)</command>
<command execution_time="28">find(decorr == ans)</command>
<command error="true" execution_time="26">[a b c d e] = find(decorr == ans)</command>
<command error="true" execution_time="24">[a b c d] = find(decorr == ans)</command>
<command execution_time="23">log10(0.0024)</command>
<command execution_time="84">figure; imagesc(squeeze(decorr(2,:,:,end)));</command>
<command execution_time="81">figure; imagesc(log10(squeeze(decorr(2,:,:,end))));</command>
<command execution_time="53">imagesc(log10(squeeze(decorr(2,:,:,1))));</command>
<command execution_time="24">imagesc(log10(squeeze(decorr(2,:,:,2))));</command>
<command execution_time="20">imagesc(log10(squeeze(decorr(2,:,:,3))));</command>
<command execution_time="23">imagesc(log10(squeeze(decorr(2,:,:,4))));</command>
<command execution_time="23">imagesc(log10(squeeze(decorr(2,:,:,3))));</command>
<command execution_time="22">imagesc(log10(squeeze(decorr(2,:,:,5))));</command>
<command execution_time="21">imagesc(log10(squeeze(decorr(2,:,:,6))));</command>
<command execution_time="21">imagesc(log10(squeeze(decorr(2,:,:,7))));</command>
<command execution_time="21">imagesc(log10(squeeze(decorr(2,:,:,8))));</command>
<command execution_time="23">imagesc(log10(squeeze(decorr(2,:,:,7))));</command>
<command execution_time="21">imagesc(log10(squeeze(decorr(2,:,:,9))));</command>
<command execution_time="32">imagesc(log10(squeeze(decorr(1,:,:,9))));</command>
<command execution_time="22">imagesc(log10(squeeze(decorr(1,:,:,2))));</command>
<command execution_time="43038">callComputeDecorr</command>
<command execution_time="26">clear all</command>
<command execution_time="2183">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="17">size(locDecorr)</command>
<command execution_time="17">decorr = squeeze(locDecorr);</command>
<command execution_time="69">figure;</command>
<command execution_time="65">imagesc(squeeze(log10(decorr(1,:,:,1,1))))</command>
<command execution_time="22">imagesc(squeeze(log10(decorr(2,:,:,1,1))))</command>
<command execution_time="20">imagesc(squeeze(log10(decorr(1,:,:,1,1))))</command>
<command execution_time="20">imagesc(squeeze(log10(decorr(1,:,:,2,1))))</command>
<command execution_time="20">imagesc(squeeze(log10(decorr(1,:,:,end,end))))</command>
<command execution_time="21">imagesc(squeeze(log10(decorr(2,:,:,end,end))))</command>
<command execution_time="45004">callComputeDecorr</command>
<command execution_time="48">clear all; close all</command>
<command execution_time="2355">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="70">figure</command>
<command execution_time="19">decorr = squeeze(locDecorr);</command>
<command execution_time="60">imagesc(squeeze(log10(decorr(1,:,:,end,end))))</command>
<command execution_time="17">decorr = maxDecorrCorr;</command>
<command execution_time="21">size(decorr)</command>
<command execution_time="20">64*9</command>
<command execution_time="24">imagesc(squeeze(log10(decorr(1,1,end,end))))</command>
<command execution_time="16">decorr = squeeze(decorr);</command>
<command execution_time="19">max(max(decorr))</command>
<command execution_time="19">log10(ans)</command>
<command execution_time="19">size(maxDecorrCorr)</command>
<command error="true" execution_time="34085" repeat="3">callComputeDecorr</command>
<command execution_time="29">size(noiseFloor)</command>
<command execution_time="18">size(maxDecorrUncorr)</command>
<command error="true" execution_time="24">noiseFloor = min(min(min(maxDecorrUncorr(1,:,x,y,:,:),3),4),6);</command>
<command error="true" execution_time="23">tmp = maxDecorrUncorr(1,:,x,y,:,:);</command>
<command error="true" execution_time="28381" repeat="3">callComputeDecorr</command>
<command execution_time="28">size(noiseFloor)</command>
<command execution_time="18">size(maxDecorrUncorr)</command>
<command execution_time="17">209*64</command>
<command execution_time="25">209*9</command>
<command execution_time="19">size(x)</command>
<command execution_time="18">size(y)</command>
<command error="true" execution_time="27799">callComputeDecorr</command>
<command execution_time="20">size(dynamicThresh)</command>
<command execution_time="66">noiseFloor = squeeze(maxDecorrUncorr(1,interframeidx,x,y,1,cycidx));</command>
<command execution_time="18">size(noiseFloor)</command>
<command execution_time="18">interframeidx</command>
<command execution_time="19">cycidx</command>
<command execution_time="18">size(x)</command>
<command execution_time="19">64*209</command>
<command execution_time="27">noiseFloor = squeeze(maxDecorrUncorr(1,interframeidx,[x y],1,cycidx));</command>
<command execution_time="23">size(noiseFloor)</command>
<command execution_time="23">3486^2</command>
<command execution_time="19">209*64</command>
<command execution_time="17">noiseFloor = squeeze(maxDecorrUncorr(1,interframeidx,[x y],1,:));</command>
<command execution_time="19">size(noiseFloor)</command>
<command execution_time="363">noiseFloor = squeeze(maxDecorrUncorr(1,interframeidx,x,y,1,:));</command>
<command execution_time="18">size(noiseFloor)</command>
<command execution_time="16">tmp = maxDecorrUncorr(1,1,:,:,1,:);</command>
<command execution_time="18">size(tmp)</command>
<command execution_time="15">tmp = squeeze(tmp);</command>
<command execution_time="44212">callComputeDecorr</command>
<command execution_time="23">clear all</command>
<command execution_time="2308">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="20">size(maxDecorrCorr)</command>
<command execution_time="45641">callComputeDecorr</command>
<command execution_time="22">clear all</command>
<command execution_time="2440">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="25">size(maxDecorrCorr)</command>
<command execution_time="65">clear all</command>
<command execution_time="27689">callComputeDecorr</command>
<command execution_time="19">size(dynamicThresh)</command>
<command error="true" execution_time="561">dynammicThresh</command>
<command execution_time="18">dynamicThresh</command>
<command execution_time="17">size(tmp)</command>
<command execution_time="170">figure; imagesc(log10(tmp))</command>
<command execution_time="80">figure; imagesc(BW)</command>
<command execution_time="82">figure; imagesc(log10(tmp))</command>
<command execution_time="21">min(min(tmp(BW(subROIRange,subROIAzi)==1)))</command>
<command execution_time="26">imagesc(tmp(BW(subROIRange,subROIAzi)==1))</command>
<command execution_time="55">imagesc(tmp(find(BW(subROIRange,subROIAzi)==1)))</command>
<command execution_time="26">imagesc(log10(tmp))</command>
<command error="true" execution_time="24">d = tmp(BW(subROIRange,subROIAzi)==1)) - tmp .* BW;</command>
<command error="true" execution_time="39">d = tmp(BW(subROIRange,subROIAzi)==1) - tmp .* BW;</command>
<command execution_time="26">size(tmp)</command>
<command execution_time="23">d = tmp - tmp .* BW;</command>
<command execution_time="22">imagesc(log10(d))</command>
<command execution_time="21">size(noiseFloor)</command>
<command execution_time="20">noiseFloor</command>
<command execution_time="17">noiseFloor = min(min(tmp(BW==1)));</command>
<command execution_time="19">noiseFloor</command>
<command batch="13" error="true">for interframeidx = 1:fnFPS</command>
<command batch="13" error="true">tmp = max(maxDecorrUncorr(1,interframeidx,:,:,1,:),[],6);</command>
<command batch="13" error="true">tmp = squeeze(tmp);</command>
<command batch="13" error="true">noiseFloor = min(min(tmp(BW==1)));</command>
<command batch="13" error="true">dynamicThresh = 10 .* noiseFloor;</command>
<command batch="13" error="true">for cycidx = 1:cycles</command>
<command batch="13" error="true">uncorrected = squeeze(maxDecorrUncorr(1,interframeidx,:,:,cycidx));</command>
<command batch="13" error="true">corrected = squeeze(maxDecorrCorr(interframeidx,:,:,cycidx));</command>
<command batch="13" error="true">% At locations were the correction results in values less than zero</command>
<command batch="13" error="true">% set corrected echo decorrelation to the minimum value in the sham</command>
<command batch="13" error="true">% cumulative echo decorrelation</command>
<command batch="13" error="true">corrected(corrected&lt;=0) = noiseFloor;</command>
<command batch="13" error="true">% Correct echo decorrelation only at locations where uncorrected echo decorrelation</command>
<command batch="13" error="true">% exceeded the dynamic threshold</command>
<command batch="13" error="true">corrected(uncorrected&lt;dynamicThresh) = uncorrected(uncorrected&lt;dynamicThresh);</command>
<command batch="13" error="true">maxDecorrCorr(interframeidx,:,:,cycidx) = corrected;</command>
<command batch="13" error="true">end</command>
<command batch="13" error="true" execution_time="135">end</command>
<command execution_time="21">cycidx</command>
<command batch="14">uncorrected = squeeze(maxDecorrUncorr(1,interframeidx,:,:,cycidx));</command>
<command batch="14" execution_time="28">corrected = squeeze(maxDecorrCorr(interframeidx,:,:,cycidx));</command>
<command batch="15">corrected(corrected&lt;=0) = noiseFloor;</command>
<command batch="15">% Correct echo decorrelation only at locations where uncorrected echo decorrelation</command>
<command batch="15">% exceeded the dynamic threshold</command>
<command batch="15" execution_time="139">corrected(uncorrected&lt;dynamicThresh) = uncorrected(uncorrected&lt;dynamicThresh)</command>
<command execution_time="20">size(corrected)</command>
<command execution_time="18">209*64</command>
<command execution_time="17">tmp = reshape(corrected,209,64);</command>
<command execution_time="23">imagesc(log10(tmp))</command>
<command error="true" execution_time="27450" repeat="2">callComputeDecorr</command>
<command execution_time="20">size(reshape(corrected,nSampNew,nSig))</command>
<command execution_time="27">size(maxDecorrCorr)</command>
<command execution_time="19">size(maxDecorrUncorr(1,:,:,:))</command>
<command execution_time="17">size(avgDecorr)</command>
<command batch="16">maxDecorrUncorr = max(avgDecorr,[],6);</command>
<command batch="16" execution_time="23">maxIBS = max(avgIBS,[],6);</command>
<command execution_time="19">size(maxDecorrUncorr(1,:,:,:))</command>
<command batch="17" error="true">maxDecorrCorr = (maxDecorrUncorr(1,:,:,:) - maxDecorrUncorr(2,:,:,:))./ (1-maxDecorrUncorr(2,:,:,:));</command>
<command batch="17" error="true">for interframeidx = 1:fnFPS</command>
<command batch="17" error="true">tmp = max(maxDecorrUncorr(1,interframeidx,:,:,1,:),[],6);</command>
<command batch="17" error="true">tmp = squeeze(tmp);</command>
<command batch="17" error="true">noiseFloor = min(min(tmp(BW==1)));</command>
<command batch="17" error="true">dynamicThresh = 10 .* noiseFloor;</command>
<command batch="17" error="true">for cycidx = 1:cycles</command>
<command batch="17" error="true">uncorrected = squeeze(maxDecorrUncorr(1,interframeidx,:,:,cycidx));</command>
<command batch="17" error="true">corrected = squeeze(maxDecorrCorr(interframeidx,:,:,cycidx));</command>
<command batch="17" error="true">% At locations were the correction results in values less than zero</command>
<command batch="17" error="true">% set corrected echo decorrelation to the minimum value in the sham</command>
<command batch="17" error="true">% cumulative echo decorrelation</command>
<command batch="17" error="true">corrected(corrected&lt;=0) = noiseFloor;</command>
<command batch="17" error="true">% Correct echo decorrelation only at locations where uncorrected echo decorrelation</command>
<command batch="17" error="true">% exceeded the dynamic threshold</command>
<command batch="17" error="true">corrected(uncorrected&lt;dynamicThresh) = uncorrected(uncorrected&lt;dynamicThresh);</command>
<command batch="17" error="true">maxDecorrCorr(interframeidx,:,:,cycidx) = reshape(corrected,nSampNew,nSig);</command>
<command batch="17" error="true">end</command>
<command batch="17" error="true" execution_time="149">end</command>
<command execution_time="19">size(maxDecorrCorr)</command>
<command execution_time="24">size(maxDecorrUncorr)</command>
<command batch="18" error="true">maxDecorrCorr = (maxDecorrUncorr(1,:,:,:) - maxDecorrUncorr(2,:,:,:))./ (1-maxDecorrUncorr(2,:,:,:));</command>
<command batch="18" error="true">for interframeidx = 1:fnFPS</command>
<command batch="18" error="true">tmp = maxDecorrUncorr(1,interframeidx,:,:);</command>
<command batch="18" error="true">tmp = squeeze(tmp);</command>
<command batch="18" error="true">noiseFloor = min(min(tmp(BW==1)));</command>
<command batch="18" error="true">dynamicThresh = 10 .* noiseFloor;</command>
<command batch="18" error="true">uncorrected = squeeze(maxDecorrUncorr(1,interframeidx,:,:));</command>
<command batch="18" error="true">corrected = squeeze(maxDecorrCorr(interframeidx,:,:));</command>
<command batch="18" error="true">% At locations were the correction results in values less than zero</command>
<command batch="18" error="true">% set corrected echo decorrelation to the minimum value in the sham</command>
<command batch="18" error="true">% cumulative echo decorrelation</command>
<command batch="18" error="true">corrected(corrected&lt;=0) = noiseFloor;</command>
<command batch="18" error="true">% Correct echo decorrelation only at locations where uncorrected echo decorrelation</command>
<command batch="18" error="true">% exceeded the dynamic threshold</command>
<command batch="18" error="true">corrected(uncorrected&lt;dynamicThresh) = uncorrected(uncorrected&lt;dynamicThresh);</command>
<command batch="18" error="true">maxDecorrCorr(interframeidx,:,:) = reshape(corrected,nSampNew,nSig);</command>
<command batch="18" error="true" execution_time="135">end</command>
<command execution_time="21">size(maxDecorrCorr)</command>
<command batch="19">tmp = maxDecorrUncorr(1,interframeidx,:,:);</command>
<command batch="19">tmp = squeeze(tmp);</command>
<command batch="19">noiseFloor = min(min(tmp(BW==1)));</command>
<command batch="19">dynamicThresh = 10 .* noiseFloor;</command>
<command batch="19">uncorrected = squeeze(maxDecorrUncorr(1,interframeidx,:,:));</command>
<command batch="19" execution_time="39">corrected = squeeze(maxDecorrCorr(interframeidx,:,:));</command>
<command execution_time="21">corrected(corrected&lt;=0) = noiseFloor;</command>
<command execution_time="17">corrected(uncorrected&lt;dynamicThresh) = uncorrected(uncorrected&lt;dynamicThresh);</command>
<command execution_time="17">size(corrected)</command>
<command execution_time="25">209*64</command>
<command error="true" execution_time="24">maxDecorrCorr(interframeidx,:,:) = reshape(corrected,nSampNew,nSig);</command>
<command execution_time="21">size(maxDecorrCorr)</command>
<command batch="20" error="true">maxDecorrCorr(1,interframeidx,:,:) = reshape(corrected,nSampNew,nSig);</command>
<command batch="20" error="true" execution_time="46">end</command>
<command execution_time="17">maxDecorrCorr(1,interframeidx,:,:) = reshape(corrected,nSampNew,nSig);</command>
<command execution_time="67">figure</command>
<command error="true" execution_time="284">imagesc(log10(maxDecorrCorr(1,1,:,:)))</command>
<command execution_time="51">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="44772">callComputeDecorr</command>
<command execution_time="45">clear all; close all;</command>
<command execution_time="2245">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="78">figure</command>
<command execution_time="55">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="29">imagesc(log10(squeeze(maxDecorrUncorr(1,1,:,:,end))))</command>
<command execution_time="44883">callComputeDecorr</command>
<command execution_time="56">clear all; close all;</command>
<command execution_time="2518">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="72">figure</command>
<command execution_time="54">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="44828">callComputeDecorr</command>
<command execution_time="28">clear all</command>
<command execution_time="2444">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="72">figure;</command>
<command execution_time="61">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="73007">load('11172014_094831thx_1_correcteddecorr.mat')</command>
<command execution_time="67">figure</command>
<command execution_time="23">imagesc(log10(squeeze(MaxDecorrSub(:,:,end))))</command>
<command execution_time="46222">callComputeDecorr</command>
<command execution_time="23">clear all</command>
<command execution_time="2331">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="77">figure</command>
<command execution_time="63">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command error="true" execution_time="65">imagesc(log10(squeeze(maxDecorrCorr(2,1,:,:))))</command>
<command execution_time="44453">callComputeDecorr</command>
<command execution_time="15">clear al</command>
<command execution_time="21">clear all</command>
<command execution_time="2331">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="66">figure</command>
<command execution_time="58">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="5208">load('11172014_094831thx_1_correcteddecorr.mat')</command>
<command execution_time="74">figure</command>
<command execution_time="24">imagesc(log10(squeeze(MaxDecorrSub(:,:,end))))</command>
<command execution_time="72">figure</command>
<command execution_time="26">imagesc(log10(squeeze(MaxDecorrNoSub(:,:,end))))</command>
<command execution_time="65">figure</command>
<command execution_time="23">imagesc(log10(squeeze(maxDecorrUncorr(2,1,:,:,end))))</command>
<command error="true" execution_time="4401">callComputeDecorr</command>
<command error="true" execution_time="170">computeDecorr</command>
<command execution_time="28435">callComputeDecorr</command>
<command execution_time="19">size(decorrFlag)</command>
<command execution_time="166">figure; plot(decorrFlag)</command>
<command execution_time="85">figure; plot(decorrFlag(:,1))</command>
<command execution_time="76">figure; plot(decorrFlag(:,2))</command>
<command execution_time="19">sum(decorrFlag)</command>
<command execution_time="18">size(locDecorr)</command>
<command execution_time="44941" repeat="2">callComputeDecorr</command>
<command execution_time="21">clear all</command>
<command execution_time="2374">load('11172014_094831_1_testdecorr.mat')</command>
<command execution_time="70">figure;</command>
<command execution_time="62">imagesc(log10(squeeze(locDecorr(2,1,:,:,end))))</command>
<command execution_time="4829">load('11172014_094831thx_1_correcteddecorr.mat')</command>
<command execution_time="70">figure;</command>
<command execution_time="23">imagesc(log10(squeeze(decorrAll(:,:,end,end))))</command>
<command execution_time="20">size(locDecorr)</command>
<command execution_time="19">imagesc(log10(squeeze(locDecorr(2,1,:,:,end,end))))</command>
<command execution_time="32">imagesc(log10(squeeze(locDecorr(1,1,:,:,end,end))))</command>
<command execution_time="20">imagesc(log10(squeeze(locDecorr(2,1,:,:,end,end))))</command>
<command execution_time="19">10^-3.256 - 10^-3.052</command>
<command execution_time="37">log10(ans)</command>
<command execution_time="19">log10(abs(ans))</command>
<command execution_time="20">1/118</command>
<command batch="21">load('11172014_094831sham_1_decorr.mat')</command>
<command batch="21" execution_time="76183">title('old code')</command>
<command execution_time="49">imagesc(log10(squeeze(decorrAll(:,:,end,end))))</command>
<command execution_time="24">title('old code')</command>
<command execution_time="25">imagesc(log10(squeeze(locDecorr(1,1,:,:,end,end))))</command>
<command execution_time="21">imagesc(log10(squeeze(locDecorr(1,1,:,:,1,end))))</command>
<command execution_time="21">imagesc(log10(squeeze(locDecorr(1,1,:,:,2,end))))</command>
<command execution_time="20">imagesc(log10(squeeze(locDecorr(1,1,:,:,3,end))))</command>
<command execution_time="21">imagesc(log10(squeeze(locDecorr(1,1,:,:,10,end))))</command>
<command execution_time="24">imagesc(log10(squeeze(locDecorr(1,1,:,:,80,end))))</command>
<command execution_time="25">imagesc(log10(squeeze(locDecorr(1,1,:,:,10,end))))</command>
<command execution_time="16">tmp1 = locDecorr(1,1,36,53,10,end);</command>
<command execution_time="19">tmp1</command>
<command execution_time="17">tmp1 = locDecorr(1,1,53,36,10,end);</command>
<command execution_time="22">tmp1</command>
<command execution_time="21">log10(tmp1)</command>
<command execution_time="16">tmp1 = squeeze(locDecorr(1,1,53,36,:,:));</command>
<command error="true" execution_time="207">tmp2 = squeeze(decorrAll(53,36,:,:);</command>
<command execution_time="17">tmp2 = squeeze(decorrAll(53,36,:,:));</command>
<command execution_time="84">figure; imagesc(tmp2-tmp1)</command>
<command execution_time="26">min(min(tmp2-tmp1))</command>
<command execution_time="19">log10(ans)</command>
<command execution_time="48">imagesc(log10(squeeze(locDecorr(1,1,:,:,10,end))))</command>
<command execution_time="67">figure</command>
<command execution_time="25">imagesc(log10(squeeze(decorrAll(:,:,10,end))))</command>
<command execution_time="34">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="76139">callComputeDecorr</command>
<command execution_time="31">clear all</command>
<command execution_time="3651">load('07022014_122407_1_testdecorr.mat')</command>
<command execution_time="62">figure;</command>
<command execution_time="62">imagesc(log10(squeeze(maxDecorrCorr(1,1,:,:))))</command>
<command execution_time="95389">load('07022014_122407thx_1_correcteddecorr.mat')</command>
<command execution_time="62">figure;</command>
<command execution_time="32">imagesc(log10(squeeze(MaxDecorrSub(:,:,end,end))))</command>
<command execution_time="62">figure;</command>
<command execution_time="16">imagesc(log10(squeeze(locDecorr(2,1,:,:,end,end))))</command>
<command execution_time="78">figure</command>
<command execution_time="32">imagesc(log10(squeeze(decorrAll(:,:,end,end))))</command>
<command execution_time="280">clear all; close all;</command>
<command error="true" execution_time="10289">callComputeDecorr</command>
<command execution_time="15">clear all</command>
<command execution_time="43092">callComputeDecorr</command>
<command execution_time="31">noiseFloor = min(min(tmp(BW(subROIRange,subROIAzi)==1)));</command>
<command execution_time="16">size(noiseFloor)</command>
<command execution_time="16">noiseFloor</command>
<command execution_time="16">size(BW)</command>
<command execution_time="16">size(subROIRange)</command>
<command execution_time="16">size(subROIAzi)</command>
<command execution_time="31">max(subROIRange)</command>
<command execution_time="16">min(subROIRange)</command>
<command execution_time="16">size(tmp)</command>
<command execution_time="32">noiseFloor = min(min(tmp(BW(1:209,1:64)==1)));</command>
<command execution_time="15">noiseFloor</command>
<command execution_time="16">noiseFloor = min(min(tmp(BW==1)));</command>
<command execution_time="31">noiseFloor</command>
<command execution_time="16">noiseFloor = min(min(tmp(BW(1:202,1:64)==1)));</command>
<command execution_time="31">noiseFloor</command>
<command execution_time="16">noiseFloor = min(min(tmp(BW(1:150,1:64)==1)));</command>
<command execution_time="16">noiseFloor</command>
<command execution_time="62994">callComputeDecorr</command>
<command error="true" execution_time="374">size(maxIBS)</command>
<command execution_time="31">clear all</command>
<command execution_time="3619">load('07022014_122407_1test_decorr.mat')</command>
<command execution_time="15">size(maxIBS)</command>
<command execution_time="16">size(maxDecorrUncorr)</command>
<command execution_time="16">size(maxDecorrCorr)</command>
<command execution_time="16">a = 5.*ones(10,10,10,10);</command>
<command execution_time="15">b = ones(10,10,10,10);</command>
<command execution_time="16">c = horzcat(a,b);</command>
<command execution_time="19">size(c)</command>
<command error="true" execution_time="38515">callComputeDecorr</command>
<command execution_time="21">size(dBIBS)</command>
<command execution_time="641">dBIBS(:,:,:,fnFPS)</command>
<command error="true" execution_time="36527">callComputeDecorr</command>
<command error="true" execution_time="511">interframeArray</command>
<command execution_time="28">interFrameArray</command>
<command execution_time="18">size(dBIBS)</command>
<command execution_time="28">subROIRange</command>
<command execution_time="17">size(subROIAzi)</command>
<command execution_time="16">size(dBIBS)</command>
<command execution_time="16">cycles</command>
<command error="true" execution_time="37931">callComputeDecorr</command>
<command execution_time="19">size(dBIBS)</command>
<command error="true" execution_time="37516">callComputeDecorr</command>
<command execution_time="20">size(dBIBS)</command>
<command batch="22" error="true">dBIBS(subROIRange,subROIAzi,:,interFrameArray,:) = ...</command>
<command batch="22" error="true" execution_time="34">10.*log10(avgIBS(subROIRange,subROIAzi,:,2,:)./avgIBS(subROIRange,subROIAzi,:,1,:));</command>
<command error="true" execution_time="37987">callComputeDecorr</command>
<command execution_time="19">size(dBIBS)</command>
<command batch="23" error="true">dBIBS(subROIRange,subROIAzi,:,interFrameArray,1) = ...</command>
<command batch="23" error="true" execution_time="83">10.*log10(avgIBS(subROIRange,subROIAzi,:,:,2)./avgIBS(subROIRange,subROIAzi,:,:,2));</command>
<command execution_time="20">size(avgIBS)</command>
<command execution_time="19">size(locIBS)</command>
<command execution_time="19">size(avgDecorr)</command>
<command batch="24">% Sham and uncorrected echo decorrelation</command>
<command batch="24">avgDecorr = sum(locDecorr,3)./ sum(decorrFlag(:,1));</command>
<command batch="24">% Sham IBS</command>
<command batch="24" execution_time="101">avgIBS = sum(locIBS,3)./ sum(decorrFlag(:,1));</command>
<command execution_time="18">size(avgDecorr)</command>
<command batch="25">dBIBS(subROIRange,subROIAzi,:,interFrameArray,1) = ...</command>
<command batch="25" execution_time="27">10.*log10(avgIBS(subROIRange,subROIAzi,:,:,2)./avgIBS(subROIRange,subROIAzi,:,:,1));</command>
<command execution_time="20">size(dBIBS)</command>
<command execution_time="64431">callComputeDecorr</command>
<command execution_time="22">clear all</command>
<command execution_time="4051">load('07022014_122407_1_test_decorr.mat')</command>
<command execution_time="70">figure;</command>
<command execution_time="59">imagesc(squeeze(log10(maxDecorrCorr(:,:,end,2))));</command>
<command execution_time="20">imagesc(squeeze(log10(maxDecorrCorr(:,:,end,1))));</command>
<command execution_time="29">imagesc(squeeze(log10(maxDecorrUncorr(:,:,end,2))));</command>
<command execution_time="26">imagesc(squeeze(log10(maxDecorrUncorr(:,:,end,1))));</command>
<command execution_time="18">size(maxDecorrUncorr)</command>
<command execution_time="19">imagesc(squeeze(log10(maxDecorrUncorr(:,:,1,end,1,2))));</command>
<command execution_time="26">imagesc(squeeze(log10(maxDecorrUncorr(:,:,1,end,1,1))));</command>
<command execution_time="24">imagesc(squeeze(log10(maxDecorrUncorr(:,:,1,1,1,2))));</command>
<command execution_time="20">imagesc(squeeze(log10(maxDecorrUncorr(:,:,1,3,1,2))));</command>
<command execution_time="20">size(maxDecorrCorr)</command>
<command execution_time="21">imagesc(squeeze(log10(maxDecorrCorr(:,:,1,1))));</command>
<command execution_time="37838" repeat="2">callComputeDecorr</command>
<command execution_time="22">clear all</command>
<command execution_time="29">load('07022014_122407_1_test_decorr.mat')</command>
<command execution_time="69">figure;</command>
<command execution_time="21">size(maxDecorrCorr)</command>
<command execution_time="60">imagesc(squeeze(log10(maxDecorrCorr)))</command>
<command execution_time="17">a = 5.*ones(10,10,10,10);</command>
<command execution_time="23">b = ones(10,10,10,10);</command>
<command execution_time="190">c = cat(3,a,b)</command>
<command execution_time="17">size(c)</command>
<command error="true" execution_time="6367">VX2_invivo_decorrelation_stats</command>
</session>
<session>
<command time_stamp="15091eaf3fa">%-- 10/22/2015 6:38 PM --%</command>
<command error="true" execution_time="93777">callComputeDecorr</command>
<command execution_time="32">clear all</command>
<command execution_time="37471">load('07022014_122407_1test_decorr.mat')</command>
<command execution_time="711">figure;</command>
<command execution_time="23">size(maxDecorrCorr)</command>
<command execution_time="19">tmp = squeeze(maxDecorrCorr);</command>
<command execution_time="10259">imagesc(log10(tmp))</command>
<command error="true" execution_time="521">callComputeDecorr</command>
<command execution_time="31">fnThx</command>
<command error="true" execution_time="342">callComputeDecorr</command>
<command execution_time="33">fnThxTmp</command>
<command execution_time="23">fnShamTmp</command>
<command execution_time="25">fileFolder</command>
<command error="true" execution_time="616">callComputeDecorr</command>
<command execution_time="29">rootPN</command>
<command execution_time="28">fileFolder</command>
<command execution_time="22">fnSham</command>
<command execution_time="31">sham</command>
<command error="true" execution_time="786">callComputeDecorr</command>
<command error="true" execution_time="561">fn_Sham</command>
<command execution_time="392">callComputeDecorr</command>
<command execution_time="26">fn_Sham</command>
<command execution_time="22">fn_Thx</command>
<command execution_time="34">whos fn_Thx</command>
<command error="true" execution_time="311">num2str(cell2mat(fn_Sham))</command>
<command batch="26" error="true">load([rootPN fileFolder fnSham '_archive.mat'],'BW','decfac','dy','fcenter',...</command>
<command batch="26" error="true" execution_time="1350">'frametime','fs','izmax','izmin','scanRFAll','timestamp'); % thx. RF data</command>
<command execution_time="32">load(globalVars);</command>
<command batch="27" error="true">load([rootPN fileFolder fnSham '_archive.mat'],'BW','decfac','dy','fcenter',...</command>
<command batch="27" error="true" execution_time="95">'frametime','fs','izmax','izmin','scanRFAll','timestamp'); % thx. RF data</command>
<command execution_time="33">whos rootPN</command>
<command execution_time="29">whos fileFolder</command>
<command batch="28" error="true">load([rootPN fileFolder fn_Sham '_archive.mat'],'BW','decfac','dy','fcenter',...</command>
<command batch="28" error="true">'frametime','fs','izmax','izmin','scanRFAll','timestamp'); % thx. RF data</command>
<command batch="28" error="true" execution_time="55">fn = fn_Sham</command>
<command execution_time="31">fileFolder</command>
<command execution_time="22">sham</command>
<command error="true" execution_time="371" repeat="2">thx</command>
<command batch="29" error="true">sham = num2str(cell2mat(fn_Sham));</command>
<command batch="29" error="true">thx = num2str(cell2mat(fn_Thx));</command>
<command batch="29" error="true">fileFolder = [sham(5:8) sham(1:4) '\'];</command>
<command batch="29" error="true">fnSham = [sham 'sham'];</command>
<command batch="29" error="true" execution_time="331">fnThx = [thx 'thx'];</command>
<command error="true" execution_time="1013888">callComputeDecorr</command>
</session>
<session>
<command time_stamp="1509494f6a6">%-- 10/23/2015 7:03 AM --%</command>
<command execution_time="108">a=cat(3,ones(10,10),ones(10,10));</command>
<command error="true" execution_time="144">test.2 = 1;</command>
<command error="true" execution_time="69">struct test</command>
<command batch="30">field = 'group';</command>
<command batch="30">value = {'focused','unfocused','both'};</command>
<command batch="30">struct(field,value);</command>
<command batch="30">group.focused = [1 10];</command>
<command batch="30">group.unfocused = [11:20];</command>
<command batch="30" execution_time="2837">group.both = [1:20];</command>
<command execution_time="857">size(field)</command>
<command execution_time="263">size(group)</command>
<command execution_time="85">group</command>
<command execution_time="42">fieldnames(group)</command>
<command execution_time="58">size(ans)</command>
<command execution_time="116">a = size(ans)</command>
<command execution_time="24">a</command>
<command execution_time="23">a(1)</command>
<command execution_time="21">group</command>
<command execution_time="19">group(1)</command>
<command error="true" execution_time="561">group(2)</command>
<command execution_time="35">f = fieldnames(group);</command>
<command execution_time="20">f</command>
<command execution_time="90">f(1)</command>
<command error="true" execution_time="135">value = getfield(group)</command>
<command error="true" execution_time="1324">groups</command>
<command execution_time="22">group</command>
<command execution_time="20">group.focused</command>
<command error="true" execution_time="18">group.1</command>
<command batch="31" error="true">field = 'group';</command>
<command batch="31" error="true">value = {'focused','unfocused','both'};</command>
<command batch="31" error="true">struct(field,value);</command>
<command batch="31" error="true">group.1 = [1 10];</command>
<command batch="31" error="true">group.2 = [11:20];</command>
<command batch="31" error="true" execution_time="96">group.3 = [1:20];</command>
<command execution_time="20">group</command>
<command execution_time="21">group(1)</command>
<command execution_time="21">size(ans)</command>
<command execution_time="20">ans</command>
<command error="true" execution_time="381">field = fieldname(group)</command>
<command execution_time="23">field = fieldnames(group)</command>
<command execution_time="19">field(1)</command>
<command error="true" execution_time="104">value = getfield(group,field(1))</command>
<command error="true" execution_time="24">value = getfield(group,field)</command>
<command execution_time="21">value = getfield(group,field{1})</command>
<command execution_time="40">value = getfield(group,field{2})</command>
<command execution_time="18">a = ones(10,10,10,10);</command>
<command error="true" execution_time="2846">callComputeDecorr</command>
<command execution_time="20">fileFolder</command>
</session>
<session>
<command time_stamp="150966b77cc">%-- 10/23/2015 3:37 PM --%</command>
<command error="true" execution_time="328">computeDecorr</command>
<command error="true" execution_time="218" repeat="4">callComputeDecorr</command>
<command execution_time="16">whos rootPN</command>
<command execution_time="15">whos fnThx(calldecorridx)</command>
<command execution_time="16">fnThx(calldecorridx)</command>
<command execution_time="15">rootPN</command>
<command execution_time="78">mat2str(cell2mat(fnThx(calldecorridx)))</command>
<command execution_time="25">whos ans</command>
<command execution_time="15">whos fnThx</command>
<command error="true" execution_time="266">callComputeDecorr</command>
<command execution_time="16">resultname</command>
<command execution_time="16">whos ans</command>
<command execution_time="15">whos resultname</command>
<command execution_time="4760">mat2str(cell2mat(fnThx(calldecorridx)))</command>
<command execution_time="16">whos ans</command>
<command batch="32">[rootPN fileFolder mat2str(cell2mat(fnThx(calldecorridx)))...</command>
<command batch="32">resultname '_decorr.mat'</command>
<command batch="32" execution_time="5603">]</command>
<command error="true" execution_time="313">callComputeDecorr</command>
<command error="true" execution_time="447">ridxFnThx</command>
<command execution_time="31">idxFnThx</command>
<command execution_time="16">idxFnSham</command>
<command execution_time="16">fileFolder</command>
<command execution_time="15">length(idxFnThx)</command>
<command execution_time="15">fileFolder</command>
<command execution_time="16">idxFnThx(5:8)</command>
<command error="true" execution_time="326">idFnThx(1)</command>
<command execution_time="15">idxFnThx(1)</command>
<command execution_time="16">idxFnThx(2)</command>
<command execution_time="15">idxFnThx</command>
<command execution_time="31">foo = fnThx(1)</command>
<command execution_time="16">foo(1)</command>
<command execution_time="16">fileFolder = [idxFnThx(6:9) idxFnThx(2:5) '\'];</command>
<command execution_time="15">fileFolder</command>
<command error="true" execution_time="249">callComputeDecorr</command>
<command execution_time="15">whos fnThx</command>
<command execution_time="31">char(fnThx(1))</command>
<command execution_time="31">whos ans</command>
<command execution_time="15">ans(1)</command>
<command batch="33" error="true">idxFnThx = char(fnThx(idx));</command>
<command batch="33" error="true">idxFnSham = char(fnSham(idx));</command>
<command batch="33" error="true">fileFolder = [idxFnThx(5:8) idxFnThx(3:6) '\'];</command>
<command batch="33" error="true">load([rootPN fileFolder char(fnThx(idx))...</command>
<command batch="33" error="true">resultname '_decorr.mat'],...</command>
<command batch="33" error="true" execution_time="62">'maxIBS','maxDecorrUncorr','maxDecorrCorr');</command>
<command execution_time="32">idxFnThx</command>
<command batch="34" error="true">idxFnThx = char(fnThx(idx));</command>
<command batch="34" error="true">idxFnSham = char(fnSham(idx));</command>
<command batch="34" error="true">fileFolder = [idxFnThx(5:8) idxFnThx(1:4) '\'];</command>
<command batch="34" error="true">load([rootPN fileFolder char(fnThx(idx))...</command>
<command batch="34" error="true">resultname '_decorr.mat'],...</command>
<command batch="34" error="true" execution_time="46">'maxIBS','maxDecorrUncorr','maxDecorrCorr');</command>
</session>
<session>
<command time_stamp="150a442252f">%-- 10/26/2015 8:06 AM --%</command>
<command error="true" execution_time="841343" repeat="3">callComputeDecorr</command>
<command error="true" execution_time="70">computeDecorr</command>
<command error="true" execution_time="1526" repeat="2">callComputeDecorr</command>
<command error="true" execution_time="419">fnHist</command>
<command execution_time="43">FnHist</command>
<command error="true" execution_time="950" repeat="3">callComputeDecorr</command>
<command execution_time="48">clear all; close all;</command>
<command execution_time="530">callComputeDecorr</command>
<command execution_time="19">size(FPR)</command>
<command execution_time="22">size(TPR)</command>
<command execution_time="22">numPredictors</command>
<command execution_time="27">size(predictor)</command>
<command execution_time="20">size(maxDecorrUncorrROC)</command>
<command execution_time="766" repeat="2">callComputeDecorr</command>
<command execution_time="22">size(maskTreated)</command>
<command execution_time="22">size(maskpandn)</command>
<command execution_time="21">size(maxDecorrUncorrROC)</command>
<command batch="35">maskTreated(maxDecorrUncorrROC==-12)=3;</command>
<command batch="35" execution_time="22">maskAblated(maxDecorrUncorrROC==-12)=3;</command>
<command execution_time="20">size(maxDecorrUncorrROC)</command>
<command execution_time="20">size(maskTreated)</command>
<command execution_time="13261">figure; imagesc(maxDecorrUncorrROC)</command>
<command execution_time="79">figure; imagesc(maskpandn)</command>
<command execution_time="76">figure; imagesc(maskn)</command>
<command execution_time="19">[x y] = find(maxDecorrUncorrROC&lt;=-12);</command>
<command execution_time="859">x</command>
<command execution_time="20">size(x)</command>
<command execution_time="19">size(y)</command>
<command execution_time="16">maskTreated = reshape(maskTreated,size(maxDecorrUncorrROC,1),size(maxDecorrUncorrROC,2));</command>
<command execution_time="22">size(maskTreated)</command>
<command execution_time="22">imagesc(maskTreated)</command>
<command execution_time="74">figure</command>
<command execution_time="24">imagesc(maskTreated)</command>
<command execution_time="80">figure; imagesc(maskpandn)</command>
<command execution_time="25">[x y] = find(maxDecorrUncorrROC&lt;=-12);</command>
<command execution_time="27318">foo = maskpandn; foo(x,y) = 3;</command>
<command execution_time="83">figure; imagesc(foo)</command>
<command execution_time="21">size(maxDecorrUncorrROC)</command>
<command execution_time="21">size(maskTreated)</command>
<command execution_time="86">figure; imagesc(maskTreated)</command>
<command execution_time="84">figure; imagesc(maskAblated)</command>
<command execution_time="19">a = ones(10,10);</command>
<command execution_time="17">a(a==1) = 5;</command>
<command error="true" execution_time="315">A</command>
<command execution_time="25">a</command>
<command execution_time="1719">callComputeDecorr</command>
<command execution_time="20">size(maskTreated)</command>
<command execution_time="23">size(maskAblated)</command>
<command execution_time="573">clear all; close all</command>
<command error="true" execution_time="671">callComputeDecorr</command>
<command execution_time="59">clear all; close all;</command>
<command execution_time="358">callComputeDecorr</command>
<command execution_time="21">size(maskAblated)</command>
<command execution_time="20">size(maskTreated)</command>
<command execution_time="17">a = ones(10,10);</command>
<command execution_time="16">b = ones(10,10);</command>
<command execution_time="16">a(b==1) = 5;</command>
<command execution_time="21">a</command>
<command batch="36">load(fnHist,'maskpandn','maskn');</command>
<command batch="36">% INITIALIZE BUFFERS</command>
<command batch="36">maskTreated=zeros(size(maskpandn));</command>
<command batch="36">maskAblated=maskTreated;</command>
<command batch="36">% ADJUST HISTOLOGY MASKS SO THAT ONLY PREDICTIONS WHERE PULSE-ECHO DATA</command>
<command batch="36">% AND HISTOLOGY EXIST ARE ANALYZE</command>
<command batch="36">maskTreated(maxDecorrUncorrROC==-12)=3;</command>
<command batch="36" execution_time="79">maskAblated(maxDecorrUncorrROC==-12)=3;</command>
<command execution_time="20">size(maskTreated)</command>
<command execution_time="20">size(maskAblated)</command>
<command execution_time="162">figure; imagesc(maskAblated)</command>
<command execution_time="82">figure; imagesc(maskTreated)</command>
<command execution_time="84">figure; imagesc(maxDecorrUncorrROC)</command>
<command error="true" execution_time="110">figure; imagesc(mskpandn)</command>
<command execution_time="93">figure; imagesc(maskpandn)</command>
<command batch="37">load(fnHist,'maskpandn','maskn');</command>
<command batch="37">% INITIALIZE BUFFERS</command>
<command batch="37">maskTreated=maskpandn;</command>
<command batch="37">maskAblated=maskn;</command>
<command batch="37">% ADJUST HISTOLOGY MASKS SO THAT ONLY PREDICTIONS WHERE PULSE-ECHO DATA</command>
<command batch="37">% AND HISTOLOGY EXIST ARE ANALYZE</command>
<command batch="37">maskTreated(maxDecorrUncorrROC==-12)=3;</command>
<command batch="37" execution_time="99">maskAblated(maxDecorrUncorrROC==-12)=3;</command>
<command execution_time="194">close all</command>
<command execution_time="90">figure; imagesc(maskTreated)</command>
<command execution_time="87">figure; imagesc(maskAblated)</command>
<command execution_time="830" repeat="2">callComputeDecorr</command>
<command execution_time="20">size(AUROC)</command>
<command execution_time="20">size(TPR)</command>
<command execution_time="21">TPR</command>
<command execution_time="19">len</command>
<command execution_time="19">thresh</command>
<command execution_time="18">threshIBS</command>
<command execution_time="17">threshDecorr</command>
<command execution_time="18">threshIBS</command>
<command error="true" execution_time="857">callComputeDecorr</command>
<command execution_time="19">numClass</command>
<command execution_time="19">numPredictors</command>
<command execution_time="20">len</command>
<command execution_time="46">thresh</command>
<command execution_time="5367">callComputeDecorr</command>
<command execution_time="19">size(TPR)</command>
<command execution_time="19">size(len)</command>
<command execution_time="19">size(thresh)</command>
<command error="true" execution_time="21">size(TPR_</command>
<command execution_time="19">size(TPR)</command>
<command error="true" execution_time="316">AUROC = trapz(FPR, TPR, 3)</command>
<command error="true" execution_time="6044" repeat="4">callComputeDecorr</command>
<command execution_time="24">N</command>
<command execution_time="19">size(maxDecorrCorr)</command>
<command execution_time="19">size(maxDecorrUncorr)</command>
<command error="true" execution_time="5912" repeat="2">callComputeDecorr</command>
<command execution_time="23">size(tmpMaxDecorrUncorr)</command>
<command execution_time="21">size(maxDecorrUncorrROC)</command>
<command error="true" execution_time="6016">callComputeDecorr</command>
<command error="true" execution_time="408">tmpMaxIBS = reshape(tmpmaxIBS,nSig,nRange,N);</command>
<command execution_time="17">tmpMaxIBS = reshape(tmpMaxIBS,nSig,nRange,N);</command>
<command execution_time="21">predictor = cat(2,tmpMaxDecorrUncorr,tmpMaxDecorrCorr,tmpMaxIBS);</command>
<command error="true" execution_time="306">barPlot(predictor,class,group,fn);</command>
<command execution_time="20">log10(200)/log10(2)</command>
<command execution_time="20">ans + 43</command>
<command execution_time="19">2 ^ (ans - 43)</command>
</session>
<session>
<command time_stamp="150a93f9cb4">%-- 10/27/2015 7:22 AM --%</command>
<command execution_time="81">2 ^(60-43)</command>
<command execution_time="23">2 ^(46-43)</command>
<command execution_time="22">ans * (60*60)/60</command>
<command execution_time="21">2 ^(45-43)</command>
<command execution_time="35">ans * (60*60)/60</command>
<command execution_time="23">2^(50-43)</command>
<command execution_time="35">ans * (1/60)</command>
<command execution_time="31">log10(480*60)/log10(2)</command>
<command execution_time="30">ans + 43</command>
<command execution_time="30">2 ^ (51-43)</command>
<command execution_time="28">ans * 1/60</command>
<command execution_time="29">2 ^(60-43)</command>
<command execution_time="30">ans * 1/60</command>
<command execution_time="31">2 ^ (57.8-43)</command>
<command execution_time="41">ans * 1/60</command>
<command execution_time="23">2 ^ (46-43)</command>
<command execution_time="23">ans * (60*60)/60</command>
<command execution_time="23">2 ^ (45-43)</command>
<command execution_time="22">ans * 60</command>
</session>
<session>
<command time_stamp="150a9edb88f">%-- 10/27/2015 10:32 AM --%</command>
<command execution_time="38166" repeat="2">templateLiner</command>
<command execution_time="20" repeat="2">model</command>
<command error="true" execution_time="20">model.data(1,1:10</command>
<command execution_time="20">model.data(1,1:10)</command>
<command execution_time="20">model.data(end,1:10)</command>
<command execution_time="340">figure; plot(model.data(:,1))</command>
<command execution_time="80">figure; plot(model.data(1,:))</command>
<command execution_time="70">figure; plot(model.data(:,10))</command>
<command execution_time="150">close all</command>
<command execution_time="7351">templateLiner</command>
<command execution_time="10">model</command>
<command execution_time="5871">templateLiner</command>
<command execution_time="10">slice_points</command>
<command execution_time="20">point_angle</command>
<command execution_time="20">slice_points</command>
<command execution_time="20">mark4</command>
<command execution_time="10">size(point)</command>
<command execution_time="30">point_angle</command>
<command execution_time="10">slices</command>
<command execution_time="20">slice_values</command>
<command batch="38" error="true" execution_time="70" repeat="3">maintest</command>
<command batch="38" error="true" execution_time="24113">templateLiner</command>
<command error="true" execution_time="5530" repeat="2">templateLiner</command>
<command execution_time="10">vertexX</command>
<command execution_time="10">vertexY</command>
<command execution_time="10">vertexZ</command>
<command execution_time="20">mark4</command>
<command error="true" execution_time="20">data(mark4,:) = [vertexX,vertexY,vertexZ];</command>
<command execution_time="30">size(data)</command>
<command execution_time="10">clear data</command>
<command error="true" execution_time="20">data(mark4) = [vertexX,vertexY,vertexZ];</command>
<command execution_time="30">data(mark4,:) = [vertexX,vertexY,vertexZ];</command>
<command execution_time="20">size(data)</command>
<command execution_time="20">data</command>
<command error="true" execution_time="6800">templateLiner</command>
<command execution_time="20">size(data)</command>
<command execution_time="20">slices</command>
<command execution_time="10">slice_points</command>
<command error="true" execution_time="5431">templateLiner</command>
<command execution_time="20">size(data)</command>
<command execution_time="10">data(mark4,:) = [vertexX,vertexY,vertexZ];</command>
<command execution_time="20">data(1,:)</command>
<command execution_time="10">data(2,:)</command>
<command error="true" execution_time="7211">templateLiner</command>
<command execution_time="20">model</command>
</session>
<session>
<command time_stamp="150aacb1730">%-- 10/27/2015 2:34 PM --%</command>
<command error="true" execution_time="240">win = [1:10;11:20};</command>
<command execution_time="10">win = [1:10;11:20];</command>
<command execution_time="30">win</command>
<command execution_time="20">a = ones(20,20);</command>
<command execution_time="20">a = ones(20,3);</command>
<command execution_time="20">a</command>
<command execution_time="19562">window</command>
<command execution_time="10">win</command>
<command execution_time="20">a(win)</command>
<command execution_time="20">a = a(1:10,:).*5;</command>
<command execution_time="20" repeat="2">a</command>
<command execution_time="30">a = ones(20,3);</command>
<command error="true" execution_time="280">size(a0</command>
<command execution_time="30">size(a)</command>
<command execution_time="20">a = a(1:10,:) * 5;</command>
<command execution_time="20">a</command>
<command execution_time="30">a = ones(20,3);</command>
<command execution_time="20">a(1:10,:) = a(1:10,:) * 5;</command>
<command execution_time="20">a</command>
<command execution_time="20">a(win)</command>
<command execution_time="20">a(win');</command>
<command execution_time="20">a(win')</command>
<command error="true" execution_time="1280">diameter</command>
<command error="true" execution_time="340">radius</command>
<command execution_time="20">x = [0 0 0; 0 0 1; 1 0 0; 0 1 0];</command>
<command execution_time="20">x</command>
<command execution_time="20">mean(x(:,1))</command>
<command execution_time="20">a = ones(10,10,10);</command>
<command execution_time="10">b = a; c = a;</command>
<command execution_time="20">foo = cat(4, a,b,c);</command>
<command execution_time="20">size(foo)</command>
<command execution_time="20">max(foo,[],1)</command>
<command execution_time="20">size(ans)</command>
<command execution_time="20">a = ones(10,10);</command>
<command execution_time="30">b = a; c = a;</command>
<command execution_time="30">foo = cat(3, a,b,c);</command>
<command execution_time="20">max(foo(:,1,:),[],1)</command>
<command execution_time="20">size(ans)</command>
<command execution_time="90">warning('hello')</command>
</session>
<session>
<command time_stamp="150af8501bc">%-- 10/28/2015 12:35 PM --%</command>
<command execution_time="140">clear all; close all;</command>
<command execution_time="14975" repeat="4">callComputeDecorr</command>
<command execution_time="110" repeat="2">figure; imagesc(BW)</command>
<command execution_time="20">size(diffTimeLoc)</command>
<command execution_time="20">diffTimeLoc</command>
<command execution_time="20">size(diffTime)</command>
<command error="true" execution_time="640">difftime</command>
<command execution_time="20">diffTime</command>
<command error="true" execution_time="4462">templateLiner</command>
<command execution_time="50">clear all; close all;</command>
<command error="true" execution_time="10473" repeat="2">templateLiner</command>
<command batch="39" error="true">% FIND OPTIMAL CAP</command>
<command batch="39" error="true">data = model.data;</command>
<command batch="39" error="true">for idx = 1:numCapRadiiMax;</command>
<command batch="39" error="true">height(idx) = min(abs(data(:,1:2)-capRadiiMax(idx)));</command>
<command batch="39" error="true" execution_time="110">end</command>
<command execution_time="20">size(data)</command>
<command execution_time="20">size(capRadiiMax)</command>
<command execution_time="20">capRadiiMax</command>
<command execution_time="20">idx</command>
<command batch="40" error="true">% FIND OPTIMAL CAP</command>
<command batch="40" error="true">data = model.data;</command>
<command batch="40" error="true">for idx = 1:numCapRadiiMax;</command>
<command batch="40" error="true">height(idx) = min(abs(data(:,1:2)-capSet(idx)));</command>
<command batch="40" error="true" execution_time="60">end</command>
<command execution_time="20">idx</command>
<command execution_time="20">min(abs(data(:,1:2)-capSet(idx)))</command>
<command execution_time="20">[M, I] = min(min(abs(data(:,1:2)-capSet(idx))));</command>
<command execution_time="20">I</command>
<command execution_time="9004">templateLiner</command>
<command execution_time="20">height</command>
<command error="true" execution_time="461">numCapRAdiiMax</command>
<command execution_time="20">numCapRadiiMax</command>
<command execution_time="20">capSet</command>
<command execution_time="9427" repeat="2">templateLiner</command>
<command execution_time="20">height</command>
<command execution_time="10">size(tmpX)</command>
<command execution_time="5533">templateLiner</command>
<command execution_time="20">height</command>
<command execution_time="5633">templateLiner</command>
<command execution_time="20">height</command>
<command execution_time="20">[foo idxCap] = min(height);</command>
<command execution_time="20">model.distalEnd = capSet(idxCap);</command>
<command error="true" execution_time="30">model.ditalEnd</command>
<command execution_time="20">model.distalEnd</command>
<command execution_time="210">figure; plot(data(:,1))</command>
<command execution_time="360">open plot3D</command>
<command execution_time="20">model</command>
<command execution_time="70">figure;</command>
<command execution_time="20">data = model.data;</command>
<command execution_time="20">size(data)</command>
<command error="true" execution_time="120">w = smooth3(data,'gaussian',[9,9,9],7);</command>
<command error="true" execution_time="320">openfl</command>
<command execution_time="60">opengl</command>
<command execution_time="180">opengl info</command>
<command error="true" execution_time="7308">templateLiner</command>
<command execution_time="10">model</command>
<command execution_time="20">model.file</command>
<command error="true" execution_time="4035">templateLiner</command>
<command execution_time="10">model</command>
<command execution_time="20">model.layer</command>
<command error="true" execution_time="10977">templateLiner</command>
<command execution_time="20">model</command>
<command execution_time="20">model.layer</command>
<command execution_time="40">clear all;</command>
<command execution_time="20">model.test = 1;</command>
<command execution_time="20">model.test2 = 2;</command>
<command execution_time="20">model</command>
<command execution_time="40">clear all; close all</command>
<command error="true" execution_time="5371">templateLiner</command>
<command error="true" execution_time="80">model</command>
<command execution_time="20" repeat="2">ans</command>
<command execution_time="20">ans.file</command>
<command execution_time="11">ans.test = 1;</command>
<command execution_time="20">ans</command>
<command error="true" execution_time="3844">templateLiner</command>
<command execution_time="20" repeat="2">model</command>
<command error="true" execution_time="20">model.file</command>
<command execution_time="10">global model;</command>
<command execution_time="20">model</command>
<command execution_time="10">model.test = 1;</command>
<command execution_time="10">model</command>
<command execution_time="10">model.test2 = 1;</command>
<command execution_time="20">model</command>
<command error="true" execution_time="4014">templateLiner</command>
<command execution_time="20">model</command>
<command error="true" execution_time="4386">templateLiner</command>
<command execution_time="20">model</command>
<command execution_time="20">capSet</command>
<command execution_time="20">idxCap</command>
<command execution_time="20">height</command>
<command error="true" execution_time="5271">templateLiner</command>
<command execution_time="20">model</command>
</session>
<session>
<command time_stamp="150b3cbe1f1">%-- 10/29/2015 8:31 AM --%</command>
<command error="true" execution_time="873" repeat="3">callComputeDecorr</command>
<command error="true" execution_time="1558">FnHist</command>
<command execution_time="22">fnHist</command>
<command execution_time="31">load(fnHist)</command>
<command execution_time="25">whos maskpandn)</command>
<command execution_time="23">whos maskpandn</command>
<command error="true" execution_time="835">callComputeDecorr</command>
<command error="true" execution_time="313">FnHist</command>
<command error="true" execution_time="892" repeat="2">callComputeDecorr</command>
<command execution_time="1270">class</command>
<command execution_time="17">whos class</command>
<command error="true" execution_time="898">callComputeDecorr</command>
<command execution_time="21">whos thresh</command>
<command execution_time="18">thresh</command>
<command error="true" execution_time="898">callComputeDecorr</command>
<command execution_time="20">threshValues</command>
<command execution_time="20">length(threshValues)</command>
<command error="true" execution_time="7443" repeat="3">callComputeDecorr</command>
<command execution_time="22" repeat="2">fnROC</command>
<command execution_time="6228">callComputeDecorr</command>
<command execution_time="109">clear all; close all;</command>
<command execution_time="27">load('HIFUNormalROC.mat')</command>
<command execution_time="14">tmpFPR = FPR(1,1,:);</command>
<command execution_time="18">tmpFPR = squeeze(FPR(1,1,:));</command>
<command error="true" execution_time="16">tmpTPR = squeeze(TPR(1,1,:)):</command>
<command execution_time="20">tmpTPR = squeeze(TPR(1,1,:));</command>
<command execution_time="7175">figure; plot(tmpFPR,tmpTPR);</command>
<command execution_time="19">size(tmpFPR)</command>
<command execution_time="17">tmpFPR(1:20)</command>
<command execution_time="17">TP(1,1,1:10)</command>
<command execution_time="291">clear all; close all;</command>
<command execution_time="6174">callComputeDecorr</command>
<command execution_time="55">clear all; close all;</command>
<command execution_time="410">callComputeDecorr</command>
<command execution_time="205">figure; imagesc(tmpPredictor)</command>
<command execution_time="81">figure; imagesc(tmpClass)</command>
<command execution_time="26">tmpThresh(1)</command>
<command execution_time="79">figure; plot(tmpThresh)</command>
<command batch="41">I_thresh_pos = find(tmpPredictor &gt;= tmpThresh(len));</command>
<command batch="41" execution_time="25">I_thresh_neg = find(tmpPredictor &lt; tmpThresh(len));</command>
<command batch="42">TP(idxPredictor,idxClass,idx) = sum(sum(tmpClass(I_thresh_pos) == 1));</command>
<command batch="42">TN(idxPredictor,idxClass,idx) = sum(sum(tmpClass(I_thresh_neg) == 0));</command>
<command batch="42">FP(idxPredictor,idxClass,idx) = sum(sum(tmpClass(I_thresh_pos) == 0));</command>
<command batch="42" execution_time="41">FN(idxPredictor,idxClass,idx) = sum(sum(tmpClass(I_thresh_neg) == 1));</command>
<command execution_time="19">TP(1,1,1)</command>
<command error="true" execution_time="138">figure; plot(TP(1,1,:))</command>
<command execution_time="27">plot(squeeze(TP(1,1,:)))</command>
<command execution_time="84">figure; imagesc(tmpPredictor &gt;= tmpThresh(len))</command>
<command error="true" execution_time="468">tmpThres(len)</command>
<command execution_time="26">tmpThresh(len)</command>
<command execution_time="17">len</command>
<command execution_time="430">clear all; close all;</command>
<command execution_time="6180">callComputeDecorr</command>
<command execution_time="18" repeat="2">tmpTPR = squeeze(TPR(1,1,:));</command>
<command execution_time="15">tmpFPR = squeeze(FPR(1,1,:));</command>
<command execution_time="94">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="6594">callComputeDecorr</command>
<command execution_time="23">tmpFPR = squeeze(FPR(1,2,:));</command>
<command execution_time="16">tmpTPR = squeeze(TPR(1,2,:));</command>
<command execution_time="80">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="15">tmpTPR = squeeze(TPR(2,2,:));</command>
<command execution_time="25">tmpFPR = squeeze(FPR(2,2,:));</command>
<command execution_time="20">plot(tmpFPR,tmpTPR)</command>
<command execution_time="77">axis square</command>
<command execution_time="22">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="16">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="74">plot(tmpFPR,tmpTPR)</command>
<command execution_time="25">size(FPR)</command>
<command execution_time="24">thresh</command>
<command execution_time="20">plot(tmpFPR(1:51),tmpTPR(1:51))</command>
<command execution_time="18">tmpFPR(1:10)</command>
<command execution_time="84">figure; imagesc(predictor(:,:,3))</command>
<command execution_time="18">whos maxIBSROC</command>
<command execution_time="52">imagesc(maxIBSROC)</command>
<command execution_time="34">imagesc(maxIBS)</command>
<command execution_time="51957">callComputeDecorr</command>
<command error="true" execution_time="473">figure; imagesc(maxIBS)</command>
<command execution_time="19">whos maxIBS</command>
<command execution_time="83">figure; imagesc(squeeze(maxIBS(2,:,:)))</command>
<command execution_time="81">figure; imagesc(squeeze(avgIBS(2,:,:)))</command>
<command execution_time="19">whos avgIBS</command>
<command execution_time="27">size(avgIBS)</command>
<command batch="43">dBIBS(subROIRange,subROIAzi,:) = ...</command>
<command batch="43" execution_time="31">10.*log10(avgIBS(2,subROIRange,subROIAzi,:,:)./avgIBS(1,subROIRange,subROIAzi,:,:));</command>
<command execution_time="20">size(dBIBS)</command>
<command execution_time="82">figure; imagesc(squeeze(max(dBIBS,[],3)))</command>
<command error="true" execution_time="422">size(avgDecorr)</command>
<command execution_time="50672">callComputeDecorr</command>
<command execution_time="17">size(avgDecorr)</command>
<command execution_time="18">size(dBIBS)</command>
<command error="true" execution_time="22">max(IBS0</command>
<command execution_time="19">size(maxIBS)</command>
<command execution_time="77">figure; imagesc(maxIBS)</command>
<command execution_time="19">size(maxDecorrUncorr)</command>
<command execution_time="19">size(maxDecorrCorr)</command>
<command execution_time="50849">callComputeDecorr</command>
<command error="true" execution_time="595">size(maxDecorrUncoor)</command>
<command execution_time="19">size(maxDecorrUncorr)</command>
<command execution_time="18">size(maxDecorrCorrROC)</command>
<command execution_time="20">size(maxDecorrUncorrROC)</command>
<command execution_time="18">size(maxIBSROC)</command>
<command execution_time="19">size(maxIBS)</command>
<command execution_time="823">callComputeDecorr</command>
<command execution_time="18">size(maxIBS)</command>
<command execution_time="883957">callComputeDecorr</command>
<command execution_time="50">fnROC</command>
<command execution_time="38">load(fnROC);</command>
<command execution_time="30">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="17">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="1490">figure; plot(tmpFPR,tmpTPR)</command>
<command error="true" execution_time="7157">callComputeDecorr</command>
<command execution_time="18">load(fnROC)</command>
<command execution_time="17" repeat="2">tmpFPR = squeeze(FPR(3,2,:));</command>
<command error="true" execution_time="136">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="16">tmpTPR = squeeze(TPR(3,2,:));</command>
<command error="true" execution_time="397">plot(tmpFPR,tmpTPRF)</command>
<command execution_time="23">plot(tmpFPR,tmpTPR)</command>
<command execution_time="51">threshIBS</command>
<command execution_time="18">thresh</command>
<command execution_time="17">tmpFPR = squeeze(FPR(1,2,:));</command>
<command execution_time="24">tmpTPR = squeeze(TPR(1,2,:));</command>
<command execution_time="21">plot(tmpFPR,tmpTPR)</command>
<command execution_time="22">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="16">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="21">plot(tmpFPR,tmpTPR)</command>
<command execution_time="18">whos predictor</command>
<command error="true" execution_time="187">ROC</command>
<command execution_time="9405">callComputeDecorr</command>
<command execution_time="18">whos predictor</command>
<command execution_time="48">imagesc(squeeze(predictor(:,:,3)))</command>
<command execution_time="39">thresh</command>
<command execution_time="27">thresh.threshMaxIBS</command>
<command execution_time="18">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="17">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="84">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="53855">callComputeDecorr</command>
<command execution_time="79">figure; imagesc(maxIBS)</command>
<command error="true" execution_time="312">ROC</command>
<command execution_time="10103">callComputeDecorr</command>
<command execution_time="81">figure; imagesc(squeeze(predictor(:,:,3)))</command>
<command execution_time="20">tmpThresh</command>
<command execution_time="18">idxClass</command>
<command execution_time="19">numClass</command>
<command execution_time="18">size(predictor)</command>
<command execution_time="19">numPredictors</command>
<command execution_time="19">size(predictor)</command>
<command execution_time="17">idxPredictor</command>
<command execution_time="104">figure; imagesc(squeeze(tmpPredictor))</command>
<command execution_time="19">tmpThresh</command>
<command execution_time="19">tmpThresh(1)</command>
<command error="true" execution_time="1196">callComputeDecorr</command>
<command execution_time="18">numPredictors</command>
<command execution_time="19">numClass</command>
<command execution_time="36">load(fnROC)</command>
<command execution_time="32">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="17">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="81">figure; plot(tmpFPR,tmpTPR)</command>
<command error="true" execution_time="6999" repeat="2">callComputeDecorr</command>
<command execution_time="27">tmpThresh</command>
<command execution_time="20">size(I)</command>
<command execution_time="18" repeat="2">i</command>
<command execution_time="19">I</command>
<command execution_time="18">C</command>
<command execution_time="20">thresh</command>
<command execution_time="20">thresh.threshMaxIBS(1)</command>
<command error="true" execution_time="6777">callComputeDecorr</command>
<command execution_time="20">tmpThresh</command>
<command execution_time="18">I</command>
<command execution_time="17">I(1)</command>
<command execution_time="18">C</command>
<command execution_time="19">tmpThresh</command>
<command execution_time="18">I</command>
<command execution_time="17">I = I(:,1);</command>
<command execution_time="17">I</command>
<command batch="44">for idx = 1:numClass</command>
<command batch="44">tmpThresh = getfield(thresh,threshValues{idx});</command>
<command batch="44">optThresh(idx) = tmpThresh(I(idx));</command>
<command batch="44" execution_time="86">end</command>
<command execution_time="19">optThresh</command>
<command execution_time="18">size(tmpThresh)</command>
<command execution_time="18">thresh</command>
<command execution_time="19">numClass</command>
<command batch="45" error="true">for idx = 1:numPredictor</command>
<command batch="45" error="true">tmpThresh = getfield(thresh,threshValues{idx});</command>
<command batch="45" error="true">optThresh(idx) = tmpThresh(I(idx));</command>
<command batch="45" error="true" execution_time="524">end</command>
<command batch="46">for idx = 1:numPredictors</command>
<command batch="46">tmpThresh = getfield(thresh,threshValues{idx});</command>
<command batch="46">optThresh(idx) = tmpThresh(I(idx));</command>
<command batch="46" execution_time="33">end</command>
<command execution_time="19">optThresh</command>
<command execution_time="23">I</command>
<command execution_time="18">idx</command>
<command execution_time="17">size(tmpThresh)</command>
<command execution_time="18">tmpThresh</command>
<command execution_time="16">clear opThresh</command>
<command execution_time="15">clear optThresh</command>
<command batch="47">I = I(:,1);</command>
<command batch="47">for idx = 1:numPredictors</command>
<command batch="47">tmpThresh = getfield(thresh,threshValues{idx});</command>
<command batch="47">optThresh(idx) = tmpThresh(I(idx));</command>
<command batch="47">end</command>
<command batch="47">optFPR = FPR(I);</command>
<command batch="47" execution_time="51">optTPR = TPR(I);</command>
<command execution_time="19">optThresh</command>
<command execution_time="17">optFPR</command>
<command execution_time="19">optTPR</command>
<command execution_time="23">I</command>
<command execution_time="17">size(FPR)</command>
<command execution_time="58">foo = FPR(:,:,I)</command>
<command execution_time="18">size(foo)</command>
<command execution_time="19">size(TPR)</command>
<command execution_time="18">foo(1,1,1)</command>
<command execution_time="18">size(foo)</command>
<command execution_time="19">size(FPR)</command>
<command execution_time="18">foo(:,:,1)</command>
<command execution_time="24">foo(:,:,2)</command>
<command execution_time="17">foo(:,:,3)</command>
<command execution_time="34">foo(:,:,1)</command>
<command execution_time="17">I</command>
<command execution_time="18">size(TPR)</command>
<command execution_time="18">min(TPR,[],3)</command>
<command error="true" execution_time="237">c</command>
<command execution_time="24">C</command>
<command execution_time="20">I</command>
<command execution_time="46">[C I] = min((1-TPR).^2 + FPR.^2,[],3);</command>
<command execution_time="18">I</command>
<command batch="48" error="true">[C I] = min((1-TPR).^2 + FPR.^2,[],3);</command>
<command batch="48" error="true">minDistToCorner = C;</command>
<command batch="48" error="true">for idxPredictor = 1:numPredictors</command>
<command batch="48" error="true">for idxClass = 1:numClass</command>
<command batch="48" error="true">tmpThresh = getfield(thresh,threshValues{idxPredictor});</command>
<command batch="48" error="true">optThresh(idxPredictor,idxClas) = tmpThresh(I(idxPredictor,idxClas));</command>
<command batch="48" error="true">optFPR(idxPredictor,idxClas) = FPR(I(idxPredictor,idxClass));</command>
<command batch="48" error="true">optTPR(idxPredictor,idxClas) = TPR(I(idxPredictor,idxClass));</command>
<command batch="48" error="true">end</command>
<command batch="48" error="true" execution_time="118">end</command>
<command batch="49">[C I] = min((1-TPR).^2 + FPR.^2,[],3);</command>
<command batch="49">minDistToCorner = C;</command>
<command batch="49">for idxPredictor = 1:numPredictors</command>
<command batch="49">for idxClass = 1:numClass</command>
<command batch="49">tmpThresh = getfield(thresh,threshValues{idxPredictor});</command>
<command batch="49">optThresh(idxPredictor,idxClass) = tmpThresh(I(idxPredictor,idxClass));</command>
<command batch="49">optFPR(idxPredictor,idxClass) = FPR(I(idxPredictor,idxClass));</command>
<command batch="49">optTPR(idxPredictor,idxClass) = TPR(I(idxPredictor,idxClass));</command>
<command batch="49">end</command>
<command batch="49" execution_time="75">end</command>
<command execution_time="25">optFPR</command>
<command execution_time="17">optTPR</command>
<command execution_time="17">optThresh</command>
<command error="true" execution_time="185">ROC</command>
<command execution_time="6703">callComputeDecorr</command>
<command execution_time="35" repeat="2">optThresh</command>
<command execution_time="17">optFPR</command>
<command execution_time="17">optTPR</command>
<command execution_time="23">I</command>
<command execution_time="33">optTPR</command>
<command execution_time="34">optFPR</command>
<command execution_time="6734">callComputeDecorr</command>
<command execution_time="18">optFPR</command>
<command execution_time="20">optTPR</command>
<command batch="50" error="true">clear all; close all;</command>
<command batch="50" error="true" execution_time="6721">callComputeDecorr</command>
<command error="true" execution_time="694" repeat="2">callComputeDecorr</command>
<command execution_time="17">fnDecorrCat</command>
<command execution_time="73">clear all</command>
<command execution_time="124">load('HIFUNormal')</command>
<command execution_time="5056" repeat="3">callComputeDecorr</command>
<command execution_time="45">clear all; close all;</command>
<command error="true" execution_time="346">load(fnROC)</command>
<command error="true" execution_time="498" repeat="2">callComputeDecorr</command>
<command execution_time="17">fnHist</command>
<command error="true" execution_time="548">callComputeDecorr</command>
<command execution_time="18">fnHist</command>
<command execution_time="19">load(fnHist)</command>
<command execution_time="18">whos maskAblated</command>
<command execution_time="4845">callComputeDecorr</command>
<command execution_time="24">load(fnROC)</command>
<command execution_time="16">whos FPR</command>
<command execution_time="36">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="15">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="228">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="15">tmpTPR = squeeze(TPR(1,2,:));</command>
<command execution_time="23">tmpFPR = squeeze(FPR(1,2,:));</command>
<command execution_time="22">plot(tmpFPR,tmpTPR)</command>
<command execution_time="19">optFPR</command>
<command execution_time="21">optTPR</command>
<command execution_time="16">tmpFPR = squeeze(FPR(2,2,:));</command>
<command execution_time="19">tmpTPR = squeeze(TPR(2,2,:));</command>
<command execution_time="27">plot(tmpFPR,tmpTPR)</command>
<command error="true" execution_time="471" repeat="2">callComputeDecorr</command>
<command error="true" execution_time="396">fnDeocrrCAT</command>
<command execution_time="17">fnDecorrCat</command>
<command error="true" execution_time="479">callComputeDecorr</command>
<command error="true" execution_time="506">maxDecorrUncorrROC</command>
<command error="true" execution_time="390">fnDecorrCAt</command>
<command execution_time="18">fnDecorrCat</command>
<command execution_time="26">clear all</command>
<command execution_time="60">load('HIFUNormal')</command>
<command error="true" execution_time="357">rootPN</command>
<command batch="51" error="true">load([rootpn fnDecorrCat]);</command>
<command batch="51" error="true" execution_time="388">load([rootpn fnHist]);</command>
<command error="true" execution_time="303">rootpn</command>
<command execution_time="17">rootPN</command>
<command batch="52">load([rootPN fnDecorrCat]);</command>
<command batch="52" execution_time="68">load([rootPN fnHist]);</command>
<command execution_time="28">clear all</command>
<command execution_time="17">load('G:\concatinatedHist\HistHIFUInVivoNormal.mat');</command>
<command execution_time="21">clear all</command>
<command error="true" execution_time="979">callComputeDecorr</command>
<command execution_time="19">rootPNResults</command>
<command execution_time="27">N</command>
<command error="true" execution_time="894" repeat="4">callComputeDecorr</command>
<command execution_time="16">load(fnROC)</command>
<command execution_time="18">whos FPR</command>
<command execution_time="28">tmpTPR = squeeze(TPR(2,2,:));</command>
<command execution_time="17">tmpFPR = squeeze(FPR(2,2,:));</command>
<command execution_time="117">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="21">optTPR</command>
<command execution_time="18">optFPR</command>
<command execution_time="19">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="16">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="82">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="19">thresh</command>
<command error="true" execution_time="444">threshMaxIBS</command>
<command execution_time="27">thresh.threshMaxIBS</command>
<command execution_time="26">threshIBS</command>
<command execution_time="11505" repeat="2">callComputeDecorr</command>
<command execution_time="19">rootPNResults</command>
<command error="true" execution_time="493">callComputeDecorr</command>
<command execution_time="43">clear all; close all;</command>
<command error="true" execution_time="420">callComputeDecorr</command>
<command execution_time="19">rootPNResults</command>
<command execution_time="16">load([rootPNResults fnDecorrCat]);</command>
<command execution_time="39">[rootPNResults fnDecorrCat]</command>
<command error="true" execution_time="486">maxDecorrCorrROC</command>
<command execution_time="94">load('G:\testResults\HIFUNormal.mat')</command>
<command error="true" execution_time="536">maxDecorrCorrROC</command>
<command execution_time="26">clear all</command>
<command execution_time="29">load('G:\testResults\HIFUNormal.mat')</command>
<command error="true" execution_time="488">fnDecorrCatROC</command>
<command error="true" execution_time="346">fnROC</command>
<command execution_time="11929">callComputeDecorr</command>
<command execution_time="24">clear all</command>
<command execution_time="45">load('G:\testResults\HIFUNormal.mat')</command>
<command execution_time="35">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="19">tmpTPR = squeeze(TPR(2,2,:));</command>
<command execution_time="16">tmpFPR = squeeze(FPR(2,2,:));</command>
<command execution_time="128">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="17">optFPR</command>
<command execution_time="17">optTPR</command>
<command execution_time="16">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="16">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="28">plot(tmpFPR,tmpTPR)</command>
<command error="true" execution_time="401">threshIBS</command>
<command execution_time="25">thresh</command>
<command execution_time="25">thresh.threshMaxIBS</command>
<command error="true" execution_time="87">figure; imagesc(maxIBS)</command>
<command execution_time="121">figure; imagesc(maxIBSROC)</command>
<command execution_time="42">max(max(maxIBSROC))</command>
<command execution_time="21">min(min(maxIBSROC))</command>
<command execution_time="12604">callComputeDecorr</command>
<command execution_time="37">clear all</command>
<command execution_time="32">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="18">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="15">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="130">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="24">thresh.threshMaxIBS</command>
<command execution_time="18">min(thresh.threshMaxIBS)</command>
<command error="true" execution_time="428">min(threshIBS)</command>
<command execution_time="12168">callComputeDecorr</command>
<command execution_time="26">threshIBS</command>
<command execution_time="16">min(threshIBS)</command>
<command batch="53">threshIBS = -5:.1:-1;</command>
<command batch="53">treshIBS = cat(2,threshIBS,-1+0.0001:0.0001:1-0.0001);</command>
<command batch="53" execution_time="32">threshIBS = cat(2,1:.1:40);</command>
<command execution_time="19">min(threshIBS)</command>
<command execution_time="16">size(threshIBS)</command>
<command execution_time="16">threshIBS = -5:.1:-1;</command>
<command execution_time="20">min(threshIBS)</command>
<command execution_time="12644">callComputeDecorr</command>
<command execution_time="30">clear all</command>
<command execution_time="36">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="21">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="16">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="126">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="19">thresh</command>
<command execution_time="26">min(thresh.threshMaxIBS)</command>
<command execution_time="12745">callComputeDecorr</command>
<command execution_time="28">clear all</command>
<command execution_time="30">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="18">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="16">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="112">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="19">min(thresh.threshMaxIBS)</command>
<command execution_time="22">clear all</command>
<command execution_time="45">load('G:\testResults\HIFUNormal.mat')</command>
<command execution_time="129">figure; imagesc(maxIBSROC)</command>
<command execution_time="39">min(maxIBSROC)</command>
<command execution_time="20">min(min(maxIBSROC))</command>
<command execution_time="22">max(max(maxIBSROC))</command>
<command error="true" execution_time="409">max(thresh.threshMaxIBS)</command>
<command execution_time="37">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="20">max(thresh.threshMaxIBS)</command>
<command execution_time="18">size(thresh.threshMaxIBS)</command>
<command execution_time="23">size(FPR)</command>
<command execution_time="20">tmpFPR = squeeze(FPR(1,2,:));</command>
<command execution_time="17">tmpTPR = squeeze(TPR(1,2,:));</command>
<command execution_time="86">figure; plot(tmpFPR,tmpTPR)</command>
<command error="true" execution_time="358">tmTPR</command>
<command execution_time="23">tmpTPR</command>
<command execution_time="1043">callComputeDecorr</command>
<command execution_time="18">min(tmpThresh)</command>
<command execution_time="18">max(tmpThresh)</command>
<command execution_time="84">figure; imagesc(tmpPredictor)</command>
<command execution_time="19">max(max(tmpPredictor))</command>
<command execution_time="21">min(min(tmpPredictor))</command>
<command execution_time="756">callComputeDecorr</command>
<command execution_time="31">clear all</command>
<command execution_time="29">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="29">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="16">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="113">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="20">thresh</command>
<command execution_time="18">min(thresh.threshMaxIBS)</command>
<command execution_time="22071">callComputeDecorr</command>
<command execution_time="76">clear all</command>
<command execution_time="29">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="19">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="16">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="121">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="20">whos AUROC</command>
<command execution_time="26">AUROC</command>
<command execution_time="21959">callComputeDecorr</command>
<command execution_time="71">clear all</command>
<command execution_time="31">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="24">AUROC</command>
<command execution_time="21">thresh</command>
<command execution_time="19">len = size(thresh.threshMaxIBS)</command>
<command execution_time="18">size(len)</command>
<command error="true" execution_time="515">trapz(FPR(2,2,len),TPR(2,2,len))</command>
<command execution_time="51">trapz(squeeze(FPR(2,2,len)),squeeze(TPR(2,2,len)))</command>
<command error="true" execution_time="80">figure; plot(FPR(2,2,len)),squeeze(TPR(2,2,len))</command>
<command error="true" execution_time="19">figure; plot(squeeze(FPR(2,2,len)),squeeze(TPR(2,2,len))</command>
<command execution_time="125">figure; plot(squeeze(FPR(2,2,len)),squeeze(TPR(2,2,len)))</command>
<command execution_time="89">figure; plot(squeeze(FPR(2,2,1:len)),squeeze(TPR(2,2,1:len)))</command>
<command execution_time="25">tmpTPR = squeeze(TPR(3,2,:));</command>
<command execution_time="17">tmpFPR = squeeze(FPR(3,2,:));</command>
<command execution_time="79">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="17">tmpFPR = squeeze(FPR(2,2,:));</command>
<command execution_time="15">tmpTPR = squeeze(TPR(2,2,:));</command>
<command execution_time="79">figure; plot(tmpFPR,tmpTPR)</command>
<command error="true" execution_time="79">len = size(thresh.threshMaxDecorrCorr)</command>
<command execution_time="18" repeat="2">thresh</command>
<command execution_time="19">len = size(thresh.threshMaxDecorrCorrThresh)</command>
<command execution_time="15">tmpTPR = squeeze(TPR(2,2,len));</command>
<command execution_time="17">size(tmpTPR)</command>
<command execution_time="18">len = length(thresh.threshMaxDecorrCorrThresh)</command>
<command execution_time="23">tmpTPR = squeeze(TPR(2,2,1:len));</command>
<command execution_time="18">size(tmpTPR)</command>
<command execution_time="16">tmpFPR = squeeze(FPR(2,2,1:len));</command>
<command execution_time="94">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="18">trapz(tmpFPR,tmpTPR)</command>
<command execution_time="20">trapz(squeeze(FPR(2,2,1:len)),squeeze(TPR(2,2,1:len)))</command>
<command execution_time="39926">callComputeDecorr</command>
<command execution_time="18">tmpThresh</command>
<command execution_time="18">abs(trapz(tmpFPR,tmpFPR))</command>
<command execution_time="18">size(FPR)</command>
<command execution_time="17">len</command>
<command error="true" execution_time="86">figure; plot(FPR(idxPredictor,idxClass,1:len),TPR(idxPredictor,idxClass,1:len))</command>
<command execution_time="95">figure; plot(squeeze(FPR(idxPredictor,idxClass,1:len)),squeeze(TPR(idxPredictor,idxClass,1:len)))</command>
<command execution_time="81">figure; plot(tmpFPR,tmpTPR)</command>
<command execution_time="20">min(tmpFPR)</command>
<command execution_time="21494">callComputeDecorr</command>
<command execution_time="32">clear all</command>
<command execution_time="29">load('G:\testResults\HIFUNormalROC.mat')</command>
<command execution_time="20">AUROC</command>
<command error="true" execution_time="483" repeat="2">callComputeDecorr</command>
<command error="true" execution_time="335">groups</command>
<command execution_time="26">group</command>
<command execution_time="18">N</command>
<command execution_time="24">group</command>
<command execution_time="18">group.test = 1</command>
<command execution_time="17">test.foo = 1</command>
<command error="true" execution_time="413">callComputeDecorr</command>
<command execution_time="18">class</command>
<command error="true" execution_time="458">callComputeDecorr</command>
<command execution_time="19">size(map)</command>
<command execution_time="20">size(x)</command>
<command error="true" execution_time="91">figure; imagessc(map(:,:,1))</command>
<command execution_time="56">imagesc(map(:,:,1))</command>
<command execution_time="17">size(predictor)</command>
<command execution_time="17">group</command>
<command execution_time="16">tmpValues</command>
<command error="true" execution_time="273">siz(tmpClass)</command>
<command execution_time="18">size(tmpClass)</command>
<command execution_time="18" repeat="2">size(predictor)</command>
<command execution_time="26">nRange</command>
<command execution_time="17">size(tmpMaxDecorrUncorr)</command>
<command execution_time="18">size(tmpMaxDecorrCorr)</command>
<command execution_time="24">size(tmpMaxIBS)</command>
<command execution_time="17">size(predictor)</command>
<command batch="54">tmpMaxDecorrUncorr = 10.^(maxDecorrUncorrROC);</command>
<command batch="54">tmpMaxDecorrUncorr = reshape(tmpMaxDecorrUncorr,nRange,nSig,N);</command>
<command batch="54">tmpMaxDecorrCorr = 10.^(maxDecorrCorrROC);</command>
<command batch="54">tmpMaxDecorrCorr = reshape(tmpMaxDecorrCorr,nRange,nSig,N);</command>
<command batch="54">tmpMaxIBS = 10.^(maxIBSROC./10);</command>
<command batch="54" execution_time="83">tmpMaxIBS = reshape(tmpMaxIBS,nRange,nSig,N);</command>
<command execution_time="27">imagesc(tmpMaxIBS(:,:,1))</command>
<command execution_time="20">imagesc(tmpMaxIBS(:,:,2))</command>
<command execution_time="21">imagesc(tmpMaxIBS(:,:,3))</command>
<command execution_time="21">predictor = cat(2,tmpMaxDecorrUncorr,tmpMaxDecorrCorr,tmpMaxIBS);</command>
<command execution_time="20">size(predictor)</command>
<command execution_time="17">64*3</command>
<command error="true" execution_time="487">callComputeDecorr</command>
<command execution_time="19">size(x)</command>
<command execution_time="17">size(map)</command>
<command error="true" execution_time="430">callComputeDecorr</command>
<command execution_time="17">size(x)</command>
<command execution_time="17">size(map)</command>
<command execution_time="17">numMap</command>
<command execution_time="17">size(class)</command>
<command execution_time="17">class</command>
<command execution_time="17">numMap</command>
<command execution_time="22">size(predictor)</command>
<command execution_time="17">class</command>
<command execution_time="22">group</command>
<command execution_time="48193" repeat="4">callComputeDecorr</command>
<command execution_time="36">whos ensembleAvgIBS</command>
<command execution_time="34">size(ensembleAvgIBS)</command>
<command error="true" execution_time="44139">callComputeDecorr</command>
<command execution_time="53">framesPerGroup</command>
<command error="true" execution_time="38439" repeat="2">callComputeDecorr</command>
<command execution_time="41">size(runningAvgDecorr)</command>
<command execution_time="17">frameidx</command>
<command error="true" execution_time="43610">callComputeDecorr</command>
<command execution_time="19">size(dBIBS)</command>
<command execution_time="129">size(runningAvgIBS(2,subROIRange,subROIAzi,:,:))</command>
<command error="true" execution_time="20909" repeat="3">callComputeDecorr</command>
<command execution_time="291">clear all; close all</command>
<command error="true" execution_time="21530">callComputeDecorr</command>
</session>
<session>
<command time_stamp="150b56e894a">%-- 10/29/2015 4:08 PM --%</command>
<command error="true" execution_time="15356">callComputeDecorr</command>
</session>
<session>
<command time_stamp="150b8c20396">%-- 10/30/2015 7:38 AM --%</command>
<command execution_time="58325" repeat="2">callComputeDecorr</command>
<command execution_time="53">RUNAVG</command>
<command execution_time="25">size(maxDecorrUncorr)</command>
<command execution_time="19">size(locDecorr)</command>
<command error="true" execution_time="147">(1-runningAvgerageEps).*locDecorr(2,1,1,1,1) + runningAverageEps*(locDecorr(2,1,1,2,1)</command>
<command error="true" execution_time="9298">(1-runningAvgerageEps).*locDecorr(2,1,1,1,1) + runningAverageEps*(locDecorr(2,1,1,2,1))</command>
<command error="true" execution_time="24">(1-runningAverageEps.*locDecorr(2,1,1,1,1) + runningAverageEps*(locDecorr(2,1,1,2,1))</command>
<command execution_time="23">(1-runningAverageEps).*locDecorr(2,1,1,1,1) + runningAverageEps*locDecorr(2,1,1,2,1)</command>
<command execution_time="18">tmp = locDecorr(2,:,:,1,1);</command>
<command execution_time="448">tmp = squeeze(tmp)</command>
<command execution_time="20">size(tmp)</command>
<command execution_time="44762">figure; imagesc(log10(tmp))</command>
<command error="true" execution_time="205">(1-runningAverageEps).*locDecorr(2,35,65,1,1) + runningAverageEps*locDecorr(2,35,65,2,1)</command>
<command execution_time="21">size(locDecorr)</command>
<command execution_time="19">(1-runningAverageEps).*locDecorr(2,65,35,1,1) + runningAverageEps*locDecorr(2,65,35,2,1)</command>
<command execution_time="40">size(runningAvgDecorr)</command>
<command execution_time="20">runningAvgDecorr(1,56,35,2,1)</command>
<command execution_time="20">runningAvgDecorr(1,56,35,1,1)</command>
<command execution_time="21">runningAvgDecorr(2,56,35,2,1)</command>
<command execution_time="25">runningAvgDecorr(2,56,35,1,1)</command>
<command execution_time="21">runningAvgDecorr(2,56,35,2,1)</command>
<command execution_time="20">tmp = runningAvgDecorr(2,56,35,:,:);</command>
<command execution_time="19">tmp = squeeze(tmp);</command>
<command execution_time="21">size(tmp)</command>
<command error="true" execution_time="377">tmp = reshate(tmp,1,112*12);</command>
<command execution_time="19">tmp = reshape(tmp,1,112*12);</command>
<command execution_time="192">figure; plot(log10(tmp))</command>
<command execution_time="34">log10(5.0048e-04)</command>
<command execution_time="19">tmp = runningdBIBS(2,56,35,:,:);</command>
<command execution_time="22">tmp = squeeze(tmp);</command>
<command error="true" execution_time="135">tmp = reshape(tmp,1,112*12);</command>
<command execution_time="20">size(tmp)</command>
<command execution_time="21">size(runningdBIBS)</command>
<command execution_time="20">tmp = runningdBIBS(56,35,:,:);</command>
<command execution_time="19">tmp = squeeze(tmp);</command>
<command execution_time="22">size(tmp)</command>
<command error="true" execution_time="25">tmp = reshape(tmp,112*12);</command>
<command execution_time="21">tmp = reshape(tmp,1,112*12);</command>
<command execution_time="83">figure; plot(tmp)</command>
<command execution_time="20">tmp = runningAvgDecorr(2,56,35,:,:);</command>
<command execution_time="20">tmp = squeeze(tmp);</command>
<command execution_time="21">tmp = reshape(tmp,1,112*12);</command>
<command execution_time="57">plot(tmp)</command>
<command execution_time="23">plot(log10(tmp))</command>
<command execution_time="24">tmp2 = locDecorr(2,56,35,:,:);</command>
<command execution_time="19">tmp2 = squeeze(tmp2);</command>
<command execution_time="20">tmp2 = reshape(tmp2,1,112*12);</command>
<command execution_time="64">hold on;</command>
<command execution_time="22">plot(tmp2)</command>
<command execution_time="21">plot(log10(tmp2))</command>
<command execution_time="1093" repeat="3">callComputeDecorr</command>
<command execution_time="20">size(tmpClass)</command>
<command execution_time="20" repeat="2">numClass</command>
<command execution_time="20">size(class)</command>
<command execution_time="20">numClass = size(predictor,3)/N;</command>
<command execution_time="19">numClass</command>
<command execution_time="21">size(predictor)</command>
<command execution_time="26">N</command>
<command execution_time="19">numClass = size(class,3)/N;</command>
<command execution_time="20">numClass</command>
<command execution_time="989">callComputeDecorr</command>
<command execution_time="20">size(tmpClass)</command>
<command execution_time="21">numClass</command>
<command execution_time="19">size(class)</command>
<command execution_time="21">tmpClass = class(:,:,idxClass*N+1:idxClass+1*N); % get a single class map</command>
<command execution_time="20">size(tmpClass);</command>
<command execution_time="20">size(tmpClass)</command>
<command execution_time="82">figure; imagesc(tmpClass(:,:,1))</command>
<command execution_time="78">close all</command>
<command execution_time="19">size(tmpPredictor)</command>
<command execution_time="19">size(predictor)</command>
<command execution_time="20">numPredictor</command>
<command execution_time="20">widthPredictor</command>
<command execution_time="20">tmpPredictor = predictor(:,idxPredictor*widthPredictor+1:idxPredictor+1*widthPredictor);</command>
<command execution_time="21">size(tmpPredictor)</command>
<command execution_time="22">tmpPredictor = predictor(:,idxPredictor*widthPredictor+1:idxPredictor+1*widthPredictor,:);</command>
<command execution_time="34">size(tmpPredictor)</command>
<command execution_time="21">idxValue = 1;</command>
<command execution_time="21">numValue</command>
<command execution_time="20">groupValue</command>
<command execution_time="19">size(groupValue)</command>
<command execution_time="22">tmpValues = getfield(group,groupValue{idxValue});</command>
<command execution_time="21">tmpValues</command>
<command execution_time="20">size(tmpPredictor)</command>
<command execution_time="20">tmpSubPredictor = tmpPredictor(:,:,tmpValues);</command>
<command execution_time="20">size(tmpSubPredictor)</command>
<command execution_time="25">avgPerSamp = maskmean(tmpPredictor(:,:,tmpValues),tmpClass);</command>
<command execution_time="26">avgPerSamp</command>
<command error="true" execution_time="165">MSE(idxPredictor,idxClass) = nanMSE(avgPerSamp);</command>
<command execution_time="20">size(avgPerSamp)</command>
<command execution_time="21">nanmean(avgPerSamp)</command>
<command error="true" execution_time="51">MSE(idxPredictor,idxClass,:) = nanMSE(avgPerSamp);</command>
<command execution_time="26">clear MSE</command>
<command error="true" execution_time="24">MSE(idxPredictor,idxClass,:) = nanMSE(avgPerSamp);</command>
<command execution_time="20">nanMSE(avgPerSamp)</command>
<command execution_time="20">size(ans)</command>
<command execution_time="24">x(1,1,:) = ans;</command>
<command execution_time="25">x</command>
<command execution_time="21">idxPredictor</command>
<command execution_time="26">MSE(idxPredictor+1,idxClass+1,:) = nanMSE(avgPerSamp);</command>
<command execution_time="20">MSE</command>
<command execution_time="1109">callComputeDecorr</command>
<command execution_time="143">clear all; close all;</command>
<command error="true" execution_time="486">callComputeDecorr</command>
<command execution_time="20">size(x)</command>
<command execution_time="17">size(map)</command>
<command error="true" execution_time="389">numValues</command>
<command execution_time="17">numValue</command>
<command execution_time="18">group</command>
<command execution_time="15">group.unfocused = [1 2];</command>
<command execution_time="14">groupValue = fieldnames(group);</command>
<command execution_time="17">size(groupValue)</command>
<command error="true" execution_time="1089">callComputeDecorr</command>
<command execution_time="18">size(x)</command>
<command execution_time="17">size(map)</command>
<command execution_time="17">numValue</command>
<command error="true" execution_time="1062">callComputeDecorr</command>
<command execution_time="19">size(x)</command>
<command execution_time="18">size(tmpSubPredictor)</command>
<command execution_time="19">size(tmpPredictor)</command>
<command execution_time="18">numPredictor</command>
<command execution_time="16">idxPredictor+1*widthPredictor</command>
<command execution_time="17">idxPredictor*widthPredictor+1</command>
<command execution_time="17">size(class)</command>
<command execution_time="18">idxPredictor+1</command>
<command execution_time="41">ans * widthPredictor</command>
<command execution_time="17">(idxPredictor+1)*widthPredictor</command>
<command execution_time="17">idxPredictor*widthPredictor+1</command>
<command execution_time="1037">callComputeDecorr</command>
<command execution_time="30">clear all</command>
<command error="true" execution_time="342">fnAvg</command>
<command execution_time="386">callComputeDecorr</command>
<command execution_time="28">clear all</command>
<command execution_time="60">load('G:\testResults\HIFUNormalAvg_MSE_Comparisons.mat')</command>
<command execution_time="26">MSE</command>
<command execution_time="17">MSE(1,1,:)</command>
<command execution_time="25">MSE(3,1,:)</command>
<command error="true" execution_time="475">callComputeDecorr</command>
<command execution_time="128">figure; imagesc(maskTreated)</command>
<command execution_time="57">clear all</command>
<command execution_time="31">load('G:\testResults\HIFUNormalAvg_MSE_Comparisons.mat')</command>
<command error="true" execution_time="344" repeat="3">callcomputeDecorr</command>
<command execution_time="18">filename</command>
<command error="true" execution_time="87621">callcomputeDecorr</command>
</session>
<session>
<command time_stamp="150ba03643c">%-- 10/30/2015 1:29 PM --%</command>
<command error="true" execution_time="1502">tylerdecorrdisplay</command>
</session>
<session>
<command time_stamp="150be45002d">%-- 10/31/2015 9:20 AM --%</command>
<command execution_time="1048">open plot2D</command>
</session>
<session>
<command time_stamp="150beb99e4b">%-- 10/31/2015 11:27 AM --%</command>
<command execution_time="26083">figure; plot(sin(1:10));</command>
<command execution_time="160">2*3</command>
<command execution_time="300">2*ones(1,100)</command>
<command error="true" execution_time="1070">figure; plot(1/sin(1:10))</command>
<command execution_time="250">figure; plot(1./sin(1:10))</command>
<command batch="55">clear all</command>
<command batch="55" execution_time="2000">close all</command>
<command execution_time="7910">open plot2D</command>
<command error="true" execution_time="150">open linerTemplate</command>
<command error="true" execution_time="70">open linertemplate</command>
<command execution_time="520">open templateLiner</command>
<command error="true" execution_time="10104">templateLiner</command>
<command execution_time="20" repeat="3">model</command>
<command execution_time="30">model = struct</command>
<command execution_time="17" repeat="4">model</command>
<command execution_time="18">model.file</command>
<command execution_time="19">fid</command>
<command execution_time="18">model</command>
<command execution_time="17">model.file</command>
<command error="true" execution_time="368">id</command>
<command error="true" execution_time="260" repeat="2">fid</command>
<command error="true" execution_time="18" repeat="2">aopfile.id</command>
<command error="true" execution_time="18">aopfile.idx</command>
<command error="true" execution_time="20">aopfile.id</command>
<command error="true" execution_time="18">aopfile</command>
<command execution_time="18">model</command>
<command execution_time="19">model.file</command>
<command execution_time="17">aopfile.id</command>
<command error="true" execution_time="32">fid=fopen([aopfile.pname aopfile.name], 'r');</command>
<command execution_time="21">aopfile</command>
<command execution_time="15">fid=fopen([aopfile.pname aopfile.fname], 'r');</command>
<command execution_time="16">fid</command>
<command execution_time="20">feof(fid)</command>
<command execution_time="16">fid</command>
<command execution_time="24">feof(fid)</command>
<command execution_time="17" repeat="2">model</command>
<command error="true" execution_time="27">fopen([model.pname model.fname], 'r');</command>
<command execution_time="19">model</command>
<command execution_time="14">fopen([model.file.pname model.file.fname], 'r');</command>
<command execution_time="16" repeat="2">model</command>
<command error="true" execution_time="8264">templateLiner</command>
<command execution_time="17" repeat="2">model</command>
<command error="true" execution_time="56">model.sliceHieghts</command>
<command execution_time="17" repeat="2">model</command>
<command execution_time="18">window</command>
<command execution_time="18">idx</command>
<command execution_time="17">angleStep</command>
<command execution_time="45">plot(profile)</command>
<command execution_time="25">size(profile)</command>
<command execution_time="17">window</command>
<command execution_time="18">numSlices</command>
<command execution_time="17">size(data)</command>
<command execution_time="19">10890 / angleStep</command>
<command execution_time="17">angleStep</command>
<command execution_time="17">idx</command>
<command execution_time="17">angle/angleStep</command>
<command execution_time="23">numSlicePoints+1</command>
<command error="true" execution_time="20">figure; imagesc(data(1:91,1:91,1:91)</command>
<command error="true" execution_time="75">figure; imagesc(data(1:91,1:91,1:91))</command>
<command execution_time="24">size(data)</command>
<command execution_time="232">figure; imagesc(data(1:91,1:2))</command>
<command execution_time="81">figure; plot(data(1:91,1))</command>
<command execution_time="19">numSlices</command>
<command execution_time="15">window = idx:numSlicePoints+1:numSlices*numSlicePoints+1;</command>
<command execution_time="21">size(window)</command>
<command execution_time="25">window</command>
<command execution_time="43">profile = sqrt(data(window,1).^2 + data(window,2).^2);</command>
<command execution_time="22">plot(profile)</command>
<command execution_time="83">plot(data(window,1))</command>
<command execution_time="102">hold on; plot(data(window,2))</command>
<command execution_time="18">size(data(window))</command>
<command execution_time="19">numSlices</command>
<command execution_time="92" repeat="2">plot(data(:,1))</command>
<command execution_time="19">hold on; plot(profile)</command>
<command execution_time="77">figure(2)</command>
<command execution_time="22">plot(profile)</command>
<command execution_time="18">size(data)</command>
<command execution_time="18">numSlices*numSlicePoints</command>
<command execution_time="19">size(window)</command>
<command execution_time="17">numSlices</command>
<command execution_time="18">angleStep</command>
<command execution_time="18">plot(profile);</command>
<command batch="56">figure(2)</command>
<command batch="56">plot(profile);</command>
<command batch="56">xlabel('Height (mm)');</command>
<command batch="56" execution_time="125">ylabel('Width (mm)');</command>
<command batch="57">plot(profile);</command>
<command batch="57">xlabel('Height (mm)');</command>
<command batch="57" execution_time="54">ylabel('Width (mm)');</command>
<command execution_time="110" repeat="2">figure; plot(data(:,1))</command>
<command execution_time="20">numSlices</command>
<command error="true" execution_time="80">figure; plot(data(:,1:122))</command>
<command execution_time="90">figure; plot(data(1:122,1))</command>
<command execution_time="90">figure; plot(data(1:121,1))</command>
<command execution_time="80">figure; plot(data(1:121,2))</command>
<command execution_time="90">figure; plot(data(1:121,3))</command>
<command execution_time="10">slices</command>
<command execution_time="190">close all</command>
<command execution_time="60">clear all</command>
<command execution_time="80" repeat="2">figure; plot(data(1:121,1))</command>
<command execution_time="71">figure; plot(data(:,1))</command>
<command execution_time="20">mark3</command>
<command execution_time="10">mark4</command>
<command execution_time="20">point</command>
<command execution_time="10">size(data)</command>
<command error="true" execution_time="30">read</command>
<command execution_time="20">rad</command>
<command execution_time="10">vertexX</command>
<command execution_time="20">mark4*angleStep</command>
<command execution_time="20">mark4</command>
<command batch="58">theta = (mark-1)*angleStep;</command>
<command batch="58">vertexX=rad * cosd(theta);</command>
<command batch="58" execution_time="30">vertexY=rad * sind(theta);</command>
<command execution_time="20">vertexX</command>
<command execution_time="20">theta</command>
<command execution_time="20">angleStep</command>
<command execution_time="20">mark</command>
<command batch="59">theta = (mark4-1)*angleStep;</command>
<command batch="59">vertexX=rad * cosd(theta);</command>
<command batch="59" execution_time="30">vertexY=rad * sind(theta);</command>
<command execution_time="20">theta</command>
<command error="true" execution_time="20">vertexY=</command>
<command execution_time="20">vertexY</command>
<command execution_time="20">vertexX</command>
<command execution_time="19">vertexZ=sliceHeights(mark4);</command>
<command execution_time="20">vertexZ</command>
<command execution_time="20">mark4</command>
<command execution_time="20">point</command>
<command execution_time="70">figure; plot(profile)</command>
<command execution_time="80">figure; plot(data(:,1))</command>
<command execution_time="80">figure; plot(data(1:121,3))</command>
<command execution_time="80">figure; plot(sliceHeights)</command>
<command execution_time="20" repeat="2">mark3</command>
<command execution_time="190">data</command>
<command execution_time="20">data(1:3,:)</command>
<command execution_time="20">data(1:10,:)</command>
<command execution_time="80">figure; plot(data(1:121,3))</command>
<command execution_time="20">data(1:10,3)</command>
<command error="true" execution_time="400">slicePoints</command>
<command execution_time="20">numSlicePoints</command>
<command execution_time="20">size(data)</command>
<command execution_time="70">figure; plot(profile)</command>
<command execution_time="80">figure; plot(data(1:121,1))</command>
<command execution_time="20">angle</command>
<command execution_time="20">angleStep</command>
<command execution_time="20">angle = 20 * angleStep</command>
<command batch="60">idx = angle/angleStep;</command>
<command batch="60">window = idx:numSlicePoints+1:numSlices*numSlicePoints+1;</command>
<command batch="60">profile = sqrt(data(window,1).^2 + data(window,2).^2);</command>
<command batch="60">% UPDATE IMAGE</command>
<command batch="60">figure(2)</command>
<command batch="60">plot(profile);</command>
<command batch="60">xlabel('Height (mm)');</command>
<command batch="60" execution_time="150">ylabel('Width (mm)');</command>
<command error="true" execution_time="310">fiugre; plot(profile)</command>
<command execution_time="80">figure; plot(profile)</command>
<command execution_time="20">numSlicePoints</command>
<command execution_time="20">27*numSlicePoints</command>
<command execution_time="20">numSlicePoints</command>
<command execution_time="20">27*91</command>
<command execution_time="20" repeat="2">numSlicePoints</command>
<command execution_time="10">numSlicePoints*numSlices</command>
<command execution_time="20">size(data)</command>
<command execution_time="20">11*numSlicePoints</command>
<command execution_time="10">11*numSlicePoints+1</command>
<command execution_time="20">11*91</command>
<command execution_time="20" repeat="2">model</command>
<command error="true" execution_time="960">ptest = sqrt(datatest(window,1).^2 + datatest(window,2).^2);</command>
<command error="true" execution_time="20">ptest = sqrt(model.datatest(window,1).^2 + model.datatest(window,2).^2);</command>
<command execution_time="20">ptest = model.datatest(window,1);</command>
<command execution_time="90">figure; plot(profile); hold on; plot(ptest)</command>
<command execution_time="100">figure; plot(ptest)</command>
<command execution_time="80">figure; plot(profile)</command>
<command execution_time="20" repeat="2">size(model.datatest)</command>
<command execution_time="90">figure; plot(model.datatest(1,:))</command>
<command execution_time="80">figure; plot(model.datatest(:,1))</command>
<command execution_time="290">hold on; plot(profile)</command>
<command execution_time="10">121*90</command>
<command execution_time="10">6.254*cosd(0)</command>
<command execution_time="10">6.979*cosd(4)</command>
<command execution_time="10">6.979*sind(4)</command>
<command execution_time="20">sqrt(6.9620^2+0.4868^2)</command>
<command execution_time="20">76 * numSlices</command>
<command execution_time="10">angle = 4</command>
<command batch="61">idx = angle/angleStep;</command>
<command batch="61">window = idx:numSlicePoints+1:numSlices*numSlicePoints+1;</command>
<command batch="61" execution_time="30">profile = sqrt(data(window,1).^2 + data(window,2).^2);</command>
<command error="true" execution_time="20">hold on; profile(profile)</command>
<command execution_time="20">hold on; plot(profile)</command>
<command execution_time="20" repeat="2">idx</command>
<command execution_time="20">angle</command>
<command execution_time="10">window(1:10)</command>
<command execution_time="20">numSlicePoints</command>
<command execution_time="30">window = idx:numSlicePoints+1:(numSlices*numSlicePoints)+idx;</command>
<command execution_time="30">window(1:10)</command>
<command execution_time="20">numSlicePoints</command>
<command execution_time="20">window = idx:numSlicePoints:(numSlices*numSlicePoints)+idx;</command>
<command execution_time="10">window(1:10)</command>
<command execution_time="20">window = idx:numSlicePoints:(numSlices-1)*numSlicePoints+idx;</command>
<command execution_time="20">size(window)</command>
<command execution_time="20">numSlices</command>
<command batch="62">profile = sqrt(data(window,1).^2 + data(window,2).^2);</command>
<command batch="62">% UPDATE IMAGE</command>
<command batch="62">figure(2)</command>
<command batch="62" execution_time="50">plot(profile);</command>
<command execution_time="360">clear all; close all;</command>
<command execution_time="90">axis equal; axis tight;</command>
<command execution_time="10">box on</command>
<command execution_time="50">grid on</command>
<command execution_time="10">height</command>
<command execution_time="20">idxCap</command>
<command execution_time="20">foo</command>
<command error="true" execution_time="250">plot2D(hObject,model)</command>
<command execution_time="20">size(data)</command>
<command execution_time="20">height</command>
<command execution_time="20">idxHeight</command>
<command error="true" execution_time="20">model.numSlices</command>
<command execution_time="20">model</command>
<command execution_time="10">121*90</command>
<command execution_time="10">ans / idxHeight</command>
<command error="true" execution_time="540">idxHeight / numSlicePoints</command>
<command execution_time="19">numSlicePoints = model.numSlicePoints;</command>
<command execution_time="39">idxHeight / numSlicePoints</command>
<command execution_time="18">model</command>
<command error="true" execution_time="384">idxHeights</command>
<command execution_time="18">idxHeight</command>
<command batch="63">cap1 = 32; cap2 = 39.5; cap3 = 45; % mm</command>
<command batch="63">capSet = cat(2 ,cap1, cap2, cap3);</command>
<command batch="63">numCapRadii = length(capSet);</command>
<command batch="63">% GET DATA INFORMATION</command>
<command batch="63">data = model.data;</command>
<command batch="63">% INTIALIZE BUFFERS</command>
<command batch="63">height = zeros(numCapRadii,1);</command>
<command batch="63">% FIND OPTIMAL CAP</command>
<command batch="63">for idx = 1:numCapRadii;</command>
<command batch="63">tmpX = data(:,1);</command>
<command batch="63">tmpY = data(:,2);</command>
<command batch="63">[minX, locX] = min(abs(tmpX-capSet(idx)));</command>
<command batch="63">[minY, locY] = min(abs(tmpY-capSet(idx)));</command>
<command batch="63">if minX &gt; minY</command>
<command batch="63">height(idx) = locY;</command>
<command batch="63">elseif minX &lt; minY</command>
<command batch="63">height(idx) = locX;</command>
<command batch="63">else</command>
<command batch="63">height(idx) = locX;</command>
<command batch="63">end</command>
<command batch="63">end</command>
<command batch="63">% GET CAP THAT MINIMIZES AMOUNT OF MODEL CUT AWAY</command>
<command batch="63" execution_time="180">[idxHeight idxCap] = min(height);</command>
<command batch="64">numSlicePoints = model.numSlicePoints;</command>
<command batch="64" execution_time="26">sliceHeights = model.sliceHeights;</command>
<command execution_time="20">idxHeight/numSlicePoints</command>
<command execution_time="18">idxHeight</command>
<command execution_time="16">model.sliceHeights = sliceHeights(idxHeight/numSlicePoints:end);</command>
<command execution_time="16">model.distalEndDia = capSet(idxCap);</command>
<command error="true" execution_time="225">plot2D(hObject,model)</command>
<command execution_time="29">size(data)</command>
<command execution_time="18">numSlicePoints</command>
<command execution_time="17">numSlices</command>
<command execution_time="16">112*90</command>
<command execution_time="18">idxSliceHeight</command>
<command execution_time="17">floor(idxHeight/numSlicePoints)</command>
<command execution_time="19">idxHeight</command>
<command execution_time="18" repeat="2">numSlicePoints</command>
<command execution_time="19">sliceHeights</command>
<command execution_time="16">size(ans)</command>
<command execution_time="18">size(sliceHeights)</command>
<command execution_time="19">idxHeight</command>
<command execution_time="17">idxHeight/121</command>
<command error="true" execution_time="495">idxHeight\numslicePoints</command>
<command execution_time="17">idxHeight\numSlicePoints</command>
<command execution_time="24">idxHeight</command>
<command execution_time="16">numSlicePoints</command>
<command execution_time="18">900/90</command>
<command execution_time="17">idxHeight/numSlicePoints</command>
<command execution_time="18">size(data)</command>
<command execution_time="18">numSlices</command>
<command execution_time="19">numSlices*numSlicePoints</command>
<command execution_time="18">10080-9991</command>
<command execution_time="19">model</command>
<command execution_time="17">9991/112</command>
</session>
<session>
<command time_stamp="150c36ae45d">%-- 11/1/2015 9:19 AM --%</command>
<command execution_time="44">numSlices</command>
<command execution_time="21">size(data)</command>
<command execution_time="18">size(window)</command>
<command error="true" execution_time="86" repeat="2">size(profile)</command>
<command execution_time="20">size(window)</command>
<command execution_time="28">numSlices</command>
<command execution_time="87">figure; plot(window)</command>
<command execution_time="21">size(data)</command>
<command execution_time="19">numSlicePoints</command>
<command execution_time="22">size(model.data)</command>
<command execution_time="19">size(model.sliceHeights)</command>
<command execution_time="19">112 * 90</command>
<command execution_time="18">size(data)</command>
<command execution_time="43">numSlices * numSlicePoints</command>
<command execution_time="17">numSlicePoints</command>
<command execution_time="20">numSlices</command>
<command execution_time="18">size(model.sliceHeights)</command>
<command execution_time="20">112890</command>
<command execution_time="17">112*90</command>
<command execution_time="19">size(model.data)</command>
<command execution_time="18">10080-9991</command>
<command error="true" execution_time="3913">templateLiner</command>
<command execution_time="49">clear all; close all;</command>
<command execution_time="7797">templateLiner</command>
<command execution_time="19">size(model.numSlicePoints)</command>
<command execution_time="17">model.numSlicePoints</command>
<command execution_time="24">size(model.sliceHeights)</command>
<command execution_time="17">idxHeight</command>
<command execution_time="18">923 / 90</command>
<command execution_time="19">900 / 90</command>
<command error="true" execution_time="1674">size(idxSliceHeight)</command>
<command error="true" execution_time="466">size(sliceHeight)</command>
<command error="true" execution_time="432">size(sliceHeights)</command>
<command execution_time="19">size(model.sliceHeights)</command>
<command execution_time="21">size(data)</command>
<command execution_time="20">10890/90</command>
<command execution_time="18">idxHeight</command>
<command batch="65">numSlicePoints = model.numSlicePoints;</command>
<command batch="65">sliceHeights = model.sliceHeights;</command>
<command batch="65">idxSliceHeight = round(idxHeight/numSlicePoints);</command>
<command batch="65" execution_time="2571">idxHeight = idxSliceHeight*numSlicePoints;</command>
<command execution_time="18">size(data)</command>
<command execution_time="21">size(idxHeight:10890)</command>
<command execution_time="25">size(idxSliceHeight:121)</command>
<command execution_time="21">112*90</command>
<command execution_time="16">size(idxSliceHeight-1:121)</command>
<command execution_time="22">113*90</command>
<command execution_time="25">size(idxSliceHeight+1:121)</command>
<command execution_time="17">111*90</command>
<command execution_time="18">sliceHeights(1)</command>
<command execution_time="20">121*90</command>
<command execution_time="17">size(sliceHeights)</command>
<command execution_time="17">121*90</command>
<command execution_time="18">size(data)</command>
<command execution_time="19">idxHeight / numSlicePoints</command>
<command execution_time="19">idxSliceHeight</command>
<command execution_time="19">size(sliceHeights)</command>
<command execution_time="16">size(idxSliceHeight:121)</command>
<command execution_time="19">size(idxSliceHeight+1:121)</command>
<command execution_time="17">111*90</command>
<command execution_time="18">size(idxSliceHeight+2:121)</command>
<command execution_time="18">110*90</command>
<command execution_time="16">model.data = data(idxHeight:end,:);</command>
<command execution_time="20">size(model.data)</command>
<command execution_time="20">model.sliceHeights = sliceHeights(idxSliceHeight:end);</command>
<command execution_time="21">size(model.sliceHeights)</command>
<command execution_time="18">112*90</command>
<command execution_time="16">111*90</command>
<command execution_time="17">test.foo = ones(10,10);</command>
<command execution_time="19">test.foo(1,2)</command>
<command execution_time="60">mean(1:2)</command>
<command execution_time="19">mean((1:2)-1.5)</command>
<command execution_time="20">sliceHeights(end)</command>
<command execution_time="17">sliceHeights(1)</command>
<command execution_time="24">size(sliceHeights)</command>
<command execution_time="18">size(model.data)</command>
<command execution_time="7565" repeat="2">templateLiner</command>
<command execution_time="20">size(model.data)</command>
<command execution_time="18">size(model.sliceHeights)</command>
<command execution_time="18">111*90</command>
<command execution_time="18">111*91</command>
<command execution_time="17">111*89</command>
<command execution_time="17">111*90</command>
<command execution_time="5856">templateLiner</command>
<command execution_time="17">size(model.data)</command>
<command execution_time="18" repeat="2">size(model.sliceHeights)</command>
<command execution_time="19">111*90</command>
<command execution_time="6135">templateLiner</command>
<command execution_time="18">size(model.sliceHeights)</command>
<command execution_time="19">size(model.data)</command>
<command execution_time="18">111*90</command>
<command execution_time="5535">templateLiner</command>
<command execution_time="18">size(model.data)</command>
<command execution_time="21">size(model.sliceHeights)</command>
<command execution_time="21">111*90</command>
<command execution_time="18">model.distalEndDia</command>
<command execution_time="94" repeat="2">figure; plot(model.data(1:90,1),model.data(1:90,2))</command>
<command execution_time="28">size(model.distalEndX)</command>
<command execution_time="18">model.distalEndX</command>
<command execution_time="20">model.distalEndY</command>
<command execution_time="110">figure; plot(model.data(1:90,1),model.data(1:90,2))</command>
<command execution_time="77">figure; plot(model.data(91:90*2,1),model.data(91:90*2,2))</command>
<command error="true" execution_time="195">figure; plot(model.data(9*2+1:90*3,1),model.data(9*2:90*3+1,2))</command>
<command execution_time="80">figure; plot(model.data(9*2+1:90*3,1),model.data(9*2+1:90*3,2))</command>
<command execution_time="95">figure; plot(model.data(1:90,1),model.data(1:90,2))</command>
<command execution_time="20">model.distalEndDia</command>
<command execution_time="19">height</command>
<command execution_time="19">3789 / 90</command>
<command execution_time="23">x = -1:.1:1; r = 5; y = sqrt(r^2-x.^2);</command>
<command execution_time="88">figure; plot(x,y)</command>
<command execution_time="17">x = -1:.1:1; r = 1; y = sqrt(r^2-x.^2);</command>
<command execution_time="87">figure; plot(x,y)</command>
<command execution_time="16">data = [x,y];</command>
<command execution_time="17">x = -1:.1:1; r = -1; y = sqrt(r^2-x.^2);</command>
<command execution_time="94">figure; plot(x,y)</command>
<command execution_time="22">foo = data;</command>
<command execution_time="18">foo(:,2) = foo(:,2).*-1;</command>
<command execution_time="113">figure; plot(foo(:,1),foo(:,2))</command>
<command execution_time="84">figure; plot(data(:,1),data(:,2))</command>
<command execution_time="62">data</command>
<command error="true" execution_time="83">data(data)</command>
<command execution_time="20">size(data)</command>
<command execution_time="25">x = -1:.1:1; r = 1; y = sqrt(r^2-x.^2);</command>
<command execution_time="22">size(x)</command>
<command execution_time="19">data = horzcat(x',y');</command>
<command execution_time="22">size(data)</command>
<command execution_time="219">close all</command>
<command execution_time="88">figure; plot(data(:,1),data(:,2))</command>
<command execution_time="20">foo = data;</command>
<command execution_time="21">foo(:,2) = foo(:,2).*-1;</command>
<command execution_time="87">figure; plot(foo(:,1),foo(:,2))</command>
<command execution_time="19">data = vertcat(data,foo);</command>
<command execution_time="91">figure; plot(data(:,1),data(:,2))</command>
<command error="true" execution_time="22">figure; plot(data(:,1),data(:,2),'*")</command>
<command execution_time="83">figure; plot(data(:,1),data(:,2),'*')</command>
<command execution_time="17">model.data = data;</command>
<command execution_time="19">model.data = data.*30;</command>
<command execution_time="77">figure; plot(model.data(:,1),model.data(:,2),'*')</command>
<command execution_time="20">axis equal; axis tight;</command>
<command execution_time="19">capSet</command>
<command execution_time="23">data = model.data;</command>
<command batch="66">for idx = 1:numCapRadii;</command>
<command batch="66">tmpX = data(:,1);</command>
<command batch="66">tmpY = data(:,2);</command>
<command batch="66">[minX, locX] = min(abs(tmpX-capSet(idx)));</command>
<command batch="66">[minY, locY] = min(abs(tmpY-capSet(idx)));</command>
<command batch="66">if minX &gt; minY</command>
<command batch="66">height(idx) = locY;</command>
<command batch="66">elseif minX &lt; minY</command>
<command batch="66">height(idx) = locX;</command>
<command batch="66">else</command>
<command batch="66">height(idx) = locX;</command>
<command batch="66">end</command>
<command batch="66" execution_time="92">end</command>
<command execution_time="21">height</command>
<command execution_time="18">size(data)</command>
<command execution_time="19">data(21,:)</command>
<command batch="67">cap1 = 32; cap2 = 39.5; cap3 = 45; % mm</command>
<command batch="67">capSet = cat(2 ,cap1, cap2, cap3);</command>
<command batch="67">numCapRadii = length(capSet);</command>
<command batch="67">% GET DATA INFORMATION</command>
<command batch="67">data = model.data;</command>
<command batch="67">% INTIALIZE BUFFERS</command>
<command batch="67">height = zeros(numCapRadii,1);</command>
<command batch="67">% FIND OPTIMAL CAP</command>
<command batch="67">for idx = 1:numCapRadii;</command>
<command batch="67">tmpX = data(:,1);</command>
<command batch="67">tmpY = data(:,2);</command>
<command batch="67">[minX, locX] = min(abs(tmpX-capSet(idx)));</command>
<command batch="67">[minY, locY] = min(abs(tmpY-capSet(idx)));</command>
<command batch="67">if minX &gt; minY</command>
<command batch="67">height(idx) = locY;</command>
<command batch="67">elseif minX &lt; minY</command>
<command batch="67">height(idx) = locX;</command>
<command batch="67">else</command>
<command batch="67">height(idx) = locX;</command>
<command batch="67">end</command>
<command batch="67">end</command>
<command batch="67">% GET CAP THAT MINIMIZES AMOUNT OF MODEL CUT AWAY</command>
<command batch="67" execution_time="195">[idxHeight idxCap] = min(height);</command>
<command execution_time="19">idxHeight</command>
<command execution_time="17">idxCap</command>
<command execution_time="19">3789/90</command>
<command execution_time="19">ans/122</command>
<command execution_time="73">figure; plot(data(3789:378990:1),data(3789:378990:2))</command>
<command execution_time="73">figure; plot(data(3789:3789+90:1),data(3789:3789+90:2))</command>
<command execution_time="23">size(data)</command>
<command execution_time="25">data(3789:3789+90)</command>
<command execution_time="81">figure; plot(data(3789:3789+90:1),data(3789:3789+90:2))</command>
<command execution_time="85">figure; plot(data(:,1),data(:,2))</command>
<command execution_time="23">idx2 = 3789+90</command>
<command execution_time="73">figure; plot(data(3789:idx2:1),data(3789:idx2:2))</command>
<command execution_time="32">idxHeight / 90</command>
<command execution_time="17">model</command>
<command execution_time="24">height</command>
<command execution_time="18">tmpX</command>
<command execution_time="23">numSliceHeights</command>
<command execution_time="20">idx</command>
<command execution_time="23">tmpY</command>
<command execution_time="22">idx</command>
<command execution_time="18">idx*numSlicePoints+1</command>
<command execution_time="19">numSlicePoints*(idx+1)</command>
<command execution_time="26">idx</command>
<command execution_time="17">height</command>
<command execution_time="18">tmpX</command>
<command execution_time="19">tmpY</command>
<command execution_time="23">size(data)</command>
<command execution_time="19">model</command>
<command execution_time="17">angleStep = model.angleStep;</command>
<command execution_time="15">theta = angleStep:angleStep:angleStep*numSlicePoints;</command>
<command execution_time="19">size(theta)</command>
<command execution_time="17">numSlicePoints</command>
<command execution_time="19">size(model.data)</command>
<command execution_time="29">size(idx*numSlicePoints+1:numSlicePoints*(idx+1))</command>
<command execution_time="17">size(theta)</command>
<command error="true" execution_time="22">data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1).*cosd(theta)</command>
<command execution_time="18">size(cosd(theta))</command>
<command execution_time="17">size(data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1))</command>
<command execution_time="21">theta = theta';</command>
<command execution_time="50">mean(data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1).*cosd(theta));</command>
<command execution_time="19">sum(ones(4,2),2)</command>
<command execution_time="19">height</command>
<command execution_time="17">8/120</command>
<command execution_time="22">sliceHeights</command>
<command error="true" execution_time="654">figure; plot(diff(sliceHieghts)</command>
<command error="true" execution_time="140">figure; plot(diff(sliceHieghts))</command>
<command execution_time="83">figure; plot(diff(sliceHeights))</command>
<command execution_time="18">numSlicePoints</command>
<command execution_time="20">height</command>
<command execution_time="20">sliceHeights(height)</command>
<command execution_time="21">size(data)</command>
<command execution_time="18">size(model.data)</command>
<command execution_time="18">idxCap</command>
<command execution_time="19">height</command>
<command execution_time="15">[foo idxCap] = min(abs(sliceHeights(height)-capHeight));</command>
<command execution_time="29">idxCap</command>
<command execution_time="17">height</command>
<command error="true" execution_time="405">sliceHeights(heights)</command>
<command execution_time="18">sliceHeights(height)</command>
<command execution_time="17">idxCap</command>
<command execution_time="83">figure; plot(model.data(1:90,1),model.data(1:90,2))</command>
<command execution_time="19">sqrt((1*.5)^2+(1*.5)^2)</command>
<command execution_time="18">sqrt(2)</command>
<command execution_time="17">ans *.5</command>
<command error="true" execution_time="688">tmp = linespace(1,numSlicePoints,50);</command>
<command execution_time="67">tmp = linspace(1,numSlicePoints,50);</command>
<command execution_time="79">figure; plot(tmp)</command>
<command execution_time="25">numSlicePoints</command>
<command execution_time="16">tmp = linspace(1,50,numSlicePoints);</command>
<command execution_time="90">figure; plot(tmp)</command>
<command error="true" execution_time="411">sliceHeight/50</command>
<command execution_time="18">sliceHeights/50</command>
<command execution_time="17">max(sliceHeights)/50</command>
<command batch="68">tmp = floor(max(sliceHeights/50));</command>
<command batch="68">step = tmp/numSliceHeights;</command>
<command batch="68" execution_time="46">cirReduction = 1:step:tmp;</command>
<command execution_time="26">size(cirReduction)</command>
<command execution_time="24">numSliceHeights</command>
<command execution_time="17">step</command>
<command execution_time="16">tmp</command>
<command execution_time="18">tmp/step</command>
<command execution_time="17">numSliceHeights</command>
<command execution_time="24">size(cirReduction)</command>
<command execution_time="18">cirReduction = step:step:tmp;</command>
<command execution_time="22">size(cirReduction)</command>
<command execution_time="17">numSliceHeights</command>
<command execution_time="17">1/100</command>
<command execution_time="16">cirReduction = 1-((step:step:tmp)/100);</command>
<command execution_time="18">size(cirReduction)</command>
<command execution_time="17">size(data)</command>
<command execution_time="18">10890/90</command>
<command batch="69">% GET DATA INFORMATION</command>
<command batch="69">for idx = 0:numSliceHeights-1</command>
<command batch="69">data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2) = ...</command>
<command batch="69">data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2).*cirReduction(idx+1);</command>
<command batch="69" execution_time="42">end</command>
<command batch="70">model.guiAngle = 4; % degrees</command>
<command batch="70" execution_time="122">plot2D( hObject , model );</command>
<command execution_time="16">model.data = data;</command>
<command execution_time="17">50.32/54.74</command>
<command execution_time="18">1-ans</command>
<command execution_time="18">cirReduction(20)</command>
<command execution_time="21">1-ans</command>
<command execution_time="79">figure; plot(cirReduction)</command>
<command execution_time="83">figure; plot(1-cirReduction)</command>
<command error="true" execution_time="25">cirReduction(1*step)</command>
<command execution_time="84">figure; plot(cirReduction)</command>
<command execution_time="82">figure; plot(1-cirReduction)</command>
<command execution_time="85">hold on; plot(sliceHeights)</command>
<command execution_time="165">close all</command>
<command error="true" execution_time="4637" repeat="3">templateLiner</command>
<command execution_time="261">open getaopfile</command>
<command execution_time="259">open readaopfile</command>
<command error="true" execution_time="670">plot3D(cube)</command>
<command error="true" execution_time="307">size(cube)</command>
<command batch="71">cube = [0 0 0;...</command>
<command batch="71">1 0 0;...</command>
<command batch="71">0 1 0;...</command>
<command batch="71">1 1 0;...</command>
<command batch="71">0 0 1;...</command>
<command batch="71">1 0 1;...</command>
<command batch="71">0 1 1;...</command>
<command batch="71" execution_time="51">1 1 1];</command>
<command error="true" execution_time="347">plot3D(cube)</command>
<command error="true" execution_time="302">plot3(cube)</command>
<command execution_time="82" repeat="2">[V, E, F] = createIcosahedron;</command>
<command execution_time="34">size(V)</command>
<command execution_time="22">V</command>
<command execution_time="21">size(F)</command>
<command execution_time="22">F(1,:)</command>
<command error="true" execution_time="18">F(</command>
<command execution_time="30">F</command>
<command execution_time="349">drawMesh(V,F)</command>
<command execution_time="18">V(F)</command>
<command execution_time="67">mean(V(F),2)</command>
<command execution_time="27">F</command>
<command execution_time="26">V</command>
<command execution_time="18">size(F)</command>
<command execution_time="19">F</command>
<command execution_time="19">V</command>
<command execution_time="18">V(F,:)</command>
<command execution_time="18">size(ans)</command>
<command execution_time="19">size(E)</command>
<command execution_time="20">E</command>
<command error="true" execution_time="276">size(V0</command>
<command execution_time="17">size(V)</command>
<command execution_time="19">size(F)</command>
<command execution_time="18">F(1,:)</command>
<command execution_time="18">V(ans)</command>
<command execution_time="18">V</command>
<command execution_time="26">V([1 3 2],:)</command>
<command execution_time="23">mean(ans,1)</command>
<command execution_time="22">.809/3</command>
<command execution_time="18">idx = 1;</command>
<command execution_time="42">mean(V(F(idx,:),:),1)</command>
</session>
<session>
<command time_stamp="150cac07647">%-- 11/2/2015 7:30 PM --%</command>
<command execution_time="7658">[V, E, F] = createIcosahedron;</command>
<command execution_time="25" repeat="3">size(F)</command>
<command execution_time="20">F</command>
<command execution_time="23">size(V)</command>
<command execution_time="19">F(1,:)</command>
<command execution_time="19">V(ans,:)</command>
<command execution_time="21">F(1,:)</command>
<command execution_time="19">V(ans,1)</command>
<command execution_time="22">F(1,:)</command>
<command execution_time="18">V(1,ans)</command>
<command execution_time="19">F(1,:)</command>
<command execution_time="18">V(ans(1),:)</command>
<command error="true" execution_time="221">4 = 2 + sqrt(2 + 3 + 2)</command>
<command execution_time="19">2 + sqrt(2 + 3 + 2)</command>
<command execution_time="24">sqrt(ans) - sqrt(2)</command>
<command execution_time="22">sqrt(2+3+2)</command>
<command execution_time="19">sqrt(4.6458-2)</command>
<command execution_time="19">sqrt(8)-sqrt(2)</command>
<command execution_time="19">sqrt(2)</command>
<command execution_time="24">sqrt(3)</command>
<command execution_time="18">sqrt(6)</command>
<command execution_time="18">sqrt(2)</command>
<command execution_time="20">abs([3 3 3])</command>
<command execution_time="1947">norm([3 3 3])</command>
<command execution_time="40">sqrt(3^2+3^2+3^2)</command>
<command execution_time="18">norm([2 2])-norm([1 1])</command>
<command execution_time="18">sqrt(ans^2/3)</command>
<command execution_time="17">foo = ones(1,2) + ans</command>
<command execution_time="19">foo = ones(1,3) + 1.8165</command>
<command execution_time="19">foo = ones(1,3) + 0.8165</command>
<command execution_time="24">norm(foo)</command>
<command execution_time="19">norm([2 2])</command>
<command execution_time="20">cat(1,ones(10,10),ones(10,10),ones(10,10))</command>
<command execution_time="20">size(ans)</command>
<command execution_time="110">mean(ones(40,1),1)</command>
<command execution_time="20">mean(ones(40,1),2)</command>
<command execution_time="30">mean(ones(40,1))</command>
<command execution_time="30">sum(ones(40,1))</command>
<command execution_time="20">size(V)</command>
<command error="true" execution_time="28183">templateLiner</command>
<command batch="72" error="true">for idx = 1:numFaces</command>
<command batch="72" error="true">moments(idx) = cross(modelCentroid,faceCentroids(idx,:));</command>
<command batch="72" error="true" execution_time="2370">end</command>
<command execution_time="10">size(moments)</command>
<command execution_time="30">cross(modelCentroid,faceCentroids(idx,:))</command>
<command execution_time="20">norm(ans)</command>
<command execution_time="20">size(moments)</command>
<command error="true" execution_time="20">drawmesh(V(1:10),F(1:10))</command>
<command error="true" execution_time="930">drawMesh(V(1:10),F(1:10))</command>
<command execution_time="20">size(V)</command>
<command execution_time="80">drawMesh(V,F(1:10,:))</command>
<command execution_time="10">size(moments)</command>
<command execution_time="20">locMinMoment</command>
<command execution_time="140">abs(moments)</command>
<command execution_time="20">momentMinAxis = faceCentroids(locMinMoment)</command>
<command execution_time="20">size(faceCentroids)</command>
<command error="true" execution_time="20">vertexLine = V(1,F(locMinMoment,:));</command>
<command execution_time="20">F(locMinMoment,:)</command>
<command execution_time="20">V(F(locMinMoment,:))</command>
<command execution_time="10">V(F(locMinMoment,:),:)</command>
<command execution_time="10">V(F(locMinMoment,1),:)</command>
<command execution_time="30">vertexLine = V(F(locMinMoment,1),:);</command>
<command batch="73">cosTheta = dot(vertexLine,momentMinAxis)...</command>
<command batch="73">/(norm(vertexLine)*norm(momentMinAxis));</command>
<command batch="73" execution_time="20">theta = acosd(cosTheta);</command>
<command execution_time="20">momentMinAxis</command>
<command execution_time="20">mean(data(:,1))</command>
<command execution_time="20">momentMinAxis(2)</command>
<command execution_time="20">mean(data(:,2))</command>
<command batch="74">model = computeCentriod( hObject, model );</command>
<command batch="74">% UPDATE DATA</command>
<command batch="74">model.data(:,1) = model.data(:,1)-model.distalEndX;</command>
<command batch="74" execution_time="50">model.data(:,2) = model.data(:,2)-model.distalEndY;</command>
<command error="true" execution_time="30">model.distalEndx</command>
<command execution_time="20">model.distalEndX</command>
<command error="true" execution_time="20">model.distalEny</command>
<command execution_time="10">model.distalEndY</command>
<command execution_time="20">mean(model.data(:,1))</command>
<command execution_time="10">mean(model.data(:,2))</command>
<command execution_time="20">mean(model.data(:,3))</command>
<command execution_time="10">theta</command>
<command execution_time="10">momentMinAxis</command>
<command execution_time="10">20.5+3+10+17.5+29+7+11</command>
<command execution_time="20">98*25</command>
<command execution_time="20">20*5*2</command>
<command execution_time="10">200*25</command>
<command error="true" execution_time="20">x = y = 2;</command>
<command execution_time="10">prod(2,3)</command>
<command execution_time="20">prod([2,3])</command>
<command error="true" execution_time="60">moments(idx) = nHat'*I*nHat;</command>
<command execution_time="20">size(nHat)</command>
<command execution_time="20">size(I)</command>
<command execution_time="20">size(nHat)</command>
<command error="true" execution_time="100">moments(idx) = nHat*I*nHat';</command>
<command execution_time="20">size(nHat)</command>
<command execution_time="20">size(I)</command>
<command execution_time="20">foo = nHat*I;</command>
<command execution_time="20">size(foo)</command>
<command execution_time="20">size(nHat')</command>
<command execution_time="10">nHat</command>
<command execution_time="20">nHat'</command>
<command execution_time="20">size(nHat*I)</command>
<command execution_time="20">I</command>
<command execution_time="20">size(I)</command>
<command execution_time="50">Ixx = sum(sum(data(:,[2,3]).^2,2),1)</command>
<command execution_time="30">sum(prod(data(:,[1,2])),1)</command>
<command execution_time="30">data(1,[1,2])</command>
<command execution_time="20">prod(ans)</command>
<command execution_time="20">foo = prod(data(:,[1,2]));</command>
<command execution_time="10">foo(1)</command>
<command execution_time="520">figure; plot(foo)</command>
<command execution_time="20">foo</command>
<command execution_time="20">size(data)</command>
<command execution_time="20">prod(data(1,[1,2]))</command>
<command execution_time="20">prod(data(1:2,[1,2]))</command>
<command execution_time="10">prod(data(1:2,[1,2]),2)</command>
<command execution_time="110">prod(data(:,[1,2]),2)</command>
<command execution_time="20">size(ans)</command>
<command execution_time="10">size(data)</command>
<command execution_time="20">Ixy = -sum(prod(data(:,[1,2]),2),1);</command>
<command batch="75">Ixy = -sum(prod(data(:,[1,2]),2),1); Iyx = Ixy;</command>
<command batch="75">Iyz = -sum(prod(data(:,[2,3]),2),1); Izy = Iyz;</command>
<command batch="75" execution_time="20">Ixz = -sum(prod(data(:,[1,3]),2),1); Izx = Ixz;</command>
<command batch="76" error="true">I = [Ixx, Ixy, Ixz;...</command>
<command batch="76" error="true">Iyx, Iyy, Iyz;...</command>
<command batch="76" error="true" execution_time="40">Izx, Izy, Izz];</command>
<command execution_time="20">Izz = sum(sum(data(:,[1,2]).^2,2),1);</command>
<command batch="77">I = [Ixx, Ixy, Ixz;...</command>
<command batch="77">Iyx, Iyy, Iyz;...</command>
<command batch="77" execution_time="30">Izx, Izy, Izz];</command>
<command error="true" execution_time="918">moments(idx) = nHat*I*nHat';</command>
<command batch="78">for idx = 1:numFaces</command>
<command batch="78">nHat = faceCentroids(idx,:)/norm(faceCentroids(idx,:));</command>
<command batch="78">moments(idx) = nHat*I*nHat';</command>
<command batch="78" execution_time="70">end</command>
<command execution_time="20">moments</command>
<command execution_time="20">momentMinAxis</command>
<command execution_time="10">theta</command>
<command execution_time="10">momentMinAxis / norm(momentMinAxis)</command>
<command execution_time="20">norm(ans)</command>
<command execution_time="10">alpha</command>
<command execution_time="20">beta</command>
<command execution_time="20">gamma</command>
<command batch="79">model.data = data;</command>
<command batch="79" execution_time="30">guidata(hObject,model);</command>
<command execution_time="40">alpha</command>
<command execution_time="40">beta</command>
<command execution_time="40">gamma</command>
<command execution_time="20">theta</command>
</session>
<session>
<command time_stamp="150cf1924cb">%-- 11/3/2015 3:45 PM --%</command>
<command execution_time="10">alpha</command>
<command execution_time="30">beta</command>
<command execution_time="20">gamma</command>
<command execution_time="4372">alpha*180/pi</command>
<command execution_time="10">beta*180/pi</command>
<command execution_time="20">gamma*180/pi</command>
<command error="true" execution_time="90">figure; plot3D(modelCentroid)</command>
<command error="true" execution_time="840">figure; quiver(modelCentroid)</command>
<command execution_time="20">modelCentroid</command>
<command error="true" execution_time="190">figure; plot3(modelCentroid)</command>
<command execution_time="310">figure; plot3(modelCentroid(1),modelCentroid(2),modelCentroid(3))</command>
<command execution_time="80">figure; plot3([0, modelCentroid(1)],[0, modelCentroid(2)],[0, modelCentroid(3)])</command>
<command execution_time="70">grid on</command>
<command error="true" execution_time="290">xlabel(x);ylabel(y);zlabel(z);</command>
<command execution_time="80">xlabel('x');ylabel('y');zlabel('z');</command>
<command execution_time="20">set(gca,'zlim',[0 122])</command>
<command execution_time="10">set(gca,'zlim',[0 1])</command>
<command execution_time="20">alpha*180/pi</command>
<command execution_time="20">beta*180/pi</command>
<command execution_time="20">gamma*180/pi</command>
<command execution_time="20">model.distalEndZ</command>
</session>
<session>
<command time_stamp="150d201763a">%-- 11/4/2015 5:18 AM --%</command>
<command error="true" execution_time="1983">alpha</command>
<command execution_time="53">0.3273*180/pi</command>
<command execution_time="25">0.2629*180/pi</command>
<command execution_time="28">0.0668*180/pi</command>
<command execution_time="421">plot(model.data)</command>
<command execution_time="92">figure; plot(model.data(:,1))</command>
<command execution_time="27">plot(model.data(:,2))</command>
<command execution_time="24">plot(model.data(:,3))</command>
<command execution_time="23">plot(sqrt(sum(model.data(:,1:2).^2)))</command>
<command execution_time="30">R = rotx(-0.3273)*roty(0.2629)*rotz(0.0668);</command>
<command error="true" execution_time="233">for idx = 1:size(model.data); R*data(idx,:)';end;</command>
<command execution_time="108">for idx = 1:size(model.data); R*model.data(idx,:)';end;</command>
<command execution_time="96">plot(model.data(:,1))</command>
<command execution_time="27">plot(model.data(:,2))</command>
<command execution_time="26">plot(model.data(:,3))</command>
<command execution_time="60">plot(model.data(:,1))</command>
<command execution_time="125">axis equal</command>
<command execution_time="104">plot(model.data(:,2))</command>
<command execution_time="26">plot(model.data(:,3))</command>
<command execution_time="24">plot(model.data(:,2))</command>
<command execution_time="25">plot(model.data(:,1))</command>
<command execution_time="24">model.distalEndX</command>
<command execution_time="19">model.distalEndY</command>
<command execution_time="17">model.centroidX</command>
<command execution_time="17">model.centroidY</command>
<command execution_time="17">model.centroidZ</command>
<command execution_time="28">theta</command>
<command error="true" execution_time="20">theta)</command>
<command execution_time="26">theta0</command>
<command execution_time="20">0.2239*180/pi</command>
<command execution_time="19">.0816*180/pi</command>
<command execution_time="20">.01*180/pi</command>
<command execution_time="42">plot(model.data(:,1))</command>
<command execution_time="27">plot(model.data(:,2))</command>
<command execution_time="21">plot(model.data(:,3))</command>
<command execution_time="21">plot(model.data(:,2))</command>
<command execution_time="19">plot(model.data(:,1))</command>
<command execution_time="23">model = computeCentroid( hObject, model );</command>
<command execution_time="18">model.centroidX</command>
<command execution_time="17">model.centroidY</command>
<command execution_time="17" repeat="2">model.centroidZ</command>
<command execution_time="81">figure; plot(model.data(:,3))</command>
</session>
<session>
<command time_stamp="150d86b9f04">%-- 11/5/2015 11:12 AM --%</command>
<command batch="80">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="80">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="80">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="80">ylabel('Range (mm)','Fontsize',fontsize);</command>
<command batch="80">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="80">set(gcf,'color','w');</command>
<command batch="80" execution_time="2702">print([pname '1172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
<command batch="81">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="81">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="81">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="81">ylabel('Range (mm)','Fontsize',fontsize);</command>
<command batch="81">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="81" execution_time="393">set(gcf,'color','w');</command>
<command execution_time="220">clear all; close all;</command>
<command execution_time="870">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="82">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="82" execution_time="23">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="83">ylabel('Range (mm)','Fontsize',fontsize);</command>
<command batch="83">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="83" execution_time="53">set(gcf,'color','w');</command>
<command execution_time="1605">print([pname '1172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
<command batch="84">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="84">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="84">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="84">ylabel('Range (mm)','Fontsize',fontsize);</command>
<command batch="84">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="84" execution_time="396">set(gcf,'color','w');</command>
<command execution_time="229">clear all; close all;</command>
<command batch="85">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="85">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="85">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="85">ylabel('Range (mm)','Fontsize',fontsize);</command>
<command batch="85">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="85" execution_time="933">set(gcf,'color','w');</command>
<command execution_time="364">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command execution_time="19">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="86">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="86">ylabel('Range (mm)','Fontsize',fontsize);</command>
<command batch="86">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="86" execution_time="41">set(gcf,'color','w');</command>
<command execution_time="1572">print([pname '1172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
</session>
<session>
<command time_stamp="150e1c75002">%-- 11/7/2015 6:49 AM --%</command>
<command execution_time="104">model</command>
<command execution_time="20">point1</command>
<command execution_time="19">point2</command>
<command execution_time="19">size(repmat(ones(10,10),2))</command>
<command execution_time="21">size(model.guiExtendPoint2)</command>
<command error="true" execution_time="20">[x y z] = model.guiExtendPoint2;</command>
<command batch="87">if point1 == point2</command>
<command batch="87">point1 = floor(point1 * slicePerStep * numSlicePoints);</command>
<command batch="87">tmpData = data(point:end,:);</command>
<command batch="87">n = extend / slicePerStep;</command>
<command batch="87">for idx = 1:n</command>
<command batch="87">data = cat(1,data,tmpdata);</command>
<command batch="87" execution_time="9515">end</command>
<command execution_time="21" repeat="2">point1</command>
<command execution_time="19">model.guiExtendPoint1(3)</command>
<command execution_time="21">slicePerStep</command>
<command execution_time="19">numSlicePoints</command>
<command execution_time="16">slicePerStep = sliceHeights(end) / numSlice;</command>
<command batch="88">point1 = floor(point1 * slicePerStep * numSlicePoints);</command>
<command batch="88">tmpData = data(point1:end,:);</command>
<command batch="88" execution_time="25">n = extend / slicePerStep;</command>
<command execution_time="21">point1</command>
<command execution_time="19">sliceHeights(end)</command>
<command batch="89">point1 = model.guiExtendPoint1(3);</command>
<command batch="89">point2 = model.guiExtendPoint2(3);</command>
<command batch="89">numSlicePoints = model.numSlicePoints;</command>
<command batch="89">numSlice = length(sliceHeights);</command>
<command batch="89" execution_time="35">slicePerStep = sliceHeights(end) / numSlice;</command>
<command batch="90">point1 = floor(point1 * slicePerStep * numSlicePoints);</command>
<command batch="90">tmpData = data(point1:end,:);</command>
<command batch="90" execution_time="24">n = extend / slicePerStep;</command>
<command execution_time="19">point1</command>
<command execution_time="20">size(model.data)</command>
<command execution_time="20">slicePerStep</command>
<command execution_time="15">point1 = floor(point1 / slicePerStep * numSlicePoints);</command>
<command error="true" execution_time="346">point</command>
<command execution_time="19">point1</command>
<command execution_time="19">size(model.data)</command>
<command execution_time="19">9720/90</command>
<command execution_time="18">numSlice</command>
<command execution_time="18">numSlice * numSlicePoints</command>
<command execution_time="20">size(model.data)</command>
<command execution_time="14">tmpData = data(numSlice*numSlicePoints+1:end,:);</command>
<command execution_time="20">size(tmpData)</command>
<command execution_time="18">size(data)</command>
<command execution_time="16">tmpData = data(numSlice-1*numSlicePoints+1:end,:);</command>
<command execution_time="20">size(data)</command>
<command execution_time="19">numSlice-1</command>
<command execution_time="24">ans*numSlicePoints+1</command>
<command execution_time="19">9720-9631</command>
<command execution_time="346">figure; plot(tmpData(9631:end,:))</command>
<command execution_time="24">tmpData = data((numSlice-1)*numSlicePoints+1:end,:);</command>
<command execution_time="18">size(tmpData)</command>
<command execution_time="19">n</command>
<command batch="91" error="true">for idx = 1:n</command>
<command batch="91" error="true">data = cat(1,data,tmpdata);</command>
<command batch="91" error="true" execution_time="87">end</command>
<command batch="92">tmpData = data((numSlice-1)*numSlicePoints+1:end,:);</command>
<command batch="92">n = round(extend / slicePerStep);</command>
<command batch="92">for idx = 1:n</command>
<command batch="92">data = cat(1,data,tmpData);</command>
<command batch="92" execution_time="62">end</command>
<command execution_time="19">size(data)</command>
<command execution_time="20">size(model.data)</command>
<command execution_time="19">24750-9720</command>
<command execution_time="19">n * numSlicePoints</command>
<command execution_time="78">figure; plot(data(:,1))</command>
<command batch="93">sliceHeights = model.sliceHeights; % unit</command>
<command batch="93">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="93">numSlice = length(sliceHeights); % points</command>
<command batch="93" execution_time="35">slicePerStep = sliceHeights(end) / numSlice; % unit per step</command>
<command execution_time="27">24730 * slicePerStep</command>
<command execution_time="21">sliceHeights</command>
<command execution_time="23">4.9559e+04 - sliceHeights(end)</command>
<command execution_time="28">size(model.data)</command>
<command execution_time="18">108*90</command>
<command execution_time="18">slicePerStep</command>
<command execution_time="24">diff(sliceHeights)</command>
<command execution_time="14">tmpSliceHeights = sliceHeights(end)+slicePerStep:slicePerStep:extend+sliceHeights(end);</command>
<command execution_time="19">size(tmpSliceHeights)</command>
<command execution_time="19">extend / slicePerStep</command>
<command execution_time="19">tmpSliceHeights(end)</command>
<command execution_time="19">extend + sliceHeights(end)</command>
<command batch="94" error="true">n = round(extend / slicePerStep);</command>
<command batch="94" error="true">for idx = 1:n</command>
<command batch="94" error="true">tmpData(:,3) = tmpSliceHeights(idx);</command>
<command batch="94" error="true">data = cat(1,data,tmpData);</command>
<command batch="94" error="true">end</command>
<command batch="94" error="true" execution_time="124">sliceHeights = cat(1,sliceHeights,tmpSliceHeights);</command>
<command execution_time="20">size(sliceHeights)</command>
<command execution_time="21">size(tmpSliceHeights)</command>
<command execution_time="15">sliceHeights = cat(1,sliceHeights,tmpSliceHeights');</command>
<command execution_time="107">figure; plot(sliceHeights)</command>
<command execution_time="79">figure; plot(data(:,3))</command>
<command execution_time="78">figure; plot(data(1:24000,3))</command>
<command execution_time="99">figure; plot(log10(1:20))</command>
<command execution_time="73">figure; plot(log10(1:100))</command>
<command execution_time="74">figure; plot(log(1:100))</command>
<command error="true" execution_time="142">figure; plot(1/(1:100))</command>
<command execution_time="77">figure; plot(1./(1:100))</command>
<command execution_time="22">log10(0)</command>
<command execution_time="22">log10(1)</command>
<command execution_time="75">figure; plot(log10(1:200))</command>
<command execution_time="82">figure; plot(log10(1:10))</command>
<command execution_time="20">log10(1)</command>
<command batch="95" error="true">point1 = model.guiExtendPoint1;</command>
<command batch="95" error="true">point2 = model.guiExtendPoint2;</command>
<command batch="95" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="95" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="95" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="95" error="true">numSlice = length(sliceHeights); % points</command>
<command batch="95" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="95" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="95" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="95" error="true">n = point2 - (point1-1);</command>
<command batch="95" error="true">y = linspace(1,300,n);</command>
<command batch="95" error="true" execution_time="483">model.cirReduction = offset/30*log10(y);</command>
<command batch="96">modelHeight = max(model.data(:,3));</command>
<command batch="96">model.guiZEnvelope = 563;</command>
<command batch="96">model.guiExtend = model.guiZEnvelope - modelHeight; % 563 mm is the printer z envelope</command>
<command batch="96">model.guiExtendPoint1 = [0 0 modelHeight];</command>
<command batch="96" execution_time="46">model.guiExtendPoint2 = [0 0 modelHeight];</command>
<command batch="97" error="true">point1 = model.guiExtendPoint1;</command>
<command batch="97" error="true">point2 = model.guiExtendPoint2;</command>
<command batch="97" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="97" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="97" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="97" error="true">numSlice = length(sliceHeights); % points</command>
<command batch="97" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="97" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="97" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="97" error="true">n = point2 - (point1-1);</command>
<command batch="97" error="true">y = linspace(1,300,n);</command>
<command batch="97" error="true" execution_time="194">model.cirReduction = offset/30*log10(y);</command>
<command execution_time="21">n</command>
<command batch="98" error="true">point1 = model.guiExtendPoint1(3);</command>
<command batch="98" error="true">point2 = model.guiExtendPoint2(3);</command>
<command batch="98" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="98" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="98" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="98" error="true">numSlice = length(sliceHeights); % points</command>
<command batch="98" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="98" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="98" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="98" error="true">n = point2 - (point1-1);</command>
<command batch="98" error="true">y = linspace(1,300,n);</command>
<command batch="98" error="true" execution_time="144">model.cirReduction = offset/30*log10(y);</command>
<command batch="99" error="true">offset = model.guiMoldKeysOffset = 20; % mm</command>
<command batch="99" error="true">% ADD MOLD KEYS</command>
<command batch="99" error="true">% APPLY PERCENT CIRCUMFERENCIAL REDUCTION</command>
<command batch="99" error="true">point1 = model.guiExtendPoint1(3);</command>
<command batch="99" error="true">point2 = model.guiExtendPoint2(3);</command>
<command batch="99" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="99" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="99" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="99" error="true">numSlice = length(sliceHeights); % points</command>
<command batch="99" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="99" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="99" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="99" error="true">n = point2 - (point1-1);</command>
<command batch="99" error="true">y = linspace(1,300,n);</command>
<command batch="99" error="true" execution_time="125">model.cirReduction = offset/30*log10(y);</command>
<command batch="100">model.guiMoldKeysOffset = 20; % mm</command>
<command batch="100">% ADD MOLD KEYS</command>
<command batch="100">% APPLY PERCENT CIRCUMFERENCIAL REDUCTION</command>
<command batch="100">point1 = model.guiExtendPoint1(3);</command>
<command batch="100">point2 = model.guiExtendPoint2(3);</command>
<command batch="100">zEnvelope = model.guiZEnvelope;</command>
<command batch="100">sliceHeights = model.sliceHeights; % unit</command>
<command batch="100">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="100">offset = model.guiMoldKeysOffset;</command>
<command batch="100">numSlice = length(sliceHeights); % points</command>
<command batch="100">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="100">point1 = round(point1 / slicePerStep);</command>
<command batch="100">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="100">n = point2 - (point1-1);</command>
<command batch="100">y = linspace(1,300,n);</command>
<command batch="100" execution_time="131">model.cirReduction = offset/30*log10(y);</command>
<command execution_time="79">figure; plot(model.cirReduction)</command>
<command execution_time="22">log10(300)</command>
<command execution_time="22">log10(30)</command>
<command error="true" execution_time="21">plot(log10(1:500)</command>
<command execution_time="21">plot(log10(1:500))</command>
<command execution_time="21">log10(500)</command>
<command execution_time="19">20/ans</command>
<command batch="101">model.guiMoldKeysOffset = 20; % mm</command>
<command batch="101">% ADD MOLD KEYS</command>
<command batch="101">% APPLY PERCENT CIRCUMFERENCIAL REDUCTION</command>
<command batch="101">point1 = model.guiExtendPoint1(3);</command>
<command batch="101">point2 = model.guiExtendPoint2(3);</command>
<command batch="101">zEnvelope = model.guiZEnvelope;</command>
<command batch="101">sliceHeights = model.sliceHeights; % unit</command>
<command batch="101">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="101">offset = model.guiMoldKeysOffset;</command>
<command batch="101">numSlice = length(sliceHeights); % points</command>
<command batch="101">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="101">point1 = round(point1 / slicePerStep);</command>
<command batch="101">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="101">n = point2 - (point1-1);</command>
<command batch="101">y = linspace(10,300,n);</command>
<command batch="101" execution_time="135">model.cirReduction = offset/300*log10(y);</command>
<command execution_time="82">figure; plot(model.cirReduction)</command>
<command execution_time="22">log10(300)</command>
<command execution_time="17">model.cirReduction = offset/log10(300)*log10(y);</command>
<command execution_time="75">figure; plot(model.cirReduction)</command>
<command execution_time="75">figure; plot(log10(10:300))</command>
<command batch="102">n = point2 - (point1-1);</command>
<command batch="102">y = linspace(1,300,n);</command>
<command batch="102" execution_time="31">model.cirReduction = offset/log10(300)*log10(y);</command>
<command execution_time="79">figure; plot(model.cirReduction)</command>
<command execution_time="61">hold on; plot(1:187*.5)</command>
<command error="true" execution_time="146">figure; plot(1:187,1:187.*.5)</command>
<command execution_time="23">4/6</command>
<command execution_time="21">8/6</command>
<command execution_time="81">figure; plot(1:187,ones(1,187).*.5)</command>
<command execution_time="76">figure; plot(model.cirReduction)</command>
<command execution_time="20">model.guiExtend / slicePerStep</command>
<command execution_time="21">n</command>
<command execution_time="20">point2 - point1</command>
<command batch="103">point1 = model.guiExtendPoint1(3);</command>
<command batch="103">point2 = model.guiExtendPoint2(3);</command>
<command batch="103">zEnvelope = model.guiZEnvelope;</command>
<command batch="103">sliceHeights = model.sliceHeights; % unit</command>
<command batch="103">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="103">offset = model.guiMoldKeysOffset;</command>
<command batch="103">numSlice = length(sliceHeights); % points</command>
<command batch="103">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="103">anglesIdx = [1, round(numSlice*.25),round(numSlice*.75), numSlice];</command>
<command batch="103">point1 = round(point1 / slicePerStep);</command>
<command batch="103">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="103">n = point2 - point1;</command>
<command batch="103">y = linspace(1,300,n);</command>
<command batch="103" execution_time="122">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="104" error="true">for idx = point1:point2</command>
<command batch="104" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="104" error="true">window = window(anglesIdx);</command>
<command batch="104" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx+1);</command>
<command batch="104" error="true" execution_time="60">end</command>
<command execution_time="22">idx</command>
<command execution_time="21">point2</command>
<command execution_time="29">point1</command>
<command batch="105" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="105" error="true" execution_time="38">window = window(anglesIdx);</command>
<command execution_time="17">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command execution_time="22">size(window)</command>
<command error="true" execution_time="344">angleIdx</command>
<command execution_time="22">anglesIdx</command>
<command execution_time="28">round(numSlice*.25)</command>
<command execution_time="22">numSlice</command>
<command execution_time="20">numSlicePoints</command>
<command execution_time="21">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints]</command>
<command batch="106" error="true">for idx = point1:point2</command>
<command batch="106" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="106" error="true">window = window(angleIdx);</command>
<command batch="106" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx+1);</command>
<command batch="106" error="true" execution_time="59">end</command>
<command execution_time="25">window</command>
<command error="true" execution_time="22">cirReduction(idx+1)</command>
<command execution_time="16">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command execution_time="23">size(window)</command>
<command batch="107" error="true">idx2 = 1;</command>
<command batch="107" error="true">for idx = point1:point2</command>
<command batch="107" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="107" error="true">window = window(angleIdx);</command>
<command batch="107" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx2);</command>
<command batch="107" error="true" execution_time="64">end</command>
<command error="true" execution_time="24">data(window,1:2)</command>
<command execution_time="22">window</command>
<command execution_time="21" repeat="2">size(data)</command>
<command execution_time="20">size(model.data)</command>
<command execution_time="17">data = model.data;</command>
<command batch="108" error="true">idx2 = 1;</command>
<command batch="108" error="true">for idx = point1:point2</command>
<command batch="108" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="108" error="true">window = window(angleIdx);</command>
<command batch="108" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx2);</command>
<command batch="108" error="true">idx2 = idx2 + 1;</command>
<command batch="108" error="true" execution_time="72">end</command>
<command batch="109" error="true">idx2 = 1;</command>
<command batch="109" error="true">for idx = point1:point2</command>
<command batch="109" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="109" error="true">window = window(angleIdx);</command>
<command batch="109" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx2-1);</command>
<command batch="109" error="true">idx2 = idx2 + 1;</command>
<command batch="109" error="true" execution_time="68">end</command>
<command batch="110" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="110" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="110" error="true">n = point2 - point1;</command>
<command batch="110" error="true">y = linspace(1,300,n);</command>
<command batch="110" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="110" error="true">idx2 = 1;</command>
<command batch="110" error="true">for idx = point1:point2</command>
<command batch="110" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="110" error="true">window = window(angleIdx);</command>
<command batch="110" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx2);</command>
<command batch="110" error="true">idx2 = idx2 + 1;</command>
<command batch="110" error="true" execution_time="123">end</command>
<command execution_time="106">figure; plot(data(:,1))</command>
<command execution_time="81">figure; plot(data(:,2))</command>
<command execution_time="156">close all</command>
<command execution_time="71">clear all;</command>
</session>
<session>
<command time_stamp="150e3f309ed">%-- 11/7/2015 4:56 PM --%</command>
<command execution_time="163">lafs = javax.swing.UIManager.getInstalledLookAndFeels</command>
<command execution_time="26">for lafIdx = 1:length(lafs),  disp(lafs(lafIdx));  end</command>
<command execution_time="64">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.metal.MetalLookAndFeel');</command>
</session>
<session>
<command time_stamp="150e715dcb1">%-- 11/8/2015 7:33 AM --%</command>
<command execution_time="47">lafs = javax.swing.UIManager.getInstalledLookAndFeels</command>
<command execution_time="28">for lafIdx = 1:length(lafs),  disp(lafs(lafIdx));  end</command>
<command execution_time="200">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.nimbus.NimbusLookAndFeel');</command>
<command execution_time="180">figure</command>
<command execution_time="21">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.metal.MetalLookAndFeel');</command>
<command execution_time="77">figure</command>
<command execution_time="39">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.nimbus.NimbusLookAndFeel');</command>
<command execution_time="78">figure</command>
<command execution_time="1217">JTattooDemo</command>
<command execution_time="27">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.nimbus.NimbusLookAndFeel');</command>
<command execution_time="404">JTattooDemo</command>
<command execution_time="70">figure</command>
<command execution_time="411">JTattooDemo</command>
<command execution_time="148">javax.swing.UIManager.setLookAndFeel('com.jgoodies.looks.plastic.Plastic3DLookAndFeel')</command>
<command execution_time="74">figure</command>
<command error="true" execution_time="29" repeat="3">javax.swing.UIManager.setLookAndFeel('com.jtatto.noire.NoireLookAndFeel')</command>
<command error="true" execution_time="28">javax.swing.UIManager.setLookAndFeel('JTattooDemo.JTattoo.com.jtatto.noire.NoireLookAndFeel')</command>
<command error="true" execution_time="28">javax.swing.UIManager.setLookAndFeel('com.jtattoo.plaf.noire.NoireLookAndFeel')</command>
<command batch="111">folder = fileparts(mfilename('fullpath'));</command>
<command batch="111" execution_time="140">javaclasspath( {folder, [folder '\JTattoo.jar']} );</command>
<command execution_time="42">lafs</command>
<command execution_time="73">clear all</command>
<command execution_time="36">folder = fileparts(mfilename('fullpath'));</command>
<command execution_time="91" repeat="2">javaclasspath( {folder, [folder '\JTattoo.jar']} );</command>
<command execution_time="20">folder = fileparts(mfilename('fullpath'));</command>
<command execution_time="87">javaclasspath( {folder, [folder '\JTattoo.jar']} );</command>
<command error="true" execution_time="52">javax.swing.UIManager.setLookAndFeel('com.jtattoo.plaf.noire.NoireLookAndFeel')</command>
<command execution_time="20">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.nimbus.NimbusLookAndFeel');</command>
<command execution_time="76">figure</command>
<command execution_time="320" repeat="3">JTattooDemo</command>
</session>
<session>
<command time_stamp="150e747db67">%-- 11/8/2015 8:27 AM --%</command>
<command execution_time="74">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.nimbus.NimbusLookAndFeel');</command>
<command execution_time="164">figure; plot(model.data(:,1))</command>
<command execution_time="66">hold on; plot(model.data(:,2))</command>
<command batch="112">% USER DEFINED VALUES</command>
<command batch="112">modelHeight = max(model.data(:,3));</command>
<command batch="112">model.guiZEnvelope = 563;</command>
<command batch="112">model.guiExtend = model.guiZEnvelope - modelHeight; % 563 mm is the printer z envelope</command>
<command batch="112">model.guiExtendPoint1 = [0 0 modelHeight];</command>
<command batch="112">model.guiExtendPoint2 = [0 0 modelHeight];</command>
<command batch="112">% EXTEND MODEL</command>
<command batch="112" execution_time="1333">model = extendModel( hObject, model );</command>
<command execution_time="81">figure; plot(model.data(:,1))</command>
<command batch="113" error="true">% USER DEFINED VALUES</command>
<command batch="113" error="true">model.guiMoldKeysOffset = 20; % mm</command>
<command batch="113" error="true">% ADD MOLD KEYS</command>
<command batch="113" error="true">% APPLY PERCENT CIRCUMFERENCIAL REDUCTION</command>
<command batch="113" error="true">data = model.data;</command>
<command batch="113" error="true">point1 = model.guiExtendPoint1(3);</command>
<command batch="113" error="true">point2 = model.guiExtendPoint2(3);</command>
<command batch="113" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="113" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="113" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="113" error="true">offset = model.guiMoldKeysOffset;</command>
<command batch="113" error="true">numSlice = length(sliceHeights); % points</command>
<command batch="113" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="113" error="true">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="113" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="113" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="113" error="true">n = point2 - point1;</command>
<command batch="113" error="true">y = linspace(1,300,n);</command>
<command batch="113" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="113" error="true">idx2 = 1;</command>
<command batch="113" error="true">for idx = point1:point2</command>
<command batch="113" error="true">window = idx*numSlicePoints+1:numSlicePoints*(idx+1);</command>
<command batch="113" error="true">window = window(angleIdx);</command>
<command batch="113" error="true">data(window,1:2) = data(window,1:2)+cirReduction(idx2);</command>
<command batch="113" error="true">idx2 = idx2 + 1;</command>
<command batch="113" error="true" execution_time="349">end</command>
</session>
<session>
<command time_stamp="150e75f4d82">%-- 11/8/2015 8:53 AM --%</command>
<command execution_time="22">close all</command>
<command execution_time="881">JTattooDemo</command>
<command execution_time="380">open startup</command>
<command error="true" execution_time="59">startup</command>
</session>
<session>
<command time_stamp="150e7df2098">%-- 11/8/2015 11:12 AM --%</command>
<command execution_time="421">javaclasspath( 'C:\Users\Tyler Fosnight\Documents\MATLAB\JTattooDemo\JTattoo.jar' );</command>
<command error="true" execution_time="56">javax.swing.UIManager.setLookAndFeel( 'com.jtattoo.plaf.noire.NoireLookAndFeel' );</command>
<command execution_time="22">folder = fileparts(mfilename('fullpath'));</command>
<command execution_time="31">folder</command>
<command execution_time="178">JTattooDemo</command>
<command execution_time="24" repeat="2">folder</command>
<command execution_time="68">javaclasspath( {folder, [folder '\JTattoo.jar']} );</command>
<command error="true" execution_time="40">javax.swing.UIManager.setLookAndFeel( 'com.jtattoo.plaf.noire.NoireLookAndFeel' );</command>
<command execution_time="1058" repeat="2">JTattooDemo</command>
<command batch="114" execution_time="24" repeat="2">jTattoo = javaObjectEDT( 'UpdateJTattooInterface' );</command>
<command batch="114" execution_time="89">javaMethodEDT('setLookAndFeel', jTattoo, lookandfeel, 'Default', javaWindow);</command>
<command execution_time="28">gcbf</command>
<command execution_time="23" repeat="3">originalLnF</command>
<command execution_time="26">javaWindow</command>
</session>
<session>
<command time_stamp="150e7ebed5b">%-- 11/8/2015 11:26 AM --%</command>
<command execution_time="373">javaclasspath( 'C:\Users\Tyler Fosnight\Documents\MATLAB\JTattooDemo\JTattoo.jar' );</command>
<command error="true" execution_time="71">jTattoo = javaObjectEDT( 'UpdateJTattooInterface' )</command>
<command batch="115" error="true">originalLnF = javax.swing.UIManager.getLookAndFeel;</command>
<command batch="115" error="true" execution_time="93">javaWindow = getappdata( gcbf, 'javaWindow' );</command>
<command error="true" execution_time="62">javax.swing.UIManager.setLookAndFeel( 'com.jtattoo.plaf.noire.NoireLookAndFeel' );</command>
<command batch="116">folder = fileparts(mfilename('fullpath'));</command>
<command batch="116">javaclasspath( {folder, [folder '\JTattoo.jar']} );</command>
<command batch="116">% The main figure can't be moved or resized with setting the default Windows L&amp;F</command>
<command batch="116">%originalLnF = javax.swing.UIManager.getLookAndFeel;</command>
<command batch="116">%javax.swing.UIManager.setLookAndFeel(originalLnF); %'com.sun.java.swing.plaf.windows.WindowsLookAndFeel');</command>
<command batch="116">% Create MATLAB figure</command>
<command batch="116">hFig = figure( 'Name', 'JTattoo Look-and-Feel Demo', ...</command>
<command batch="116">'NumberTitle', 'off', ...</command>
<command batch="116">'MenuBar', 'none', ...</command>
<command batch="116">'Toolbar', 'none', ...</command>
<command batch="116" execution_time="183">'CloseRequestFcn',@onExit);</command>
<command execution_time="26">jTattoo = javaObjectEDT( 'UpdateJTattooInterface' );</command>
<command error="true" execution_time="259">close all</command>
<command execution_time="308">JTattooDemo</command>
<command batch="117" error="true">% Add the JTatto java library</command>
<command batch="117" error="true">folder = fileparts(mfilename('fullpath'));</command>
<command batch="117" error="true">javaclasspath( {folder, [folder '\JTattoo.jar']} );</command>
<command batch="117" error="true">% The main figure can't be moved or resized with setting the default Windows L&amp;F</command>
<command batch="117" error="true">%originalLnF = javax.swing.UIManager.getLookAndFeel;</command>
<command batch="117" error="true">%javax.swing.UIManager.setLookAndFeel(originalLnF); %'com.sun.java.swing.plaf.windows.WindowsLookAndFeel');</command>
<command batch="117" error="true">% Create MATLAB figure</command>
<command batch="117" error="true">hFig = figure( 'Name', 'JTattoo Look-and-Feel Demo', ...</command>
<command batch="117" error="true">'NumberTitle', 'off', ...</command>
<command batch="117" error="true">'MenuBar', 'none', ...</command>
<command batch="117" error="true">'Toolbar', 'none', ...</command>
<command batch="117" error="true">'CloseRequestFcn',@onExit);</command>
<command batch="117" error="true">% Get the MATLAB figure's underlying Java frame</command>
<command batch="117" error="true">javaWindow = getJavaFrame( hFig );</command>
<command batch="117" error="true">setappdata( hFig, 'javaWindow', javaWindow );</command>
<command batch="117" error="true">% Add the figure's main menus</command>
<command batch="117" error="true">addMainMenus( hFig );</command>
<command batch="117" error="true">% Add the figure's controls</command>
<command batch="117" error="true" execution_time="928">addControls( hFig );</command>
<command execution_time="309">JTattooDemo</command>
</session>
<session>
<command time_stamp="150e8295b2c">%-- 11/8/2015 12:33 PM --%</command>
<command execution_time="5082">JTattooDemo</command>
<command batch="118">jTattoo = javaObjectEDT( 'UpdateJTattooInterface' );</command>
<command batch="118" execution_time="6300">javaMethodEDT('setLookAndFeel', jTattoo, lookandfeel, 'Default', javaWindow);</command>
<command execution_time="383">close all</command>
</session>
<session>
<command time_stamp="150e82dd708">%-- 11/8/2015 12:38 PM --%</command>
<command execution_time="430">open startup</command>
</session>
<session>
<command time_stamp="150ec091d26">%-- 11/9/2015 6:37 AM --%</command>
<command execution_time="1866">JTattooDemo</command>
<command execution_time="4178">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.metal.MetalLookAndFeel');</command>
</session>
<session>
<command time_stamp="150ec110921">%-- 11/9/2015 6:45 AM --%</command>
<command execution_time="1386">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.metal.MetalLookAndFeel');</command>
<command execution_time="34">startup</command>
<command execution_time="1047">JTattooDemo</command>
</session>
<session>
<command time_stamp="150eccf9896">%-- 11/9/2015 10:13 AM --%</command>
<command batch="119">clear all; close all;</command>
<command batch="119">pname = 'C:\Users\Tyler Fosnight\Documents\Tyler Documents\UC\Grad School\inVivoData\results\DecorrAndIBSFigures';</command>
<command batch="119">fontsize = 20;</command>
<command batch="119">rangemax = 15;</command>
<command batch="119" execution_time="4002">rangemax2 = 20;</command>
<command execution_time="16460" repeat="3">h=openfig([pname '20141117R268Trial8TTCIP_mask.fig']);</command>
<command execution_time="1242">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command execution_time="280">close all</command>
<command execution_time="289">close all;</command>
<command execution_time="22" repeat="3">sname</command>
<command execution_time="83">clear all</command>
<command batch="120">h=openfig([pname '20141117R268Trial8TTCIP_mask.fig']);</command>
<command batch="120">pause(2); set(gcf,'Position',[201 80 560 420]); pause(2)</command>
<command batch="120">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="120">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="120">ylabel('Range (mm)', 'Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="120" execution_time="9876">print([sname '20141117R268Trial8TTCIP_mask'],'-depsc');</command>
<command batch="121">h=openfig([pname '20141117R268Trial8TTCIP_mask.fig']);</command>
<command batch="121">pause(2); set(gcf,'Position',[201 80 560 420]); pause(2)</command>
<command batch="121">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="121">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="121">ylabel('Range (mm)', 'Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="121" execution_time="8087">print([sname '20141117R268Trial8TTCIP_mask'],'-depsc','-r0');</command>
<command batch="122">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="122">pause(2); set(gcf,'Position',[201 80 560 420]); pause(2)</command>
<command batch="122">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="122">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="122">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="122" execution_time="8195">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command execution_time="1006">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="123">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="123" execution_time="36">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command execution_time="2870">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command batch="124">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="124">pause(2); set(gcf,'Position',[201 80 560 420]); pause(2)</command>
<command batch="124">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="124">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="124" execution_time="5040">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command execution_time="2574">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command batch="125">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="125">pause(2); set(gcf,'Position',[201 80 560 420]); pause(2)</command>
<command batch="125">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="125">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="125">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="125" execution_time="8188">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command execution_time="2895">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command execution_time="993">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="126">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="126">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="126">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="126">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="126">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="126" execution_time="4947">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command batch="127">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="127">pause(2); set(gcf,'Position',[201 80 560 420]); pause(2)</command>
<command batch="127">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="127">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="127">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="127" execution_time="8736">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command batch="128">h=openfig([pname '20150204IPTrial4TTC_mask.fig']);</command>
<command batch="128">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="128">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="128">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="128">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="128" execution_time="5141">print([sname '20150204IPTrial4TTC_mask'],'-depsc');</command>
<command execution_time="380">close all</command>
</session>
<session>
<command time_stamp="150ee70dbf8">%-- 11/9/2015 5:49 PM --%</command>
<command batch="129">load decorr_VX2_invivo_results.mat;</command>
<command batch="129">% convert dB-scaled IBS to linear scale</command>
<command batch="129">IBS = 10.^(IBS/10);</command>
<command batch="129">% trial indices for focused/HIFU, unfocused/bulk, and all trials</command>
<command batch="129">focused = 1:13;</command>
<command batch="129">unfocused = 14:23;</command>
<command batch="129">all = 1:23;</command>
<command batch="129">% classifications of TTC uptake</command>
<command batch="129">untreated = (uptake==0);</command>
<command batch="129">treated = (uptake&gt;=1);</command>
<command batch="129">unablated = (uptake&lt;=1);</command>
<command batch="129">ablated = (uptake==2);</command>
<command batch="129">% classifications of tissue type</command>
<command batch="129">liver = (tissue==2);</command>
<command batch="129">tumor = (tissue==3);</command>
<command batch="129">% uptake/tissue combinations</command>
<command batch="129">untreated_tumor = untreated &amp; tumor;</command>
<command batch="129">treated_tumor = treated &amp; tumor;</command>
<command batch="129">unablated_tumor = unablated &amp; tumor;</command>
<command batch="129">ablated_tumor = ablated &amp; tumor;</command>
<command batch="129">untreated_liver = untreated &amp; liver;</command>
<command batch="129">treated_liver = treated &amp; liver;</command>
<command batch="129">unablated_liver = unablated &amp; liver;</command>
<command batch="129" execution_time="1007">ablated_liver = ablated &amp; liver;</command>
<command batch="130" error="true">% log10-scaled trial max of decorrelation for ablated</command>
<command batch="130" error="true">% regions, tumor tissue</command>
<command batch="130" error="true">decorrUncomp_ablated_tumor_max = log10(maskmax(decorrUncomp,ablated_tumor));</command>
<command batch="130" error="true">decorr_ablated_tumor_max = log10(maskmax(decorr,ablated_tumor));</command>
<command batch="130" error="true">% dB-scaled trial max of IBS for untreated, treated, ablated regions,</command>
<command batch="130" error="true">% tumor tissue</command>
<command batch="130" error="true" execution_time="2310">IBS_ablated_tumor_max = 10*log10(maskmax(IBS,ablated_tumor));</command>
<command execution_time="47">maskmax = @(x,map) reshape(max(max(x.*map.*(x&gt;0))),1,size(x,3));</command>
<command batch="131">% log10-scaled trial max of decorrelation for ablated</command>
<command batch="131">% regions, tumor tissue</command>
<command batch="131">decorrUncomp_ablated_tumor_max = log10(maskmax(decorrUncomp,ablated_tumor));</command>
<command batch="131">decorr_ablated_tumor_max = log10(maskmax(decorr,ablated_tumor));</command>
<command batch="131">% dB-scaled trial max of IBS for untreated, treated, ablated regions,</command>
<command batch="131">% tumor tissue</command>
<command batch="131" execution_time="135">IBS_ablated_tumor_max = 10*log10(maskmax(IBS,ablated_tumor));</command>
<command execution_time="42">decorr_ablated_tumor_max</command>
<command execution_time="26">size(decorr)</command>
<command execution_time="7899">figure; imagesc(squeeze(decorr(:,:,1)))</command>
<command execution_time="87">figure; imagesc(squeeze(ablated_tumor(:,:,1)))</command>
<command error="true" execution_time="452">imagesc(scqueeze(decorr(:,:,7)))</command>
<command execution_time="22">imagesc(squeeze(decorr(:,:,7)))</command>
<command execution_time="22">imagesc(squeeze(ablated_tumor(:,:,7)))</command>
<command execution_time="30">imagesc(squeeze(log10(decorr(:,:,7))))</command>
<command execution_time="203">close all;</command>
</session>
<session>
<command time_stamp="150f12192f6">%-- 11/10/2015 6:22 AM --%</command>
<command batch="132">% Prevent an annoying warning msg</command>
<command batch="132">warning off MATLAB:uitabgroup:OldVersion</command>
<command batch="132">% Prepare a tab-group consisting of two tabs</command>
<command batch="132">hTabGroup = uitabgroup; drawnow;</command>
<command batch="132">tab1 = uitab(hTabGroup, 'title','Panel 1');</command>
<command batch="132">a = axes('parent', tab1); surf(peaks);</command>
<command batch="132">tab2 = uitab(hTabGroup, 'title','Panel 2');</command>
<command batch="132">uicontrol(tab2, 'String','Close', 'Callback','close(gcbf)');</command>
<command batch="132">% Get the underlying Java reference (use hidden property)</command>
<command batch="132" execution_time="5522">jTabGroup = getappdata(handle(hTabGroup),'JTabbedPane');</command>
<command batch="133" error="true">% Equivalent manners to set a red tab foreground:</command>
<command batch="133" error="true">jTabGroup.setForegroundAt(1,java.awt.Color(1.0,0,0)); % tab #1</command>
<command batch="133" error="true">jTabGroup.setTitleAt(1,'&lt;html&gt;&lt;font color="red"&gt;&lt;i&gt;Panel 2');</command>
<command batch="133" error="true" execution_time="113">jTabGroup.setForeground(java.awt.Color.red);</command>
<command execution_time="18" repeat="2">close all</command>
<command execution_time="634">open startup</command>
<command execution_time="21" repeat="2">javax.swing.UIManager.setLookAndFeel('javax.swing.plaf.metal.MetalLookAndFeel');</command>
<command batch="134">f=com.mathworks.mde.desk.MLDesktop.getInstance.getMainFrame();</command>
<command batch="134">javax.swing.SwingUtilities.updateComponentTreeUI(f);</command>
</session>
<session>
<command time_stamp="150f135e0ec">%-- 11/10/2015 6:44 AM --%</command>
<command batch="135">% Set old and new background color</command>
<command batch="135">oldbgcolor = javax.swing.plaf.ColorUIResource(236/255,233/255,216/255);</command>
<command batch="135">newbgcolor = javax.swing.plaf.ColorUIResource(237/255,237/255,237/255);</command>
<command batch="135">% Get default UI properties</command>
<command batch="135">defaults = javax.swing.UIManager.getDefaults;</command>
<command batch="135">propValues = defaults.elements;</command>
<command batch="135">propKeys = defaults.keys;</command>
<command batch="135">while propKeys.hasMoreElements</command>
<command batch="135">key = propKeys.nextElement;</command>
<command batch="135">value = propValues.nextElement;</command>
<command batch="135">% Check if value equal to old bg color and replace with new bg color</command>
<command batch="135">if value == oldbgcolor</command>
<command batch="135">javax.swing.UIManager.put(key,newbgcolor);</command>
<command batch="135">end</command>
<command batch="135">end</command>
<command batch="135">% Repaint desktop</command>
<command batch="135">f=com.mathworks.mde.desk.MLDesktop.getInstance.getMainFrame();</command>
<command batch="135">javax.swing.SwingUtilities.updateComponentTreeUI(f);</command>
<command batch="135">% Clean up</command>
<command batch="135">clear oldbgcolor newbgcolor defaults propKeys propValues key value f;</command>
</session>
<session>
<command time_stamp="150f13d9699">%-- 11/10/2015 6:52 AM --%</command>
<command batch="136">defaults = javax.swing.UIManager.getDefaults</command>
<command batch="136">propValues = defaults.elements</command>
<command batch="136" execution_time="286">propKeys = defaults.keys</command>
<command execution_time="33">propValues</command>
<command execution_time="32">propKeys</command>
<command error="true" execution_time="1248">default</command>
<command execution_time="61">defaults</command>
<command execution_time="32">propKeys.hasMoreElements</command>
<command execution_time="33">size(propKeys)</command>
<command execution_time="41">propKeys</command>
<command batch="137">startup</command>
</session>
<session>
<command time_stamp="150f159da2a">%-- 11/10/2015 7:23 AM --%</command>
<command error="true" execution_time="429">disp(hello world)</command>
<command execution_time="260">figure;</command>
</session>
<session>
<command time_stamp="150f1687d98">%-- 11/10/2015 7:39 AM --%</command>
<command batch="138">set(0,'DefaultFigureColor',[63/255,63/255,58/255]);</command>
<command batch="138" execution_time="61">set(0,'DefaultUicontrolBackgroundColor',[63/255,63/255,58/255]);</command>
<command execution_time="171">figure;</command>
<command execution_time="86" repeat="2">figure</command>
</session>
<session>
<command time_stamp="150f173eb20">%-- 11/10/2015 7:51 AM --%</command>
<command execution_time="179">figure</command>
</session>
<session>
<command time_stamp="150f1812b64">%-- 11/10/2015 8:06 AM --%</command>
<command execution_time="182">figure</command>
<command batch="139">clear; close all;</command>
<command batch="139">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</command>
<command batch="139">%%% utility inline functions</command>
<command batch="139">% find trial means of quantities masked by Boolean maps, ignoring zero</command>
<command batch="139">%  values (all are outside tissue boundaries on US images)</command>
<command batch="139">maskmean = @(x,map) reshape(sum(sum(x.*map.*(x&gt;0))) ...</command>
<command batch="139">./sum(sum(map.*(x&gt;0))),1,size(x,3));</command>
<command batch="139">% find trail max of quantities masked by Boolena maps, ignoring zero values</command>
<command batch="139">% (all are outside tissue boundaries on US images)</command>
<command batch="139">maskmax = @(x,map) reshape(max(max(x.*map.*(x&gt;0))),1,size(x,3));</command>
<command batch="139">% find mean and standard error of vectors including NaNs</command>
<command batch="139">nanMSE = @(x) [nanmean(x) nanstd(x)/sqrt(sum(~isnan(x)))];</command>
<command batch="139">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</command>
<command batch="139">load decorr_VX2_invivo_results.mat;</command>
<command batch="139">% convert dB-scaled IBS to linear scale</command>
<command batch="139">IBS = 10.^(IBS/10);</command>
<command batch="139">% trial indices for focused/HIFU, unfocused/bulk, and all trials</command>
<command batch="139">focused = 1:13;</command>
<command batch="139">unfocused = 14:23;</command>
<command batch="139">all = 1:23;</command>
<command batch="139">% classifications of TTC uptake</command>
<command batch="139">untreated = (uptake==0);</command>
<command batch="139">treated = (uptake&gt;=1);</command>
<command batch="139">unablated = (uptake&lt;=1);</command>
<command batch="139">ablated = (uptake==2);</command>
<command batch="139">% classifications of tissue type</command>
<command batch="139">liver = (tissue==2);</command>
<command batch="139">tumor = (tissue==3);</command>
<command batch="139">% uptake/tissue combinations</command>
<command batch="139">untreated_tumor = untreated &amp; tumor;</command>
<command batch="139">treated_tumor = treated &amp; tumor;</command>
<command batch="139">unablated_tumor = unablated &amp; tumor;</command>
<command batch="139">ablated_tumor = ablated &amp; tumor;</command>
<command batch="139">untreated_liver = untreated &amp; liver;</command>
<command batch="139">treated_liver = treated &amp; liver;</command>
<command batch="139">unablated_liver = unablated &amp; liver;</command>
<command batch="139" execution_time="1456">ablated_liver = ablated &amp; liver;</command>
<command batch="140">% log10-scaled trial max of decorrelation for ablated</command>
<command batch="140">% regions, tumor tissue</command>
<command batch="140">decorrUncomp_ablated_tumor_max = log10(maskmax(decorrUncomp,ablated_tumor));</command>
<command batch="140">decorr_ablated_tumor_max = log10(maskmax(decorr,ablated_tumor));</command>
<command batch="140">% dB-scaled trial max of IBS for untreated, treated, ablated regions,</command>
<command batch="140">% tumor tissue</command>
<command batch="140" execution_time="132">IBS_ablated_tumor_max = 10*log10(maskmax(IBS,ablated_tumor));</command>
<command batch="141">% log10-scaled trial max of decorrelation for ablated</command>
<command batch="141">% regions, liver tissue</command>
<command batch="141">decorrUncomp_ablated_liver = log10(maskmax(decorrUncomp,ablated_liver));</command>
<command batch="141">decorr_ablated_liver = log10(maskmax(decorr,ablated_liver));</command>
<command batch="141">% dB-scaled trial max of IBS for ablated regions,</command>
<command batch="141">% liver tissue</command>
<command batch="141" execution_time="133">IBS_ablated_liver = 10*log10(maskmax(IBS,ablated_liver))</command>
<command execution_time="31">decorrUncomp_ablated_tumor_max</command>
<command execution_time="32">decorr_ablated_tumor_max</command>
<command error="true" execution_time="987">figure; imagesc(squeez(decorr(:,:,1)))</command>
<command execution_time="6033">figure; imagesc(squeeze(decorr(:,:,1)))</command>
<command execution_time="28">imagesc(squeeze(decorr(:,:,10)))</command>
<command execution_time="21">imagesc(squeeze(decorr(:,:,20)))</command>
<command execution_time="25">decorr_ablated_tumor_max</command>
<command execution_time="26">imagesc(squeeze(decorr(:,:,14)))</command>
<command execution_time="25">IBS_ablated_tumor_max</command>
<command execution_time="24">decorr_ablated_liver</command>
<command execution_time="26">IBS_ablated_liver</command>
<command execution_time="161">close all</command>
</session>
<session>
<command time_stamp="150f351bf3a">%-- 11/10/2015 4:33 PM --%</command>
<command execution_time="766">open startup</command>
<command execution_time="2133">set(0,'DefaultFigureColor',[255/255,255/255,255/255]);</command>
<command execution_time="253">figure</command>
<command execution_time="316">open startup</command>
<command execution_time="78">figure</command>
<command error="true" execution_time="204">set(hObject, 'Position', [100, 100, 1049, 895]);</command>
<command execution_time="99">hObject</command>
<command execution_time="30">set(hObject, 'Position', [100, 100, 1049, 895]);</command>
<command execution_time="25">get(hObject,'Position');</command>
<command execution_time="22">ans</command>
<command execution_time="21">get(hObject,'Position')</command>
<command execution_time="28">clear all</command>
<command execution_time="146">close all</command>
<command execution_time="29">get(hObject,'Position')</command>
</session>
<session>
<command time_stamp="150f7614679">%-- 11/11/2015 11:29 AM --%</command>
<command batch="142">% 11172014_115719</command>
<command batch="142">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="142">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="142" execution_time="22165">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command execution_time="203">close all</command>
<command execution_time="484">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command execution_time="109">axis off</command>
<command execution_time="125">xlabel('')</command>
<command batch="143">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="143">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="143">ylabel('','Fontsize',fontsize);</command>
<command batch="143">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="143">% set(gcf,'color','w');</command>
<command batch="143" execution_time="5797">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
</session>
<session>
<command time_stamp="150fb8dd6ec">%-- 11/12/2015 6:56 AM --%</command>
<command execution_time="406">figure; plot(squeeze(model.data(:,1)));</command>
<command batch="144">%% ADD MOLD KEYS</command>
<command batch="144">% USER DEFINED VALUES</command>
<command batch="144">modelHeight = max(model.data(:,3));</command>
<command batch="144">model.guiZEnvelope = 563;</command>
<command batch="144">model.guiExtend = model.guiZEnvelope - modelHeight; % 563 mm is the printer z envelope</command>
<command batch="144">model.guiExtendPoint1 = [0 0 modelHeight];</command>
<command batch="144">model.guiExtendPoint2 = [0 0 modelHeight];</command>
<command batch="144">% EXTEND MODEL</command>
<command batch="144" execution_time="4197">model = extendModel( hObject, model );</command>
<command execution_time="78">figure; plot(squeeze(model.data(:,1)));</command>
<command batch="145" error="true">data = model.data;</command>
<command batch="145" error="true">point1 = model.guiExtendPoint1(3);</command>
<command batch="145" error="true">point2 = model.guiExtendPoint2(3);</command>
<command batch="145" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="145" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="145" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="145" error="true">offset = model.guiMoldKeysOffset;</command>
<command batch="145" error="true">numSlice = length(sliceHeights); % points</command>
<command batch="145" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="145" error="true">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="145" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="145" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="145" error="true">n = point2 - point1;</command>
<command batch="145" error="true">y = linspace(1,300,n);</command>
<command batch="145" error="true" execution_time="264">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="146">model.guiMoldKeysOffset = 20; % mm</command>
<command batch="146">% ADD MOLD KEYS</command>
<command batch="146">data = model.data;</command>
<command batch="146">point1 = model.guiExtendPoint1(3);</command>
<command batch="146">point2 = model.guiExtendPoint2(3);</command>
<command batch="146">zEnvelope = model.guiZEnvelope;</command>
<command batch="146">sliceHeights = model.sliceHeights; % unit</command>
<command batch="146">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="146">offset = model.guiMoldKeysOffset;</command>
<command batch="146">numSlice = length(sliceHeights); % points</command>
<command batch="146">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="146">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="146">point1 = round(point1 / slicePerStep);</command>
<command batch="146">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="146">n = point2 - point1;</command>
<command batch="146">y = linspace(1,300,n);</command>
<command batch="146" execution_time="187">model.cirReduction = offset/log10(300)*log10(y);</command>
<command execution_time="78">figure; plot(model.cirReduction)</command>
<command execution_time="16">point1</command>
<command execution_time="16">point2</command>
<command execution_time="16">slicePerStep</command>
<command execution_time="16">point1 * slicePerStep</command>
<command execution_time="15">point2 * slicePerStep</command>
<command execution_time="31">563 * slicePerStep</command>
<command execution_time="16">modelHeight</command>
<command execution_time="16">max(model.data(:,3)) - modelHeight</command>
<command execution_time="16">model.guiExtend</command>
<command execution_time="31">max(model.data(:,3))</command>
<command batch="147">% USER DEFINED VALUES</command>
<command batch="147">model.guiMoldKeysOffset = 20; % mm</command>
<command batch="147">% ADD MOLD KEYS</command>
<command batch="147">data = model.data;</command>
<command batch="147">point1 = model.guiExtendPoint1(3);</command>
<command batch="147">point2 = model.data(:,end);</command>
<command batch="147">zEnvelope = model.guiZEnvelope;</command>
<command batch="147">sliceHeights = model.sliceHeights; % unit</command>
<command batch="147">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="147">offset = model.guiMoldKeysOffset;</command>
<command batch="147">numSlice = length(sliceHeights); % points</command>
<command batch="147">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="147">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="147">point1 = round(point1 / slicePerStep);</command>
<command batch="147">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="147">n = point2 - point1;</command>
<command batch="147">y = linspace(1,300,n);</command>
<command batch="147" execution_time="218">model.cirReduction = offset/log10(300)*log10(y);</command>
<command execution_time="31">idx = point1;</command>
<command execution_time="15">window = idx/slicePerStep*numSlicePoints+1:numSlicePoints*(idx/slicePerStep+1);</command>
<command execution_time="32">size(window)</command>
<command execution_time="78">figure; plot(window)</command>
<command execution_time="31">numSlicePoints</command>
<command execution_time="16">point1</command>
<command execution_time="31">point1 / slicePerStep</command>
<command execution_time="15">point1 * slicePerStep</command>
<command execution_time="15">ans * 90</command>
<command error="true" execution_time="301" repeat="2">point/slicePerStep*90</command>
<command execution_time="16">point1/slicePerStep*90</command>
<command execution_time="16">point1*slicePerStep*90</command>
<command execution_time="31">9719/90</command>
<command execution_time="16">ans * slicePerStep</command>
<command execution_time="15">point1</command>
<command execution_time="15">9678 / 90</command>
<command execution_time="16">point1</command>
<command execution_time="31">point2</command>
<command execution_time="125">figure; plot(model.data(:,1))</command>
<command execution_time="16">model.data(end,3)</command>
<command execution_time="15">ans * 90</command>
<command execution_time="32">size(model.data,1)</command>
<command execution_time="109">model.data(:,end)</command>
<command execution_time="16">model.data(end,3)</command>
<command execution_time="31">slicePerStep = mean(diff(sliceHeights));</command>
<command execution_time="31">220.3789 / slicePerStep</command>
<command execution_time="16">ans * 90</command>
<command execution_time="16">122 * 90</command>
<command execution_time="16">10980 - 9720</command>
<command execution_time="31">ans / slicePerStep</command>
<command execution_time="16">1260 * slicePerStep</command>
<command execution_time="15">1260 / 90</command>
<command execution_time="31">ans * slicePerStep</command>
<command execution_time="93">figure; plot(diff(sliceHeights))</command>
<command error="true" execution_time="414">modelHeight</command>
<command execution_time="31">model.data(end,3)</command>
<command execution_time="15">ans / slicePerStep</command>
<command execution_time="16">ans * 90</command>
<command execution_time="31">ans - 9720</command>
<command execution_time="31">ans / 90</command>
<command error="true" execution_time="422">ans * slciePerStep</command>
<command execution_time="16">ans * slicePerStep</command>
<command execution_time="31">idxCap</command>
<command execution_time="15">height</command>
<command execution_time="93">figure;plot(data(:,1))</command>
<command execution_time="16">slicePerStep = mean(diff(sliceHeights));</command>
<command execution_time="16">slicePerStep</command>
<command execution_time="15">13 / slicePerStep</command>
<command execution_time="31">ans * 90</command>
<command execution_time="16">capSet(idx)</command>
<command execution_time="31">capSet</command>
<command execution_time="32">633 / 90</command>
<command execution_time="15">ans * slicePerStep</command>
<command execution_time="16">capHeight</command>
<command execution_time="15">height</command>
<command execution_time="32">sliceHeights(height)</command>
<command execution_time="31">ans - capHeight</command>
<command execution_time="17">sliceHeights(height)</command>
<command error="true" execution_time="436">idxSliceheight</command>
<command execution_time="15">idxSliceHeight</command>
<command execution_time="31">model</command>
<command error="true" execution_time="547">sliceHeights(end)</command>
<command execution_time="32">model.sliceHeights(end)</command>
<command execution_time="16">model.data(end,3)</command>
<command execution_time="16">idx</command>
<command execution_time="15">numSliceHeights-1</command>
<command execution_time="31">size(data)</command>
<command execution_time="31">numSlicePoints</command>
<command execution_time="31">numSliceHeights</command>
<command error="true" execution_time="32">data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2);</command>
<command execution_time="31">idx*numSlicePoints+1</command>
<command execution_time="31">idx</command>
<command execution_time="31">model</command>
<command execution_time="31">108 * 90</command>
<command execution_time="16">sliceHeights(end)</command>
<command execution_time="31" repeat="2">model.data(end,3)</command>
<command error="true" execution_time="426">sliceHeights(end)</command>
<command execution_time="15">model.sliceHeights(end)</command>
<command execution_time="31" repeat="2">model.data(end,3)</command>
<command execution_time="31">model.sliceHeights(end)</command>
<command error="true" execution_time="31">model.data(numSlicePoints*numSliceHeights+1,3)</command>
<command execution_time="27">numSlicePoints*numSliceHeights</command>
<command execution_time="16">size(model.data)</command>
<command execution_time="109">figure; plot(model.sliceHeights)</command>
<command execution_time="78">figure; plot(model.data(:,3))</command>
<command execution_time="78">figure; plot(1:numSlicePoints+1:numSlicePoints*numSliceHeights)</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="16">x = 1:10890;</command>
<command execution_time="15">y = model.data(:,3);</command>
<command error="true" execution_time="93">b = x\y;</command>
<command execution_time="16">size(x)</command>
<command execution_time="31">size(y)</command>
<command execution_time="109">b = x\y';</command>
<command execution_time="4566">b</command>
<command error="true" execution_time="31">size(b</command>
<command execution_time="30">size(b)</command>
<command execution_time="16">size(x)</command>
<command execution_time="125">b = x'\y;</command>
<command execution_time="31">size(b)</command>
<command execution_time="31">b</command>
<command execution_time="62">hold on; plot(x*b)</command>
<command execution_time="15">hold on; plot(x*b-b)</command>
<command execution_time="30">model</command>
<command execution_time="20">121*90</command>
<command execution_time="94">figure; plot(model.sliceHeights)</command>
<command execution_time="78">figure; plot(model.data(:,3))</command>
<command execution_time="110">close all</command>
</session>
<session>
<command time_stamp="150fc47343f">%-- 11/12/2015 10:18 AM --%</command>
<command execution_time="6680" repeat="2">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command execution_time="32">set(gca,'YLim',[0 rangemax]);</command>
<command batch="148">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="148" execution_time="19">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command execution_time="3920">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
</session>
<session>
<command time_stamp="150fc5f0298">%-- 11/12/2015 10:44 AM --%</command>
<command execution_time="3291">opengl info</command>
<command execution_time="15">opengl hardware</command>
<command execution_time="1607">opengl info</command>
<command batch="149">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
</session>
<session>
<command time_stamp="150fc618795">%-- 11/12/2015 10:47 AM --%</command>
<command error="true" execution_time="47" repeat="2">opengl hardwarebasic</command>
<command error="true" execution_time="32">opengl('save','hardwarebasic')</command>
<command execution_time="16">opengl hardware</command>
<command batch="150">opengl info</command>
</session>
<session>
<command time_stamp="150fc647e21">%-- 11/12/2015 10:50 AM --%</command>
<command error="true" execution_time="78">opengl infor</command>
<command execution_time="2918">opengl info</command>
<command execution_time="16">opengl hardware</command>
<command execution_time="1357">opengl info</command>
</session>
<session>
<command time_stamp="150fc80e1d6">%-- 11/12/2015 11:21 AM --%</command>
<command error="true" execution_time="6055">opengl info</command>
<command execution_time="2933">figure; plot(1:10)</command>
<command execution_time="78">opengl</command>
<command execution_time="219">opengl info</command>
<command execution_time="6384">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="151">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="151">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command batch="151">% ylabel('','Fontsize',fontsize);</command>
<command batch="151">% xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="151">set(gca,'YLim',[0 rangemax]);</command>
<command batch="151">set(gcf,'color','w');</command>
<command batch="151" execution_time="3729">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc','-opengl');</command>
<command execution_time="78">close all</command>
<command execution_time="4213">h=openfig([pname '20141117R268Trial8TTCIP_mask.fig']);</command>
<command batch="152">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="152">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="152">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="152">ylabel('Range (mm)', 'Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="152" execution_time="3555">print([sname '20141117R268Trial8TTCIP_mask'],'-depsc','-r0');</command>
<command execution_time="78">close all</command>
<command batch="153">% 11172014_115719</command>
<command batch="153">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="153">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="153">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command batch="153">% ylabel('','Fontsize',fontsize);</command>
<command batch="153">% xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="153">set(gca,'YLim',[0 rangemax]);</command>
<command batch="153">set(gcf,'color','w');</command>
<command batch="153" execution_time="2207">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
<command execution_time="93">opengl info</command>
</session>
<session>
<command time_stamp="150fc9ab55d">%-- 11/12/2015 11:50 AM --%</command>
<command execution_time="187">opengl info</command>
<command batch="154">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="154">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="154">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command batch="154">% ylabel('','Fontsize',fontsize);</command>
<command batch="154">% xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="154">set(gca,'YLim',[0 rangemax]);</command>
<command batch="154">set(gcf,'color','w');</command>
<command batch="154" execution_time="5836">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
<command execution_time="124">close all</command>
<command batch="155">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="155">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="155" execution_time="312">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command execution_time="312">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="156">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="156" execution_time="51">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command batch="157">set(gca,'YLim',[0 rangemax]);</command>
<command batch="157">set(gcf,'color','w');</command>
<command batch="157" execution_time="1128">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
<command execution_time="312">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="158">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="158" execution_time="31">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command execution_time="31">set(gca,'YLim',[0 rangemax]);</command>
<command execution_time="1016">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-depsc');</command>
<command execution_time="313">h=openfig([pname '11172014_115719thx_1_correcteddecorr_MaxDecorrSub']);</command>
<command batch="159">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="159">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="159" execution_time="78">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);ylabel('');</command>
<command execution_time="1278">print([sname '11172014_115719thx_1_correcteddecorr_MaxDecorrSub'],'-depsc');</command>
<command batch="160">h=openfig([pname '11172014_115719thx_1_decorr_MaxDecorrNoSub']);</command>
<command batch="160">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="160">set(gcf,'units','normalized','outerposition',[0 0 1 1]);</command>
<command batch="160">% ylabel('','Fontsize',fontsize);</command>
<command batch="160">% xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="160">set(gca,'YLim',[0 rangemax]);</command>
<command batch="160">set(gcf,'color','w');</command>
<command batch="160" execution_time="4239">print([sname '11172014_115719thx_1_decorr_MaxDecorrNoSub'],'-dpdf');</command>
<command batch="161">h=openfig([pname '20141117R268Trial8TTCIP_mask.fig']);</command>
<command batch="161">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="161">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="161">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="161">ylabel('Range (mm)', 'Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
<command batch="161" execution_time="4647">print([sname '20141117R268Trial8TTCIP_mask'],'-dpdf');</command>
<command execution_time="329">h=openfig([pname '12172014_110242thx_1_decorr_MaxIBS']);</command>
<command batch="162">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="162">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="162">xlabel('Azimuth (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);ylabel('');</command>
<command batch="162" execution_time="63">set(gcf,'color','w');</command>
<command execution_time="94">close all</command>
<command execution_time="1110">h=openfig([pname '20141217IPT4R270LTTC_mask']);</command>
<command execution_time="1014">h=openfig([pname '20141217T6R270RTTCIP_mask']);</command>
<command execution_time="608">h=openfig([pname '20140429T3taIPTTC_mask']);</command>
<command batch="163">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="163">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="163">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="163" execution_time="62">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax2]);</command>
<command batch="164">h=openfig([pname '20141217IPT4R270LTTC_mask']);</command>
<command batch="164">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="164" execution_time="749">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="165">h=openfig([pname '20141217T6R270RTTCIP_mask']);</command>
<command batch="165">set(gcf,'Position',[201 80 560 420]);</command>
<command batch="165">set(gcf,'units','normalized','outerposition',[0 0 1 1])</command>
<command batch="165">xlabel('Azimuth (mm)','Fontsize',fontsize);</command>
<command batch="165" execution_time="873">ylabel('Range (mm)','Fontsize',fontsize); set(gca,'YLim',[0 rangemax]);</command>
</session>
<session>
<command time_stamp="151008fa464">%-- 11/13/2015 6:16 AM --%</command>
<command execution_time="109" repeat="2">figure; plot(model.data(:,1))</command>
<command execution_time="31">sliceHeights(end)</command>
<command execution_time="31">data(end,3)</command>
<command execution_time="23">model</command>
<command execution_time="24">120*90</command>
<command execution_time="22">sliceHeights(end)</command>
<command execution_time="28">model.data(end,3)</command>
<command execution_time="22">zUndo</command>
<command error="true" execution_time="50">ans * 2</command>
<command execution_time="24">zUndo * 2</command>
<command execution_time="29">model.data(end,3)</command>
<command execution_time="131">figure; plot(model.data(:,1))</command>
<command execution_time="23">model.guiExtend</command>
<command execution_time="80">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="77">figure; plot(model.sliceHeights)</command>
<command execution_time="86">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="80">figure; plot(data(:,3),data(:,1))</command>
<command execution_time="24">zUndo</command>
<command execution_time="88">figure; plot(data(:,3)-zUndo,data(:,1))</command>
<command execution_time="80">figure; plot(data(:,3)+2*zUndo,data(:,1))</command>
<command execution_time="80">figure; plot(data(:,3)-zUndo,data(:,1))</command>
<command execution_time="80">figure; plot(data(:,3)+zUndo,data(:,1))</command>
<command execution_time="26">foo = min(data(:,3))</command>
<command execution_time="108">figure; plot(data(:,3)+foo,data(:,1))</command>
<command execution_time="83">figure; plot(data(:,3)-foo,data(:,1))</command>
<command execution_time="25">388*90</command>
<command execution_time="31">data(1,:)</command>
<command error="true" execution_time="27">sliceHeights = cat(1,sliceHeights,tmpSliceHeights);</command>
<command execution_time="30">sliceHeights = cat(2,sliceHeights,tmpSliceHeights);</command>
<command execution_time="80">figure; plot(sliceHeights)</command>
<command execution_time="36">sliceHeights(1)</command>
<command execution_time="26">data(1,:)</command>
<command execution_time="23">height</command>
<command execution_time="23">capHeight</command>
<command execution_time="22">capSet</command>
<command execution_time="112">figure; plot(abs(tmpR-capSet(1)))</command>
<command execution_time="77">figure; plot(tmpR)</command>
<command execution_time="22">tmpR</command>
<command execution_time="22">numSliceHeights</command>
<command execution_time="23">size(sliceHeights)</command>
<command execution_time="24">length(ones(1,10))</command>
<command execution_time="30">length(ones(10,1))</command>
<command batch="166" error="true">GET DATA INFORMATION</command>
<command batch="166" error="true">data = model.data;</command>
<command batch="166" error="true">numSlicePoints = model.numSlicePoints;</command>
<command batch="166" error="true">sliceHeights = model.sliceHeights;</command>
<command batch="166" error="true">numSliceHeights = length(sliceHeights);</command>
<command batch="166" error="true">angleStep = model.angleStep;</command>
<command batch="166" error="true">capSet = model.capSet;</command>
<command batch="166" error="true">numCapRadii = length(capSet);</command>
<command batch="166" error="true">capHeight = model.capHeight;</command>
<command batch="166" error="true">% INTIALIZE BUFFERS</command>
<command batch="166" error="true">height = zeros(numCapRadii,1);</command>
<command batch="166" error="true">% FIND OPTIMAL CAP</command>
<command batch="166" error="true">for idx = 0:numSliceHeights-1</command>
<command batch="166" error="true">tmpR(idx+1) = mean(sqrt(sum(data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2).^2,2)));</command>
<command batch="166" error="true">end</command>
<command batch="166" error="true">for idx = 1:numCapRadii;</command>
<command batch="166" error="true">[minR, locR] = min(abs(tmpR-capSet(idx)));</command>
<command batch="166" error="true">height(idx) = locR;</command>
<command batch="166" error="true">end</command>
<command batch="166" error="true">% GET CAP THAT MINIMIZES HEIGHT ERROR</command>
<command batch="166" error="true">[foo idxCap] = min(abs(sliceHeights(height)-capHeight));</command>
<command batch="166" error="true" execution_time="509">idxSliceHeight = height(idxCap);</command>
<command batch="167">% GET DATA INFORMATION</command>
<command batch="167">data = model.data;</command>
<command batch="167">numSlicePoints = model.numSlicePoints;</command>
<command batch="167">sliceHeights = model.sliceHeights;</command>
<command batch="167">numSliceHeights = length(sliceHeights);</command>
<command batch="167">angleStep = model.angleStep;</command>
<command batch="167">capSet = model.capSet;</command>
<command batch="167">numCapRadii = length(capSet);</command>
<command batch="167">capHeight = model.capHeight;</command>
<command batch="167">% INTIALIZE BUFFERS</command>
<command batch="167">height = zeros(numCapRadii,1);</command>
<command batch="167">% FIND OPTIMAL CAP</command>
<command batch="167">for idx = 0:numSliceHeights-1</command>
<command batch="167">tmpR(idx+1) = mean(sqrt(sum(data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2).^2,2)));</command>
<command batch="167">end</command>
<command batch="167">for idx = 1:numCapRadii;</command>
<command batch="167">[minR, locR] = min(abs(tmpR-capSet(idx)));</command>
<command batch="167">height(idx) = locR;</command>
<command batch="167" execution_time="210">end</command>
<command execution_time="29">height</command>
<command execution_time="103">figure; plot(tmpR)</command>
<command execution_time="85">figure; plot(abs(tmpR-capSet(1)))</command>
<command batch="168">[foo idxCap] = min(abs(sliceHeights(height)-capHeight));</command>
<command batch="168" execution_time="28">idxSliceHeight = height(idxCap);</command>
<command execution_time="25">idxSliceHeight</command>
<command execution_time="80">figure; plot(data(:,3),data(:,1))</command>
<command execution_time="113">axis equal</command>
<command execution_time="25">capSet(idxCap)</command>
<command execution_time="24">capSet</command>
<command execution_time="22">foo</command>
<command execution_time="22">abs(sliceHeights(height)-capHeight)</command>
<command execution_time="23">height</command>
<command execution_time="21">idxSliceHeight</command>
<command error="true" execution_time="1157">sliceHeights(idxSliceHeights+1)</command>
<command execution_time="23">sliceHeights(idxSliceHeight+1)</command>
<command execution_time="91">figure; plot(data(:,3),data(:,1))</command>
<command execution_time="34">axis equal</command>
<command execution_time="23">capSet(idxCap)</command>
<command execution_time="24">capSet</command>
<command execution_time="23">capHeight</command>
<command execution_time="32">model.data(1,3)</command>
<command execution_time="26">idxHeight</command>
<command execution_time="22">idxSliceHeight*numSlicePoints</command>
<command execution_time="25">model.data(1,3)</command>
<command execution_time="80">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="27">axis equal</command>
<command error="true" execution_time="24">sliceHeights(idxHeight)</command>
<command execution_time="23">sliceHeights(idxSliceHeight)</command>
<command execution_time="23">numSlicePoints</command>
<command execution_time="24">data(1,3)</command>
<command execution_time="23">sliceHeights(1)</command>
<command execution_time="28">data(end,3)</command>
<command execution_time="22">sliceHeights(end)</command>
<command execution_time="81">figure; plot(data(:,3),data(:,1))</command>
<command execution_time="22">data(end,3)</command>
<command execution_time="18">sliceHeights = linspace(0,model.data(end,3),numSliceHeights);</command>
<command execution_time="34">sliceHeights(end)</command>
<command execution_time="18">sliceHeights = linspace(0,data(end,3),numSliceHeights);</command>
<command execution_time="27">sliceHeights(end)</command>
<command execution_time="29">sliceHeights(1)</command>
<command execution_time="24">data(1,:)</command>
<command execution_time="40">sliceHeights(end)</command>
<command execution_time="27">data(end,:)</command>
<command execution_time="25">data(1,:)</command>
<command execution_time="30">idxHeight</command>
<command execution_time="21">idxCap</command>
<command execution_time="31">capSet(2)</command>
<command execution_time="24">capSet</command>
<command execution_time="80">figure; plot(data(:,3),data(:,1))</command>
<command execution_time="22">axis equal</command>
<command execution_time="22">sliceHeights(13)</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1)); axis equal</command>
<command execution_time="23">model.data(1,3)</command>
<command execution_time="23" repeat="2">sliceHeights(1)</command>
<command execution_time="24">model.sliceHeights(1)</command>
<command execution_time="19">model.sliceHeights = sliceHeights(idxSliceHeight:end);</command>
<command execution_time="23">model.sliceHeights(1)</command>
<command execution_time="97" repeat="2">figure; plot(model.data(:,3),model.data(:,1)); axis equal</command>
<command execution_time="62">grid on</command>
<command execution_time="45">set(gcf,'color','k');</command>
<command execution_time="22">set(gca,'color','w');</command>
<command execution_time="27">set(gca,'Fontsize',20)</command>
<command execution_time="21">set(gca,'Fontsize',10)</command>
<command execution_time="89">figure; plot(data(:,1),data(:,3))</command>
<command execution_time="27">axis equal</command>
<command execution_time="19">set(gcf,'color','k')</command>
<command execution_time="56">ylabel('Height (mm)');</command>
<command execution_time="20">ylabel('Height (mm)','color','w','fontsize',10);</command>
<command error="true" execution_time="28">xlabel('Width (mm)','color','w',,'Fontsize',10)</command>
<command execution_time="57">xlabel('Width (mm)','color','w','Fontsize',10)</command>
<command batch="169">set(gca, 'XColor', [1 1 1]);</command>
<command batch="169" execution_time="25">set(gca, 'YColor', [1 1 1]);</command>
<command execution_time="21">grid on</command>
<command execution_time="84">figure; plot(data(:,1),data(:,3),'y')</command>
<command error="true" execution_time="199">figure; plot(data(:,1),data(:,3),'color',[228,156,13])</command>
<command execution_time="86">figure; plot(data(:,1),data(:,3),'color',[228/255,156/255,13/255])</command>
<command execution_time="82">figure; plot(data(:,1),data(:,3),'color',[181/255,120/255,0/255])</command>
<command execution_time="175">close all</command>
<command execution_time="132" repeat="3">plot2D( hObject, model)</command>
<command batch="170">set(gca, 'XColor', [1 1 1]);</command>
<command batch="170" execution_time="29">set(gca, 'YColor', [1 1 1]);</command>
<command execution_time="30">grid on;</command>
<command execution_time="162">plot2D( hObject, model)</command>
<command execution_time="243">opengl info</command>
<command error="true" execution_time="226">opengl SupportsGraphicsSmoothing</command>
<command execution_time="34" repeat="2">set(groot,'DefaultFigureGraphicsSmoothing','off')</command>
<command execution_time="30">opengl info</command>
<command execution_time="36">plot2D( hObject, model)</command>
<command error="true" execution_time="67">set('GraphicsSmoothing','off');</command>
<command execution_time="133" repeat="3">plot2D( hObject, model)</command>
</session>
<session>
<command time_stamp="1510245ddd4">%-- 11/13/2015 2:15 PM --%</command>
<command execution_time="405">open plot2D</command>
<command execution_time="328">open templateLiner</command>
<command execution_time="904">drawScene( hObject, model)</command>
<command execution_time="109">figure</command>
<command execution_time="140" repeat="2">drawScene( hObject, model)</command>
<command batch="171" error="true">% COMPUTE ROTATION MATRIX</command>
<command batch="171" error="true">R = rotx(30)*roty(0)*rotz(0);</command>
<command batch="171" error="true">% MAKE MOMENT MINIMIZING AXIS THE MODEL CENTROID</command>
<command batch="171" error="true">for idx = 1:size(moldel.data,1);</command>
<command batch="171" error="true">model.data(idx,:) = R*model.data(idx,:)';</command>
<command batch="171" error="true" execution_time="861">end</command>
<command batch="172">% COMPUTE ROTATION MATRIX</command>
<command batch="172">R = rotx(45)*roty(0)*rotz(0);</command>
<command batch="172">% MAKE MOMENT MINIMIZING AXIS THE MODEL CENTROID</command>
<command batch="172">for idx = 1:size(model.data,1);</command>
<command batch="172">model.data(idx,:) = R*model.data(idx,:)';</command>
<command batch="172" execution_time="125">end</command>
<command execution_time="47">drawScene( hObject, model)</command>
<command execution_time="31">R = rotx(45)*roty(0)*rotz(0);</command>
<command batch="173">for idx = 1:size(model.data,1);</command>
<command batch="173">model.data(idx,:) = R*model.data(idx,:)';</command>
<command batch="173" execution_time="125">end</command>
<command execution_time="31">drawScene( hObject, model)</command>
<command execution_time="15">R = rotx(0)*roty(45)*rotz(0);</command>
<command batch="174">% MAKE MOMENT MINIMIZING AXIS THE MODEL CENTROID</command>
<command batch="174">for idx = 1:size(model.data,1);</command>
<command batch="174">model.data(idx,:) = R*model.data(idx,:)';</command>
<command batch="174" execution_time="109">end</command>
<command execution_time="31">drawScene( hObject, model)</command>
<command execution_time="16">R = rotx(-90)*roty(0)*rotz(0);</command>
<command batch="175">for idx = 1:size(model.data,1);</command>
<command batch="175">model.data(idx,:) = R*model.data(idx,:)';</command>
<command batch="175" execution_time="110">end</command>
<command execution_time="32">drawScene( hObject, model)</command>
<command execution_time="16">R = rotx(0)*roty(0)*rotz(180);</command>
<command batch="176">% MAKE MOMENT MINIMIZING AXIS THE MODEL CENTROID</command>
<command batch="176">for idx = 1:size(model.data,1);</command>
<command batch="176">model.data(idx,:) = R*model.data(idx,:)';</command>
<command batch="176" execution_time="125">end</command>
<command execution_time="31">drawScene( hObject, model)</command>
</session>
<session>
<command time_stamp="15105655298">%-- 11/14/2015 4:48 AM --%</command>
<command execution_time="2746">open templateLiner</command>
<command execution_time="375" repeat="8">openGLTest</command>
<command error="true" execution_time="1060">foo</command>
<command batch="177" error="true">function demo()</command>
<command batch="177" error="true">figure('WindowButtonDownFcn',@callBack)</command>
<command batch="177" error="true">function callBack(hObject,~)</command>
<command batch="177" error="true">mousePos=get(hObject,'CurrentPoint');</command>
<command batch="177" error="true" execution_time="94">disp(['You clicked X:',num2str(mousePos(1)),',  Y:',num2str(mousePos(2))]);</command>
<command execution_time="375" repeat="2">openGLTest</command>
<command error="true" execution_time="109">x = null;</command>
<command execution_time="16">x = [];</command>
<command execution_time="16">x</command>
<command execution_time="15">whos x</command>
<command execution_time="140" repeat="2">openGLTest</command>
<command execution_time="16">x = false; if ~x; foo = 1; end;</command>
<command execution_time="15">foo</command>
<command execution_time="141" repeat="2">openGLTest</command>
<command execution_time="93">event</command>
<command error="true" execution_time="47">event.source</command>
<command execution_time="78">event.Source</command>
<command execution_time="156" repeat="3">openGLTest</command>
<command execution_time="15">get(hObject,'CurrentPoint')</command>
<command execution_time="141" repeat="3">openGLTest</command>
<command error="true" execution_time="336">mouseDown</command>
<command error="true" execution_time="336">exist(mouseDown)</command>
<command execution_time="15">exist('mouseDown')</command>
<command batch="178">if ~exist('mouseDown')</command>
<command batch="178">return</command>
<command batch="178" execution_time="31">end</command>
</session>
<session>
<command time_stamp="15105d4095b">%-- 11/14/2015 6:49 AM --%</command>
<command execution_time="141" repeat="2">openGLTest</command>
<command execution_time="31">event</command>
<command error="true" execution_time="78">event.foo = 1</command>
<command execution_time="141">openGLTest</command>
<command error="true" execution_time="31">event</command>
<command execution_time="16">whos event</command>
<command execution_time="15">whos hButton</command>
<command execution_time="359">event.lastMouseX = tmp(1);</command>
<command execution_time="16">event.lastMouseX</command>
<command execution_time="16">event</command>
<command error="true" execution_time="78">exist(event.lastMouseX)</command>
<command execution_time="15">exist('event.lastMouseX')</command>
<command execution_time="15">event.lastMouseX</command>
<command execution_time="31">tmp</command>
<command execution_time="16">exist('tmp')</command>
<command execution_time="15">event.foo = 1;</command>
<command execution_time="15">event.foo</command>
<command execution_time="16">clear event.foo</command>
<command execution_time="31" repeat="2">event</command>
<command error="true" execution_time="15">rmfield(event. 'foo')</command>
<command execution_time="78">rmfield(event, 'foo')</command>
<command error="true" execution_time="609">fieldexists('event','foo')</command>
<command execution_time="15">isfield('event','foo')</command>
<command execution_time="142" repeat="3">openGLTest</command>
<command execution_time="31">~isfield('event','mouseDown')</command>
</session>
<session>
<command time_stamp="15105e886fa">%-- 11/14/2015 7:11 AM --%</command>
<command error="true" execution_time="32">openGLTest</command>
<command execution_time="172">dragTest</command>
<command execution_time="124">close all</command>
<command execution_time="172" repeat="2">openGLTest</command>
<command error="true" execution_time="401">event</command>
<command execution_time="16">whos event</command>
<command execution_time="32">hObject</command>
<command execution_time="16">whos hObject</command>
</session>
<session>
<command time_stamp="151060d80f2">%-- 11/14/2015 7:52 AM --%</command>
<command execution_time="1030">openGLTest</command>
<command error="true" execution_time="738">hObject</command>
<command error="true" execution_time="47">drawScene</command>
<command error="true" execution_time="78">open drawScence</command>
</session>
<session>
<command time_stamp="1510ae599db">%-- 11/15/2015 6:26 AM --%</command>
<command execution_time="2293">openGLTest</command>
<command error="true" execution_time="873">event</command>
<command execution_time="93">hObject</command>
<command error="true" execution_time="63">hObject.handles</command>
</session>
<session>
<command time_stamp="1510afe40be">%-- 11/15/2015 6:53 AM --%</command>
<command execution_time="1110">openGLTest</command>
<command execution_time="32">guidata(hObject)</command>
<command error="true" execution_time="660">hOjbect</command>
<command execution_time="15">hObject</command>
<command execution_time="16">handles</command>
<command execution_time="31">hObject</command>
<command error="true" execution_time="46">hObject.handle</command>
<command error="true" execution_time="32">hObject.handles</command>
<command execution_time="32">handles'</command>
<command error="true" execution_time="326" repeat="2">handles</command>
</session>
<session>
<command time_stamp="1510b0a0f6e">%-- 11/15/2015 7:06 AM --%</command>
<command execution_time="484">main</command>
<command execution_time="277">openGLTest</command>
<command execution_time="190">main</command>
<command execution_time="16">hObject</command>
<command error="true" execution_time="346">hOjbect.event</command>
<command execution_time="156">openGLTest</command>
<command error="true" execution_time="31">event</command>
<command execution_time="31">whos event</command>
<command execution_time="15" repeat="3">event</command>
</session>
<session>
<command time_stamp="1510b225c65">%-- 11/15/2015 7:33 AM --%</command>
<command execution_time="827">openGLTest</command>
<command execution_time="15">event</command>
</session>
<session>
<command time_stamp="1510b245df5">%-- 11/15/2015 7:35 AM --%</command>
<command execution_time="390" repeat="4">openGLTest</command>
<command execution_time="655">MovePlottedData</command>
<command execution_time="31">handles</command>
<command error="true" execution_time="678">figHandles</command>
<command execution_time="16">figHandle</command>
<command execution_time="16">handles</command>
<command error="true" execution_time="281">foo</command>
<command execution_time="16">foo = guidata(figHandle);</command>
<command execution_time="31">foo</command>
<command execution_time="31">close all</command>
<command execution_time="156" repeat="3">main</command>
<command execution_time="15">guidata(hFig)</command>
<command execution_time="31">hFig</command>
<command execution_time="156">openGLTest</command>
<command execution_time="94">initGL</command>
<command execution_time="234">open drawScene</command>
<command error="true" execution_time="93">open templateLine</command>
<command execution_time="234">open templateLiner</command>
<command execution_time="31">eye(1,3)</command>
<command execution_time="31">eye(3,3)</command>
<command error="true" execution_time="187" repeat="5">initGL</command>
<command execution_time="172">close all</command>
<command error="true" execution_time="274" repeat="2">initGL</command>
<command execution_time="31">whos model</command>
<command execution_time="15">object</command>
<command execution_time="234">initGL</command>
<command execution_time="16">object</command>
<command execution_time="16">whos model</command>
<command execution_time="32">model</command>
<command execution_time="32">object</command>
<command execution_time="31">object.data = model.data;</command>
<command execution_time="31">object</command>
<command error="true" execution_time="3810" repeat="2">initGL</command>
</session>
<session>
<command time_stamp="1510d50c0c7">%-- 11/15/2015 5:42 PM --%</command>
<command execution_time="101">close all</command>
<command execution_time="3214" repeat="5">initGL</command>
<command execution_time="141" repeat="2">MovePlottedData</command>
<command execution_time="16">close all</command>
<command execution_time="296">initGL</command>
<command execution_time="31">hObject</command>
<command error="true" execution_time="124">hObject.currentaxes</command>
<command execution_time="20">hObject.CurrentAxes</command>
<command error="true" execution_time="46">axes(hObject.axes1);</command>
<command error="true" execution_time="47">axes(hObject.currentAxes);</command>
<command execution_time="31">axes(hObject.CurrentAxes);</command>
<command execution_time="171">plot(1:10)</command>
<command error="true" execution_time="62">hObject.CurrentAxes</command>
<command execution_time="297" repeat="2">initGL</command>
<command error="true" execution_time="1048">object</command>
<command execution_time="16">hObject</command>
<command execution_time="15">object</command>
<command execution_time="296">initGL</command>
<command execution_time="15">object</command>
<command execution_time="3635">axes(hObject.CurrentAxes);</command>
<command execution_time="16">plot(1:10)</command>
<command execution_time="16">object</command>
<command execution_time="2966">initGL</command>
<command execution_time="114" repeat="4">main</command>
<command error="true" execution_time="458">iniGL</command>
<command execution_time="23831" repeat="3">initGL</command>
<command execution_time="281">clear all; close all;</command>
<command batch="179">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="179" execution_time="32">load('openGLTestExample.mat','model');</command>
<command execution_time="15">object.data = model.data;</command>
<command execution_time="63">figure</command>
<command batch="180">for idx = 1:10</command>
<command batch="180">newRotationMatrix = rotx(idx/10);</command>
<command batch="180">for idx = 1:size(object.data,1)</command>
<command batch="180">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="180">end</command>
<command batch="180">% UPDATE SCENE</command>
<command batch="180">fill(object.data(:,1),object.data(:,2),[222/255 159/255 11/255]);</command>
<command batch="180">%     guidata(hObject,object);</command>
<command batch="180" execution_time="951">end</command>
<command batch="181" error="true">for idx = 1:10</command>
<command batch="181" error="true">newRotationMatrix = rotx(idx/10);</command>
<command batch="181" error="true">for idx = 1:size(object.data,1)</command>
<command batch="181" error="true">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="181" error="true">end</command>
<command batch="181" error="true">% UPDATE SCENE</command>
<command batch="181" error="true">figure(1)</command>
<command batch="181" error="true">fill(object.data(:,1),object.data(:,2),[222/255 159/255 11/255]);</command>
<command batch="181" error="true">%     guidata(hObject,object);</command>
<command batch="181" error="true">end</command>
<command batch="181" error="true" execution_time="948">end</command>
<command batch="182">for idx = 1:10</command>
<command batch="182">newRotationMatrix = rotx(idx/10);</command>
<command batch="182">for idx = 1:size(object.data,1)</command>
<command batch="182">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="182">end</command>
<command batch="182">% UPDATE SCENE</command>
<command batch="182">figure(1)</command>
<command batch="182">fill(object.data(:,1),object.data(:,2),[222/255 159/255 11/255]);</command>
<command batch="182">%     guidata(hObject,object);</command>
<command batch="182" execution_time="15603">end</command>
<command execution_time="65">figure</command>
<command batch="183" error="true">or idx = 1:10</command>
<command batch="183" error="true">newRotationMatrix = rotx(idx/10);</command>
<command batch="183" error="true">for idx = 1:size(object.data,1)</command>
<command batch="183" error="true">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="183" error="true">end</command>
<command batch="183" error="true">% UPDATE SCENE</command>
<command batch="183" error="true">figure(1)</command>
<command batch="183" error="true">fill(object.data(:,1),object.data(:,2),[222/255 159/255 11/255]);</command>
<command batch="183" error="true">disp('scene update');</command>
<command batch="183" error="true">%     guidata(hObject,object);</command>
<command batch="183" error="true" execution_time="142">end</command>
<command batch="184">for idx = 1:10</command>
<command batch="184">newRotationMatrix = rotx(idx/10);</command>
<command batch="184">for idx = 1:size(object.data,1)</command>
<command batch="184">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="184">end</command>
<command batch="184">% UPDATE SCENE</command>
<command batch="184">figure(1)</command>
<command batch="184">fill(object.data(:,1),object.data(:,2),[222/255 159/255 11/255]);</command>
<command batch="184">disp('scene update');</command>
<command batch="184">%     guidata(hObject,object);</command>
<command batch="184" execution_time="936">end</command>
<command batch="185">for idx = 1:10</command>
<command batch="185">newRotationMatrix = rotx(idx/10);</command>
<command batch="185">for idx = 1:size(object.data,1)</command>
<command batch="185">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="185">end</command>
<command batch="185">% UPDATE SCENE</command>
<command batch="185">figure(1)</command>
<command batch="185">plot(object.data(:,1),object.data(:,2));%,[222/255 159/255 11/255]);</command>
<command batch="185">disp('scene updated');</command>
<command batch="185">%     guidata(hObject,object);</command>
<command batch="185" execution_time="923">end</command>
<command execution_time="31">axis equal</command>
<command batch="186">for idx = 1:10</command>
<command batch="186">newRotationMatrix = rotx(idx/10);</command>
<command batch="186">for idx = 1:size(object.data,1)</command>
<command batch="186">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="186">end</command>
<command batch="186">% UPDATE SCENE</command>
<command batch="186">figure(1)</command>
<command batch="186">plot(object.data(:,1),object.data(:,2));%,[222/255 159/255 11/255]);</command>
<command batch="186">pause(1);</command>
<command batch="186">disp('scene updated');</command>
<command batch="186">%     guidata(hObject,object);</command>
<command batch="186" execution_time="10943">end</command>
<command batch="187">for idx = 1:10</command>
<command batch="187">newRotationMatrix = rotx(idx/10);</command>
<command batch="187">for idx = 1:size(object.data,1)</command>
<command batch="187">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="187">end</command>
<command batch="187">% UPDATE SCENE</command>
<command batch="187">figure(1)</command>
<command batch="187">plot(object.data(:,1),object.data(:,2));%,[222/255 159/255 11/255]);</command>
<command batch="187">pause(.1);</command>
<command batch="187">disp('scene updated');</command>
<command batch="187">%     guidata(hObject,object);</command>
<command batch="187" execution_time="1904">end</command>
<command batch="188">for idx = 1:10</command>
<command batch="188">newRotationMatrix = rotx(idx/10);</command>
<command batch="188">for idx = 1:size(object.data,1)</command>
<command batch="188">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="188">end</command>
<command batch="188">% UPDATE SCENE</command>
<command batch="188">figure(1)</command>
<command batch="188">plot(object.data(:,1),object.data(:,2));%,[222/255 159/255 11/255]);</command>
<command batch="188">pause(.01);</command>
<command batch="188">disp('scene updated');</command>
<command batch="188">%     guidata(hObject,object);</command>
<command batch="188" execution_time="1154">end</command>
<command batch="189">for idx = 1:10</command>
<command batch="189">newRotationMatrix = rotx(idx/10);</command>
<command batch="189">for idx = 1:size(object.data,1)</command>
<command batch="189">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="189">end</command>
<command batch="189">% UPDATE SCENE</command>
<command batch="189">figure(1)</command>
<command batch="189">plot(object.data(:,1),object.data(:,2));%,[222/255 159/255 11/255]);</command>
<command batch="189">pause(.001);</command>
<command batch="189">disp('scene updated');</command>
<command batch="189">%     guidata(hObject,object);</command>
<command batch="189" execution_time="1107">end</command>
<command batch="190" error="true">for idx = 1:10</command>
<command batch="190" error="true">newRotationMatrix = rotx(idx/10);</command>
<command batch="190" error="true">for idx = 1:size(object.data,1)</command>
<command batch="190" error="true">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="190" error="true">end</command>
<command batch="190" error="true">% UPDATE SCENE</command>
<command batch="190" error="true">figure(1)</command>
<command batch="190" error="true">draw(object.data(:,1),object.data(:,2), [222/255 159/255 11/255]);</command>
<command batch="190" error="true">pause(.001);</command>
<command batch="190" error="true">disp('scene updated');</command>
<command batch="190" error="true">%     guidata(hObject,object);</command>
<command batch="190" error="true" execution_time="220">end</command>
<command batch="191">for idx = 1:10</command>
<command batch="191">newRotationMatrix = rotx(idx/10);</command>
<command batch="191">for idx = 1:size(object.data,1)</command>
<command batch="191">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="191">end</command>
<command batch="191">% UPDATE SCENE</command>
<command batch="191">figure(1)</command>
<command batch="191">fill(object.data(:,1),object.data(:,2), [222/255 159/255 11/255]);</command>
<command batch="191">pause(.001);</command>
<command batch="191">disp('scene updated');</command>
<command batch="191">%     guidata(hObject,object);</command>
<command batch="191" execution_time="71397">end</command>
<command batch="192" repeat="2">for idx = 1:10</command>
<command batch="192">newRotationMatrix = rotx(idx/10);</command>
<command batch="192">for idx = 1:size(object.data,1)</command>
<command batch="192">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="192">end</command>
<command batch="192">% UPDATE SCENE</command>
<command batch="192">figure(1)</command>
<command batch="192">plot(object.data(:,1),object.data(:,2)); %[222/255 159/255 11/255]);</command>
<command batch="192">pause(.0001);</command>
<command batch="192">disp('scene updated');</command>
<command batch="192">%     guidata(hObject,object);</command>
<command batch="192" execution_time="1279">end</command>
<command batch="193">for idx = 90:180</command>
<command batch="193">newRotationMatrix = rotx(idx/10);</command>
<command batch="193">for idx = 1:size(object.data,1)</command>
<command batch="193">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="193">end</command>
<command batch="193">% UPDATE SCENE</command>
<command batch="193">figure(1)</command>
<command batch="193">plot(object.data(:,1),object.data(:,2)); %[222/255 159/255 11/255]);</command>
<command batch="193">pause(.0001);</command>
<command batch="193">disp('scene updated');</command>
<command batch="193">%     guidata(hObject,object);</command>
<command batch="193" execution_time="8851">end</command>
<command batch="194">for idx = 90:180</command>
<command batch="194">newRotationMatrix = rotx(idx);</command>
<command batch="194">for idx = 1:size(object.data,1)</command>
<command batch="194">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="194">end</command>
<command batch="194">% UPDATE SCENE</command>
<command batch="194">figure(1)</command>
<command batch="194">plot(object.data(:,1),object.data(:,2)); %[222/255 159/255 11/255]);</command>
<command batch="194">pause(.0001);</command>
<command batch="194">disp('scene updated');</command>
<command batch="194">%     guidata(hObject,object);</command>
<command batch="194" execution_time="8709">end</command>
<command batch="195">for idx = 90:180</command>
<command batch="195">newRotationMatrix = rotx(idx);</command>
<command batch="195">for idx = 1:size(object.data,1)</command>
<command batch="195">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="195">end</command>
<command batch="195">% UPDATE SCENE</command>
<command batch="195">figure(1)</command>
<command batch="195">plot(object.data(:,1),object.data(:,2)); %[222/255 159/255 11/255]);</command>
<command batch="195">pause(.0001);</command>
<command batch="195">grid on;</command>
<command batch="195">disp('scene updated');</command>
<command batch="195">%     guidata(hObject,object);</command>
<command batch="195" execution_time="8990">end</command>
<command batch="196" repeat="2">for idx = 45:190</command>
<command batch="196">newRotationMatrix = roty(idx);</command>
<command batch="196">for idx = 1:size(object.data,1)</command>
<command batch="196">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="196">end</command>
<command batch="196">% UPDATE SCENE</command>
<command batch="196">figure(1)</command>
<command batch="196">plot(object.data(:,1),object.data(:,2)); %[222/255 159/255 11/255]);</command>
<command batch="196">pause(.0001);</command>
<command batch="196">grid on;</command>
<command batch="196">disp('scene updated');</command>
<command batch="196">%     guidata(hObject,object);</command>
<command batch="196" execution_time="15646">end</command>
<command execution_time="16">load('openGLTestExample.mat','model');</command>
<command execution_time="15">object.data = model.data;</command>
<command execution_time="31">plot(object.data(:,1),object.data(:,2))</command>
<command execution_time="16">R = roty(45);</command>
<command execution_time="78">for idx = 1:size(object.data,1); object.data(idx,:) = object.data(idx,:) * R; end</command>
<command execution_time="31">plot(object.data(:,1),object.data(:,2))</command>
<command execution_time="16">axis equal</command>
<command execution_time="31">clear all</command>
<command execution_time="15">load('openGLTestExample.mat','model');</command>
<command execution_time="16">object.data = model.data;</command>
<command execution_time="47">plot(object.data(:,1),object.data(:,2))</command>
<command execution_time="47">plot(model.data(:,1),model.data(:,2))</command>
<command execution_time="15">plot(model.data(:,2),model.data(:,3));</command>
<command error="true" execution_time="379">plotd(model.data(:,1))</command>
<command execution_time="31">plot(model.data(:,1))</command>
<command execution_time="16">plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">object.data = model.data;</command>
<command batch="197">for idx = 45:190</command>
<command batch="197">newRotationMatrix = roty(idx);</command>
<command batch="197">for idx = 1:size(object.data,1)</command>
<command batch="197">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="197">end</command>
<command batch="197">% UPDATE SCENE</command>
<command batch="197">figure(1)</command>
<command batch="197">plot(object.data(:,1),object.data(:,3)); %[222/255 159/255 11/255]);</command>
<command batch="197">pause(.0001);</command>
<command batch="197">grid on;</command>
<command batch="197">disp('scene updated');</command>
<command batch="197">%     guidata(hObject,object);</command>
<command batch="197" execution_time="7254">end</command>
<command error="true" execution_time="62">plot(object.data(:,3),object(:,1))</command>
<command execution_time="16">plot(object.data(:,3),object.data(:,1))</command>
<command execution_time="16">plot(object.data(:,3),object.data(:,2))</command>
<command execution_time="31">axis equal</command>
<command execution_time="16">load('openGLTestExample.mat','model');</command>
<command execution_time="31">object.data = model.data;</command>
<command execution_time="16">plot(object.data(:,3),object.data(:,1))</command>
<command execution_time="32">axis equal</command>
<command execution_time="16">plot(object.data(:,1),object.data(:,3))</command>
<command execution_time="32">axis equal</command>
<command execution_time="15">R = rotz(45);</command>
<command batch="198">for idx = 1:size(object.data,1)</command>
<command batch="198" execution_time="93">object.data(idx,:) = object.data(idx,:) * R; end</command>
<command execution_time="31">plot(object.data(:,1),object.data(:,3))</command>
<command execution_time="31">axis equal</command>
<command batch="199">for idx = 1:size(object.data,1)</command>
<command batch="199" execution_time="1857">object.data(idx,:) = object.data(idx,:) * rotz(-45); end</command>
<command execution_time="78">figure;</command>
<command execution_time="31">plot(object.data(:,1),object.data(:,3))</command>
<command execution_time="16">axis equal</command>
<command batch="200">for idx = 0:360</command>
<command batch="200">newRotationMatrix = rotz(idx);</command>
<command batch="200">for idx = 1:size(object.data,1)</command>
<command batch="200">object.data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="200">end</command>
<command batch="200">% UPDATE SCENE</command>
<command batch="200">plot(object.data(:,1),object.data(:,3)); %[222/255 159/255 11/255]);</command>
<command batch="200">pause(.0001);</command>
<command batch="200">grid on;</command>
<command batch="200">disp('scene updated');</command>
<command batch="200">%     guidata(hObject,object);</command>
<command batch="200" execution_time="37278">end</command>
<command batch="201">for idx = 0:360</command>
<command batch="201">newRotationMatrix = rotz(idx);</command>
<command batch="201">for idx = 1:size(object.data,1)</command>
<command batch="201">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="201">end</command>
<command batch="201">% UPDATE SCENE</command>
<command batch="201">plot(data(:,1),data(:,3)); %[222/255 159/255 11/255]);</command>
<command batch="201">pause(.0001);</command>
<command batch="201">grid on;</command>
<command batch="201">disp('scene updated');</command>
<command batch="201">%     guidata(hObject,object);</command>
<command batch="201" execution_time="30652">end</command>
<command batch="202">for idx = 0:360</command>
<command batch="202">newRotationMatrix = rotz(idx);</command>
<command batch="202">for idx = 1:size(object.data,1)</command>
<command batch="202">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="202">end</command>
<command batch="202">% UPDATE SCENE</command>
<command batch="202">plot(data(:,1),data(:,3), 'color', [222/255 159/255 11/255]);</command>
<command batch="202">pause(.0001);</command>
<command batch="202">grid on;</command>
<command batch="202">disp('scene updated');</command>
<command batch="202">%     guidata(hObject,object);</command>
<command batch="202" execution_time="31980">end</command>
<command batch="203">% UPDATE SCENE</command>
<command batch="203">% Create figure</command>
<command batch="203">figure1 = figure('Color',...</command>
<command batch="203">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="203">% Create axes</command>
<command batch="203">axes1 = axes('Parent',figure1,...</command>
<command batch="203">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="203">'ZColor',[0 0 0],...</command>
<command batch="203">'YColor',[0 0 0],...</command>
<command batch="203">'XColor',[0 0 0],...</command>
<command batch="203">'GridAlpha',1,...</command>
<command batch="203">'GridColor',[0 0 0]);</command>
<command batch="203">box(axes1,'on');</command>
<command batch="203">grid(axes1,'on');</command>
<command batch="203" execution_time="177">hold(axes1,'on');</command>
<command batch="204">for idx = 0:360</command>
<command batch="204">newRotationMatrix = rotz(idx);</command>
<command batch="204">for idx = 1:size(object.data,1)</command>
<command batch="204">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="204">end</command>
<command batch="204">% Create plot</command>
<command batch="204">plot(data(:,1),data(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="204">pause(.0001);</command>
<command batch="204">grid on;</command>
<command batch="204">disp('scene updated');</command>
<command batch="204">%     guidata(hObject,object);</command>
<command batch="204" execution_time="54484">end</command>
<command batch="205">% UPDATE OBJECT</command>
<command batch="205">for idx = 0:360</command>
<command batch="205">newRotationMatrix = rotz(idx);</command>
<command batch="205">for idx = 1:size(object.data,1)</command>
<command batch="205">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="205">end</command>
<command batch="205">% Create plot</command>
<command batch="205">plot(data(:,1),data(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="205">pause(.0001);</command>
<command batch="205">grid on;</command>
<command batch="205">disp('scene updated');</command>
<command batch="205">%     guidata(hObject,object);</command>
<command batch="205" execution_time="38215">end</command>
<command batch="206">figure1 = figure('Color',...</command>
<command batch="206">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="206">% Create axes</command>
<command batch="206">axes1 = axes('Parent',figure1,...</command>
<command batch="206">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="206">'ZColor',[0 0 0],...</command>
<command batch="206">'YColor',[0 0 0],...</command>
<command batch="206">'XColor',[0 0 0],...</command>
<command batch="206">'GridAlpha',1,...</command>
<command batch="206">'GridColor',[0 0 0]);</command>
<command batch="206">box(axes1,'on');</command>
<command batch="206">grid(axes1,'on');</command>
<command batch="206" execution_time="146">hold(axes1,'on');</command>
<command batch="207">for idx = 0:360</command>
<command batch="207">newRotationMatrix = rotz(idx);</command>
<command batch="207">for idx = 1:size(object.data,1)</command>
<command batch="207">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="207">end</command>
<command batch="207">% Create plot</command>
<command batch="207">plot(data(:,1),data(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="207">pause(.0001);</command>
<command batch="207">grid on;</command>
<command batch="207">disp('scene updated');</command>
<command batch="207">%     guidata(hObject,object);</command>
<command batch="207" execution_time="40757">end</command>
<command execution_time="20">axis equal</command>
<command batch="208">for idx = 0:360</command>
<command batch="208">newRotationMatrix = rotz(idx);</command>
<command batch="208">for idx = 1:size(object.data,1)</command>
<command batch="208">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="208">end</command>
<command batch="208">% Create plot</command>
<command batch="208">plot(data(:,1),data(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="208">pause(.0001);</command>
<command batch="208">grid on;</command>
<command batch="208">disp('scene updated');</command>
<command batch="208">%     guidata(hObject,object);</command>
<command batch="208" execution_time="7878">end</command>
<command batch="209">figure1 = figure('Color',...</command>
<command batch="209">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="209">% Create axes</command>
<command batch="209">axes1 = axes('Parent',figure1,...</command>
<command batch="209">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="209">'ZColor',[0 0 0],...</command>
<command batch="209">'YColor',[0 0 0],...</command>
<command batch="209">'XColor',[0 0 0],...</command>
<command batch="209">'GridAlpha',1,...</command>
<command batch="209">'GridColor',[0 0 0]);</command>
<command batch="209">box(axes1,'on');</command>
<command batch="209">grid(axes1,'on');</command>
<command batch="209" execution_time="146">hold(axes1,'on');</command>
<command batch="210">for idx = 0:360</command>
<command batch="210">newRotationMatrix = rotz(idx);</command>
<command batch="210">for idx = 1:size(object.data,1)</command>
<command batch="210">data(idx,:)  = object.data(idx,:) * newRotationMatrix;</command>
<command batch="210">end</command>
<command batch="210">% Create plot</command>
<command batch="210">plot(data(:,1),data(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="210">axis equal</command>
<command batch="210">pause(.0001);</command>
<command batch="210">grid on;</command>
<command batch="210">disp('scene updated');</command>
<command batch="210">%     guidata(hObject,object);</command>
<command batch="210" execution_time="574113">end</command>
<command execution_time="16">plot(1:10,'color',[0 0 0 0.5])</command>
<command execution_time="63">figure</command>
<command execution_time="31">plot(1:10,'color',[0 0 0 0.5])</command>
<command execution_time="16">plot(1:10)</command>
<command execution_time="16">plot(1:10,'color',[0 0 0 1])</command>
<command error="true" execution_time="62">plot(1:10,'color',[0 0 0 3])</command>
<command execution_time="15">plot(1:10,'color',[0 0 0 .3])</command>
<command execution_time="35174" repeat="3">assemblyTest</command>
<command error="true" execution_time="64">axis eqaul</command>
<command execution_time="36">axis equal</command>
<command execution_time="69">figure;</command>
<command execution_time="37">plot(obj2(:,1),obj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command execution_time="14">plot(obj1(:,1),obj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command execution_time="72">figure</command>
<command execution_time="15">plot(obj2(:,1),obj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command execution_time="15">plot(obj1(:,1),obj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 1]);</command>
<command execution_time="36">plot(obj1(:,1),obj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 .2]);</command>
<command execution_time="16">plot(obj1(:,1),obj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 .3]);</command>
<command execution_time="20">plot(obj1(:,1),obj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 .4]);</command>
<command execution_time="83">figure;</command>
<command batch="211">figure1 = figure('Color',...</command>
<command batch="211">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="211">% Create axes</command>
<command batch="211">axes1 = axes('Parent',figure1,...</command>
<command batch="211">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="211">'ZColor',[0 0 0],...</command>
<command batch="211">'YColor',[0 0 0],...</command>
<command batch="211">'XColor',[0 0 0],...</command>
<command batch="211">'GridAlpha',1,...</command>
<command batch="211">'GridColor',[0 0 0]);</command>
<command batch="211">box(axes1,'on');</command>
<command batch="211">grid(axes1,'on');</command>
<command batch="211" execution_time="151">hold(axes1,'on');</command>
<command batch="212">plot(obj1(:,1),obj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command batch="212">hold on;</command>
<command batch="212" execution_time="32">plot(obj2(:,1),obj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command batch="213">figure1 = figure('Color',...</command>
<command batch="213">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="213">% Create axes</command>
<command batch="213">axes1 = axes('Parent',figure1,...</command>
<command batch="213">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="213">'ZColor',[0 0 0],...</command>
<command batch="213">'YColor',[0 0 0],...</command>
<command batch="213">'XColor',[0 0 0],...</command>
<command batch="213">'GridAlpha',1,...</command>
<command batch="213">'GridColor',[0 0 0]);</command>
<command batch="213">box(axes1,'on');</command>
<command batch="213">grid(axes1,'on');</command>
<command batch="213" execution_time="158">hold(axes1,'on');</command>
<command execution_time="99">figure; plot(obj1(:,1),obj1(:,2),'color',[0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command execution_time="18">plot(obj1(:,1),obj1(:,2),'color',[0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command execution_time="19">plot(obj1(:,1),obj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command batch="214">figure1 = figure('Color',...</command>
<command batch="214">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="214">% Create axes</command>
<command batch="214">axes1 = axes('Parent',figure1,...</command>
<command batch="214">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="214">'ZColor',[0 0 0],...</command>
<command batch="214">'YColor',[0 0 0],...</command>
<command batch="214">'XColor',[0 0 0],...</command>
<command batch="214">'GridAlpha',1,...</command>
<command batch="214">'GridColor',[0 0 0]);</command>
<command batch="214">box(axes1,'on');</command>
<command batch="214">grid(axes1,'on');</command>
<command batch="214" execution_time="154">hold(axes1,'on');</command>
<command execution_time="23">plot(obj1(:,1),obj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command error="true" execution_time="512">plot(Obj2(:,1),Obj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command execution_time="19">plot(obj2(:,1),obj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command batch="215">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="215">load('innerMold.mat','model');</command>
<command batch="215">obj1 = model.data;</command>
<command batch="215">load('innerMold.mat','model');</command>
<command batch="215">obj2 = model.data(:,2).*.7;</command>
<command batch="215">figure1 = figure('Color',...</command>
<command batch="215">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="215">% Create axes</command>
<command batch="215">axes1 = axes('Parent',figure1,...</command>
<command batch="215">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="215">'ZColor',[0 0 0],...</command>
<command batch="215">'YColor',[0 0 0],...</command>
<command batch="215">'XColor',[0 0 0],...</command>
<command batch="215">'GridAlpha',1,...</command>
<command batch="215">'GridColor',[0 0 0]);</command>
<command batch="215">box(axes1,'on');</command>
<command batch="215">grid(axes1,'on');</command>
<command batch="215" execution_time="245">hold(axes1,'on');</command>
<command batch="216" error="true">for idx = 0:360</command>
<command batch="216" error="true">newRotationMatrix = rotz(idx);</command>
<command batch="216" error="true">for idx = 1:size(obj1,1)</command>
<command batch="216" error="true">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="216" error="true">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="216" error="true">end</command>
<command batch="216" error="true">% Create plot</command>
<command batch="216" error="true">plot(tmpObj1(:,1),tmpObj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command batch="216" error="true">hold on;</command>
<command batch="216" error="true">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command batch="216" error="true">axis equal</command>
<command batch="216" error="true">pause(.0001);</command>
<command batch="216" error="true">grid on;</command>
<command batch="216" error="true">disp('scene updated');</command>
<command batch="216" error="true" execution_time="129">end</command>
<command batch="217">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="217">load('innerMold.mat','model');</command>
<command batch="217">obj1 = model.data;</command>
<command batch="217">load('innerMold.mat','model');</command>
<command batch="217">obj2 = model.data;</command>
<command batch="217" execution_time="65">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="218">for idx = 0:360</command>
<command batch="218">newRotationMatrix = rotz(idx);</command>
<command batch="218">for idx = 1:size(obj1,1)</command>
<command batch="218">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="218">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="218">end</command>
<command batch="218">% Create plot</command>
<command batch="218">plot(tmpObj1(:,1),tmpObj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command batch="218">hold on;</command>
<command batch="218">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command batch="218">axis equal</command>
<command batch="218">pause(.0001);</command>
<command batch="218">grid on;</command>
<command batch="218">disp('scene updated');</command>
<command batch="218" execution_time="36143">end</command>
<command batch="219">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="219">load('innerMold.mat','model');</command>
<command batch="219">obj1 = model.data;</command>
<command batch="219">load('innerMold.mat','model');</command>
<command batch="219">obj2 = model.data;</command>
<command batch="219">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="219">figure1 = figure('Color',...</command>
<command batch="219">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="219">% Create axes</command>
<command batch="219">axes1 = axes('Parent',figure1,...</command>
<command batch="219">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="219">'ZColor',[0 0 0],...</command>
<command batch="219">'YColor',[0 0 0],...</command>
<command batch="219">'XColor',[0 0 0],...</command>
<command batch="219">'GridAlpha',1,...</command>
<command batch="219">'GridColor',[0 0 0]);</command>
<command batch="219">box(axes1,'on');</command>
<command batch="219">grid(axes1,'on');</command>
<command batch="219" execution_time="254">hold(axes1,'on');</command>
<command batch="220">for idx = 0:360</command>
<command batch="220">newRotationMatrix = rotz(idx);</command>
<command batch="220">for idx = 1:size(obj1,1)</command>
<command batch="220">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="220">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="220">end</command>
<command batch="220">% Create plot</command>
<command batch="220">plot(tmpObj1(:,1),tmpObj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608 0.5]);</command>
<command batch="220">hold on;</command>
<command batch="220">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command batch="220">pause(.0001);</command>
<command batch="220">grid on;</command>
<command batch="220">disp('scene updated');</command>
<command batch="220" execution_time="36039">end</command>
<command execution_time="82">figure; plot(obj1(:,1),obj1(:,3))</command>
<command execution_time="12">hold on; plot(obj2(:,1),obj2(:,3))</command>
<command batch="221">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="221">load('innerMold.mat','model');</command>
<command batch="221">obj1 = model.data;</command>
<command batch="221">load('innerMold.mat','model');</command>
<command batch="221">obj2 = model.data;</command>
<command batch="221">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="221">figure1 = figure('Color',...</command>
<command batch="221">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="221">% Create axes</command>
<command batch="221">axes1 = axes('Parent',figure1,...</command>
<command batch="221">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="221">'ZColor',[0 0 0],...</command>
<command batch="221">'YColor',[0 0 0],...</command>
<command batch="221">'XColor',[0 0 0],...</command>
<command batch="221">'GridAlpha',1,...</command>
<command batch="221">'GridColor',[0 0 0]);</command>
<command batch="221">box(axes1,'on');</command>
<command batch="221">grid(axes1,'on');</command>
<command batch="221" execution_time="246">hold(axes1,'on');</command>
<command batch="222">for idx = 0:360</command>
<command batch="222">newRotationMatrix = rotz(idx);</command>
<command batch="222">for idx = 1:size(obj1,1)</command>
<command batch="222">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="222">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="222">end</command>
<command batch="222">% Create plot</command>
<command batch="222">plot(tmpObj1(:,1),tmpObj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="222">hold on;</command>
<command batch="222">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[237/255 174/255 140/255]);</command>
<command batch="222">pause(.0001);</command>
<command batch="222">grid on;</command>
<command batch="222">disp('scene updated');</command>
<command batch="222" execution_time="28607">end</command>
<command batch="223">for idx = 0:360</command>
<command batch="223">newRotationMatrix = rotz(idx);</command>
<command batch="223">for idx = 1:size(obj1,1)</command>
<command batch="223">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="223">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="223">end</command>
<command batch="223">% Create plot</command>
<command batch="223">plot(tmpObj1(:,1),tmpObj1(:,3), 'color', [0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="223">hold on;</command>
<command batch="223">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[0 0 0]);</command>
<command batch="223">pause(.0001);</command>
<command batch="223">grid on;</command>
<command batch="223">disp('scene updated');</command>
<command batch="223" execution_time="30627">end</command>
<command execution_time="68">figure;</command>
<command execution_time="22">plot(obj1(:,1),obj1(:,3))</command>
<command execution_time="18">hold on; plot(obj2(:,1),obj2(:,3))</command>
<command execution_time="32">hold on; plot(obj2(:,1),obj2(:,3),'LineWidth',4)</command>
<command batch="224">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="224">load('innerMold.mat','model');</command>
<command batch="224">obj1 = model.data;</command>
<command batch="224">load('innerMold.mat','model');</command>
<command batch="224">obj2 = model.data;</command>
<command batch="224">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="224">figure1 = figure('Color',...</command>
<command batch="224">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="224">% Create axes</command>
<command batch="224">axes1 = axes('Parent',figure1,...</command>
<command batch="224">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="224">'ZColor',[0 0 0],...</command>
<command batch="224">'YColor',[0 0 0],...</command>
<command batch="224">'XColor',[0 0 0],...</command>
<command batch="224">'GridAlpha',1,...</command>
<command batch="224">'GridColor',[0 0 0]);</command>
<command batch="224">box(axes1,'on');</command>
<command batch="224">grid(axes1,'on');</command>
<command batch="224" execution_time="250">hold(axes1,'on');</command>
<command batch="225">for idx = 0:360</command>
<command batch="225">newRotationMatrix = rotz(idx);</command>
<command batch="225">for idx = 1:size(obj1,1)</command>
<command batch="225">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="225">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="225">end</command>
<command batch="225">% Create plot</command>
<command batch="225">plot(tmpObj1(:,1),tmpObj1(:,3));</command>
<command batch="225">%     [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="225">hold on;</command>
<command batch="225">plot(tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="225">pause(.0001);</command>
<command batch="225">grid on;</command>
<command batch="225">disp('scene updated');</command>
<command batch="225" execution_time="26468">end</command>
<command batch="226">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="226">load('innerMold.mat','model');</command>
<command batch="226">obj1 = model.data;</command>
<command batch="226">load('innerMold.mat','model');</command>
<command batch="226">obj2 = model.data;</command>
<command batch="226">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="226">figure1 = figure('Color',...</command>
<command batch="226">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="226">% Create axes</command>
<command batch="226">axes1 = axes('Parent',figure1,...</command>
<command batch="226">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="226">'ZColor',[0 0 0],...</command>
<command batch="226">'YColor',[0 0 0],...</command>
<command batch="226">'XColor',[0 0 0],...</command>
<command batch="226">'GridAlpha',1,...</command>
<command batch="226">'GridColor',[0 0 0]);</command>
<command batch="226">box(axes1,'on');</command>
<command batch="226">grid(axes1,'on');</command>
<command batch="226" execution_time="249">hold(axes1,'on');</command>
<command batch="227">for idx = 0:360</command>
<command batch="227">newRotationMatrix = rotz(idx);</command>
<command batch="227">for idx = 1:size(obj1,1)</command>
<command batch="227">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="227">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="227">end</command>
<command batch="227">% Create plot</command>
<command batch="227">plot(tmpObj1(:,1),tmpObj1(:,3));</command>
<command batch="227">%     [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="227">hold on;</command>
<command batch="227">plot(tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="227">pause(.0001);</command>
<command batch="227">grid on;</command>
<command batch="227">hold off</command>
<command batch="227">disp('scene updated');</command>
<command batch="227" execution_time="23789">end</command>
<command batch="228">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="228">load('innerMold.mat','model');</command>
<command batch="228">obj1 = model.data;</command>
<command batch="228">load('innerMold.mat','model');</command>
<command batch="228">obj2 = model.data;</command>
<command batch="228">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="228">figure1 = figure('Color',...</command>
<command batch="228">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="228">% Create axes</command>
<command batch="228">axes1 = axes('Parent',figure1,...</command>
<command batch="228">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="228">'ZColor',[0 0 0],...</command>
<command batch="228">'YColor',[0 0 0],...</command>
<command batch="228">'XColor',[0 0 0],...</command>
<command batch="228">'GridAlpha',1,...</command>
<command batch="228">'GridColor',[0 0 0]);</command>
<command batch="228">box(axes1,'on');</command>
<command batch="228">grid(axes1,'on');</command>
<command batch="228" execution_time="251">hold(axes1,'on');</command>
<command batch="229">% UPDATE OBJECT</command>
<command batch="229">for idx = 0:360</command>
<command batch="229">newRotationMatrix = rotz(idx);</command>
<command batch="229">for idx = 1:size(obj1,1)</command>
<command batch="229">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="229">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="229">end</command>
<command batch="229">% Create plot</command>
<command batch="229">figure1 = figure('Color',...</command>
<command batch="229">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="229">% Create axes</command>
<command batch="229">axes1 = axes('Parent',figure1,...</command>
<command batch="229">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="229">'ZColor',[0 0 0],...</command>
<command batch="229">'YColor',[0 0 0],...</command>
<command batch="229">'XColor',[0 0 0],...</command>
<command batch="229">'GridAlpha',1,...</command>
<command batch="229">'GridColor',[0 0 0]);</command>
<command batch="229">box(axes1,'on');</command>
<command batch="229">grid(axes1,'on');</command>
<command batch="229">hold(axes1,'on');</command>
<command batch="229">plot(tmpObj1(:,1),tmpObj1(:,3));</command>
<command batch="229">%     [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="229">hold on;</command>
<command batch="229">plot(tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="229">pause(.0001);</command>
<command batch="229">grid on;</command>
<command batch="229">hold off;</command>
<command batch="229">disp('scene updated');</command>
<command batch="229" execution_time="62560">end</command>
<command execution_time="7569">close all</command>
<command batch="230">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="230">load('innerMold.mat','model');</command>
<command batch="230">obj1 = model.data;</command>
<command batch="230">load('innerMold.mat','model');</command>
<command batch="230">obj2 = model.data;</command>
<command batch="230">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="230">figure1 = figure('Color',...</command>
<command batch="230">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="230">% Create axes</command>
<command batch="230">axes1 = axes('Parent',figure1,...</command>
<command batch="230">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="230">'ZColor',[0 0 0],...</command>
<command batch="230">'YColor',[0 0 0],...</command>
<command batch="230">'XColor',[0 0 0],...</command>
<command batch="230">'GridAlpha',1,...</command>
<command batch="230">'GridColor',[0 0 0]);</command>
<command batch="230">box(axes1,'on');</command>
<command batch="230">grid(axes1,'on');</command>
<command batch="230" execution_time="234">hold(axes1,'on');</command>
<command batch="231">for idx = 0:360</command>
<command batch="231">newRotationMatrix = rotz(idx);</command>
<command batch="231">for idx = 1:size(obj1,1)</command>
<command batch="231">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="231">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="231">end</command>
<command batch="231">% Create plot</command>
<command batch="231">plot(tmpObj1(:,1),tmpObj1(:,3),tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="231">%     [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="231">%     hold on;    plot(tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="231">pause(.0001);</command>
<command batch="231">grid on;</command>
<command batch="231">disp('scene updated');</command>
<command batch="231" execution_time="26557">end</command>
<command execution_time="16">hold off</command>
<command batch="232">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="232">load('innerMold.mat','model');</command>
<command batch="232">obj1 = model.data;</command>
<command batch="232">load('innerMold.mat','model');</command>
<command batch="232">obj2 = model.data;</command>
<command batch="232">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="232">figure1 = figure('Color',...</command>
<command batch="232">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="232">% Create axes</command>
<command batch="232">axes1 = axes('Parent',figure1,...</command>
<command batch="232">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="232">'ZColor',[0 0 0],...</command>
<command batch="232">'YColor',[0 0 0],...</command>
<command batch="232">'XColor',[0 0 0],...</command>
<command batch="232">'GridAlpha',1,...</command>
<command batch="232">'GridColor',[0 0 0]);</command>
<command batch="232">box(axes1,'on');</command>
<command batch="232">grid(axes1,'on');</command>
<command batch="232" execution_time="234">hold(axes1,'on');</command>
<command batch="233">for idx = 0:360</command>
<command batch="233">newRotationMatrix = rotz(idx);</command>
<command batch="233">for idx = 1:size(obj1,1)</command>
<command batch="233">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="233">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="233">end</command>
<command batch="233">% Create plot</command>
<command batch="233">plot(tmpObj1(:,1),tmpObj1(:,3),tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="233">%     [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="233">hold on;</command>
<command batch="233">plot(tmpObj2(:,1),tmpObj2(:,3),'LineWidth',4);</command>
<command batch="233">hold off;</command>
<command batch="233">pause(.0001);</command>
<command batch="233">disp('scene updated');</command>
<command batch="233" execution_time="24690">end</command>
<command batch="234">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="234">load('innerMold.mat','model');</command>
<command batch="234">obj1 = model.data;</command>
<command batch="234">load('innerMold.mat','model');</command>
<command batch="234">obj2 = model.data;</command>
<command batch="234">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="234">figure1 = figure('Color',...</command>
<command batch="234">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="234">% Create axes</command>
<command batch="234">axes1 = axes('Parent',figure1,...</command>
<command batch="234">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="234">'ZColor',[0 0 0],...</command>
<command batch="234">'YColor',[0 0 0],...</command>
<command batch="234">'XColor',[0 0 0],...</command>
<command batch="234">'GridAlpha',1,...</command>
<command batch="234">'GridColor',[0 0 0]);</command>
<command batch="234">box(axes1,'on');</command>
<command batch="234">grid(axes1,'on');</command>
<command batch="234" execution_time="249">hold(axes1,'on');</command>
<command batch="235" error="true">for idx = 0:360</command>
<command batch="235" error="true">newRotationMatrix = rotz(idx);</command>
<command batch="235" error="true">for idx = 1:size(obj1,1)</command>
<command batch="235" error="true">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="235" error="true">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="235" error="true">end</command>
<command batch="235" error="true">% Create plot</command>
<command batch="235" error="true">plot(tmpObj1(:,1),tmpObj1(:,3),tmpObj2(:,1),tmpObj2(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="235" error="true">pause(.0001);</command>
<command batch="235" error="true">disp('scene updated');</command>
<command batch="235" error="true" execution_time="114">end</command>
<command batch="236">% UPDATE OBJECT</command>
<command batch="236">for idx = 0:360</command>
<command batch="236">newRotationMatrix = rotz(idx);</command>
<command batch="236">for idx = 1:size(obj1,1)</command>
<command batch="236">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="236">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="236">end</command>
<command batch="236">% Create plot</command>
<command batch="236">plot(tmpObj1(:,1),tmpObj1(:,3),tmpObj2(:,1),tmpObj2(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="236">pause(.0001);</command>
<command batch="236">disp('scene updated');</command>
<command batch="236" execution_time="27696">end</command>
<command batch="237">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="237">load('innerMold.mat','model');</command>
<command batch="237">obj1 = model.data;</command>
<command batch="237">load('innerMold.mat','model');</command>
<command batch="237">obj2 = model.data;</command>
<command batch="237">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="237">figure1 = figure('Color',...</command>
<command batch="237">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="237">% Create axes</command>
<command batch="237">axes1 = axes('Parent',figure1,...</command>
<command batch="237">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="237">'ZColor',[0 0 0],...</command>
<command batch="237">'YColor',[0 0 0],...</command>
<command batch="237">'XColor',[0 0 0],...</command>
<command batch="237">'GridAlpha',1,...</command>
<command batch="237">'GridColor',[0 0 0]);</command>
<command batch="237">box(axes1,'on');</command>
<command batch="237">grid(axes1,'on');</command>
<command batch="237" execution_time="234">hold(axes1,'on');</command>
<command batch="238">% UPDATE OBJECT</command>
<command batch="238">for idx = 0:360</command>
<command batch="238">newRotationMatrix = rotz(idx);</command>
<command batch="238">for idx = 1:size(obj1,1)</command>
<command batch="238">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="238">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="238">end</command>
<command batch="238">% Create plot</command>
<command batch="238">plot(tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="238">pause(.0001);</command>
<command batch="238">disp('scene updated');</command>
<command batch="238" execution_time="25554">end</command>
<command batch="239">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="239">load('innerMold.mat','model');</command>
<command batch="239">obj1 = model.data;</command>
<command batch="239">load('innerMold.mat','model');</command>
<command batch="239">obj2 = model.data;</command>
<command batch="239">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="239">figure1 = figure('Color',...</command>
<command batch="239">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="239">% Create axes</command>
<command batch="239">axes1 = axes('Parent',figure1,...</command>
<command batch="239">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="239">'ZColor',[0 0 0],...</command>
<command batch="239">'YColor',[0 0 0],...</command>
<command batch="239">'XColor',[0 0 0],...</command>
<command batch="239">'GridAlpha',1,...</command>
<command batch="239">'GridColor',[0 0 0]);</command>
<command batch="239">box(axes1,'on');</command>
<command batch="239">grid(axes1,'on');</command>
<command batch="239" execution_time="234">hold(axes1,'on');</command>
<command batch="240">for idx = 0:360</command>
<command batch="240">newRotationMatrix = rotz(idx);</command>
<command batch="240">for idx = 1:size(obj1,1)</command>
<command batch="240">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="240">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="240">end</command>
<command batch="240">% Create plot</command>
<command batch="240">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="240">pause(.0001);</command>
<command batch="240">hold off;</command>
<command batch="240">disp('scene updated');</command>
<command batch="240" execution_time="23046">end</command>
<command batch="241">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="241">load('innerMold.mat','model');</command>
<command batch="241">obj1 = model.data;</command>
<command batch="241">load('innerMold.mat','model');</command>
<command batch="241">obj2 = model.data;</command>
<command batch="241">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="241">figure1 = figure('Color',...</command>
<command batch="241">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="241">% Create axes</command>
<command batch="241">axes1 = axes('Parent',figure1,...</command>
<command batch="241">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="241">'ZColor',[0 0 0],...</command>
<command batch="241">'YColor',[0 0 0],...</command>
<command batch="241">'XColor',[0 0 0],...</command>
<command batch="241">'GridAlpha',1,...</command>
<command batch="241">'GridColor',[0 0 0]);</command>
<command batch="241">box(axes1,'on');</command>
<command batch="241">grid(axes1,'on');</command>
<command batch="241" execution_time="234">hold(axes1,'on');</command>
<command batch="242">for idx = 0:360</command>
<command batch="242">newRotationMatrix = rotz(idx);</command>
<command batch="242">for idx = 1:size(obj1,1)</command>
<command batch="242">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="242">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="242">end</command>
<command batch="242">% Create plot</command>
<command batch="242">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="242">pause(.0001);</command>
<command batch="242">disp('scene updated');</command>
<command batch="242" execution_time="25328">end</command>
<command batch="243">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="243">load('innerMold.mat','model');</command>
<command batch="243">obj1 = model.data;</command>
<command batch="243">load('innerMold.mat','model');</command>
<command batch="243">obj2 = model.data;</command>
<command batch="243">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="243">figure1 = figure('Color',...</command>
<command batch="243">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="243">% Create axes</command>
<command batch="243">axes1 = axes('Parent',figure1,...</command>
<command batch="243">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="243">'ZColor',[0 0 0],...</command>
<command batch="243">'YColor',[0 0 0],...</command>
<command batch="243">'XColor',[0 0 0],...</command>
<command batch="243">'GridAlpha',1,...</command>
<command batch="243">'GridColor',[0 0 0]);</command>
<command batch="243">box(axes1,'on');</command>
<command batch="243">grid(axes1,'on');</command>
<command batch="243" execution_time="250">% hold(axes1,'on');</command>
<command batch="244">% UPDATE OBJECT</command>
<command batch="244">for idx = 0:360</command>
<command batch="244">newRotationMatrix = rotz(idx);</command>
<command batch="244">for idx = 1:size(obj1,1)</command>
<command batch="244">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="244">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="244">end</command>
<command batch="244">% Create plot</command>
<command batch="244">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="244">pause(.0001);</command>
<command batch="244">disp('scene updated');</command>
<command batch="244" execution_time="22932">end</command>
<command batch="245">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="245">load('innerMold.mat','model');</command>
<command batch="245">obj1 = model.data;</command>
<command batch="245">load('innerMold.mat','model');</command>
<command batch="245">obj2 = model.data;</command>
<command batch="245">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="245">figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="245">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="245">% Create axes</command>
<command batch="245">axes1 = axes('Parent',figure1,...</command>
<command batch="245">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="245">'ZColor',[0 0 0],...</command>
<command batch="245">'YColor',[0 0 0],...</command>
<command batch="245">'XColor',[0 0 0],...</command>
<command batch="245">'GridAlpha',1,...</command>
<command batch="245">'GridColor',[0 0 0]);</command>
<command batch="245">box(axes1,'on');</command>
<command batch="245">grid(axes1,'on');</command>
<command batch="245" execution_time="265">hold(axes1,'on');</command>
<command batch="246">% UPDATE OBJECT</command>
<command batch="246">for idx = 0:360</command>
<command batch="246">newRotationMatrix = rotz(idx);</command>
<command batch="246">for idx = 1:size(obj1,1)</command>
<command batch="246">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="246">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="246">end</command>
<command batch="246">% Create plot</command>
<command batch="246">figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="246">[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="246">% Create axes</command>
<command batch="246">axes1 = axes('Parent',figure1,...</command>
<command batch="246">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="246">'ZColor',[0 0 0],...</command>
<command batch="246">'YColor',[0 0 0],...</command>
<command batch="246">'XColor',[0 0 0],...</command>
<command batch="246">'GridAlpha',1,...</command>
<command batch="246">'GridColor',[0 0 0]);</command>
<command batch="246">box(axes1,'on');</command>
<command batch="246">grid(axes1,'on');</command>
<command batch="246">hold(axes1,'on');</command>
<command batch="246">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="246">pause(.0001);</command>
<command batch="246">hold off;</command>
<command batch="246">disp('scene updated');</command>
<command batch="246" execution_time="176462">end</command>
<command execution_time="7364">close all</command>
<command batch="247">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="247">load('innerMold.mat','model');</command>
<command batch="247">obj1 = model.data;</command>
<command batch="247">load('innerMold.mat','model');</command>
<command batch="247">obj2 = model.data;</command>
<command batch="247">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="247">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="247">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="247">figure1 = figure;</command>
<command batch="247">% Create axes</command>
<command batch="247">axes1 = axes('Parent',figure1,...</command>
<command batch="247">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="247">'ZColor',[0 0 0],...</command>
<command batch="247">'YColor',[0 0 0],...</command>
<command batch="247">'XColor',[0 0 0],...</command>
<command batch="247">'GridAlpha',1,...</command>
<command batch="247">'GridColor',[0 0 0]);</command>
<command batch="247">box(axes1,'on');</command>
<command batch="247">grid(axes1,'on');</command>
<command batch="247" execution_time="249">hold(axes1,'on');</command>
<command batch="248">for idx = 0:360</command>
<command batch="248">newRotationMatrix = rotz(idx);</command>
<command batch="248">for idx = 1:size(obj1,1)</command>
<command batch="248">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="248">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="248">end</command>
<command batch="248">% Create plot</command>
<command batch="248">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="248">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="248">figure1 = figure(1);</command>
<command batch="248">% Create axes</command>
<command batch="248">axes1 = axes('Parent',figure1,...</command>
<command batch="248">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="248">'ZColor',[0 0 0],...</command>
<command batch="248">'YColor',[0 0 0],...</command>
<command batch="248">'XColor',[0 0 0],...</command>
<command batch="248">'GridAlpha',1,...</command>
<command batch="248">'GridColor',[0 0 0]);</command>
<command batch="248">box(axes1,'on');</command>
<command batch="248">grid(axes1,'on');</command>
<command batch="248">hold(axes1,'on');</command>
<command batch="248">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="248">pause(.0001);</command>
<command batch="248">hold off;</command>
<command batch="248">disp('scene updated');</command>
<command batch="248" execution_time="34422">end</command>
<command batch="249">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="249">load('innerMold.mat','model');</command>
<command batch="249">obj1 = model.data;</command>
<command batch="249">load('innerMold.mat','model');</command>
<command batch="249">obj2 = model.data;</command>
<command batch="249">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="249">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="249">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="249">figure1 = figure;</command>
<command batch="249">% Create axes</command>
<command batch="249">axes1 = axes('Parent',figure1,...</command>
<command batch="249">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="249">'ZColor',[0 0 0],...</command>
<command batch="249">'YColor',[0 0 0],...</command>
<command batch="249">'XColor',[0 0 0],...</command>
<command batch="249">'GridAlpha',1,...</command>
<command batch="249">'GridColor',[0 0 0]);</command>
<command batch="249">box(axes1,'on');</command>
<command batch="249">grid(axes1,'on');</command>
<command batch="249" execution_time="256">hold(axes1,'on');</command>
<command batch="250">for idx = 0:360</command>
<command batch="250">newRotationMatrix = rotz(idx);</command>
<command batch="250">for idx = 1:size(obj1,1)</command>
<command batch="250">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="250">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="250">end</command>
<command batch="250">% Create plot</command>
<command batch="250">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="250">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="250">figure1 = figure(1);</command>
<command batch="250">% Create axes</command>
<command batch="250">axes1 = axes('Parent',figure1,...</command>
<command batch="250">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="250">'ZColor',[0 0 0],...</command>
<command batch="250">'YColor',[0 0 0],...</command>
<command batch="250">'XColor',[0 0 0],...</command>
<command batch="250">'GridAlpha',1,...</command>
<command batch="250">'GridColor',[0 0 0]);</command>
<command batch="250">box(axes1,'on');</command>
<command batch="250">grid(axes1,'on');</command>
<command batch="250">hold(axes1,'on');</command>
<command batch="250">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="250">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[179/255, 146/255, 120/255], 'LineWidth',4);</command>
<command batch="250">pause(.0001);</command>
<command batch="250">hold off;</command>
<command batch="250">disp('scene updated');</command>
<command batch="250" execution_time="37222">end</command>
<command batch="251">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="251">load('innerMold.mat','model');</command>
<command batch="251">obj1 = model.data;</command>
<command batch="251">load('innerMold.mat','model');</command>
<command batch="251">obj2 = model.data;</command>
<command batch="251">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="251">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="251">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="251">figure1 = figure;</command>
<command batch="251">% Create axes</command>
<command batch="251">axes1 = axes('Parent',figure1,...</command>
<command batch="251">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="251">'ZColor',[0 0 0],...</command>
<command batch="251">'YColor',[0 0 0],...</command>
<command batch="251">'XColor',[0 0 0],...</command>
<command batch="251">'GridAlpha',1,...</command>
<command batch="251">'GridColor',[0 0 0]);</command>
<command batch="251">box(axes1,'on');</command>
<command batch="251">grid(axes1,'on');</command>
<command batch="251" execution_time="243">hold(axes1,'on');</command>
<command batch="252">for idx = 0:360</command>
<command batch="252">newRotationMatrix = rotz(idx);</command>
<command batch="252">for idx = 1:size(obj1,1)</command>
<command batch="252">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="252">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="252">end</command>
<command batch="252">% Create plot</command>
<command batch="252">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="252">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="252">figure1 = figure(1);</command>
<command batch="252">% Create axes</command>
<command batch="252">axes1 = axes('Parent',figure1,...</command>
<command batch="252">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="252">'ZColor',[0 0 0],...</command>
<command batch="252">'YColor',[0 0 0],...</command>
<command batch="252">'XColor',[0 0 0],...</command>
<command batch="252">'GridAlpha',1,...</command>
<command batch="252">'GridColor',[0 0 0]);</command>
<command batch="252">box(axes1,'on');</command>
<command batch="252">grid(axes1,'on');</command>
<command batch="252">hold(axes1,'on');</command>
<command batch="252">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608],'LineWidth',4);</command>
<command batch="252">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[179/255, 146/255, 120/255], 'LineWidth',4);</command>
<command batch="252">pause(.0001);</command>
<command batch="252">hold off;</command>
<command batch="252">disp('scene updated');</command>
<command batch="252" execution_time="35323">end</command>
<command error="true" execution_time="446">axistick(axes1,'off')</command>
<command error="true" execution_time="300">tick(axes1,'off')</command>
<command error="true" execution_time="16">tic(axes1,'off')</command>
<command error="true" execution_time="366">xticklabel('off'); yticklabel('off');</command>
<command batch="253">% UPDATE SCENE</command>
<command batch="253">% Create figure</command>
<command batch="253">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="253">load('innerMold.mat','model');</command>
<command batch="253">obj1 = model.data;</command>
<command batch="253">load('innerMold.mat','model');</command>
<command batch="253">obj2 = model.data;</command>
<command batch="253">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="253">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="253">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="253">figure1 = figure;</command>
<command batch="253">% Create axes</command>
<command batch="253">axes1 = axes('Parent',figure1,...</command>
<command batch="253">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="253">'ZColor',[0 0 0],...</command>
<command batch="253">'YColor',[0 0 0],...</command>
<command batch="253">'XColor',[0 0 0],...</command>
<command batch="253">'GridAlpha',1,...</command>
<command batch="253">'GridColor',[0 0 0]);</command>
<command batch="253">box(axes1,'on');</command>
<command batch="253">grid(axes1,'on');</command>
<command batch="253" execution_time="265">hold(axes1,'on');</command>
<command batch="254">figure1 = figure;</command>
<command batch="254" execution_time="78">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="255">% Create axes</command>
<command batch="255">axes1 = axes('Parent',figure1,...</command>
<command batch="255">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="255">'ZColor',[0 0 0],...</command>
<command batch="255">'YColor',[0 0 0],...</command>
<command batch="255">'XColor',[0 0 0],...</command>
<command batch="255">'GridAlpha',1,...</command>
<command batch="255">'GridColor',[0 0 0]);</command>
<command batch="255">box(axes1,'on');</command>
<command batch="255">grid(axes1,'on');</command>
<command batch="255" execution_time="78">hold(axes1,'on');</command>
<command batch="256">for idx = 0:360</command>
<command batch="256">newRotationMatrix = rotz(idx);</command>
<command batch="256">for idx = 1:size(obj1,1)</command>
<command batch="256">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="256">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="256">end</command>
<command batch="256">% Create plot</command>
<command batch="256">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="256">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="256">figure1 = figure(1);</command>
<command batch="256">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="256">% Create axes</command>
<command batch="256">axes1 = axes('Parent',figure1,...</command>
<command batch="256">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="256">'ZColor',[0 0 0],...</command>
<command batch="256">'YColor',[0 0 0],...</command>
<command batch="256">'XColor',[0 0 0],...</command>
<command batch="256">'GridAlpha',1,...</command>
<command batch="256">'GridColor',[0 0 0]);</command>
<command batch="256">box(axes1,'on');</command>
<command batch="256">grid(axes1,'on');</command>
<command batch="256">hold(axes1,'on');</command>
<command batch="256">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="256">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608],'LineWidth',4);</command>
<command batch="256">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[179/255, 146/255, 120/255], 'LineWidth',4);</command>
<command batch="256">pause(.0001);</command>
<command batch="256">hold off;</command>
<command batch="256">disp('scene updated');</command>
<command batch="256" execution_time="33230">end</command>
<command batch="257">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="257">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="257">figure1 = figure;</command>
<command batch="257">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="257">% Create axes</command>
<command batch="257">axes1 = axes('Parent',figure1,...</command>
<command batch="257">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="257">'ZColor',[0 0 0],...</command>
<command batch="257">'YColor',[0 0 0],...</command>
<command batch="257">'XColor',[0 0 0],...</command>
<command batch="257">'GridAlpha',1,...</command>
<command batch="257">'GridColor',[0 0 0]);</command>
<command batch="257">box(axes1,'on');</command>
<command batch="257">grid(axes1,'on');</command>
<command batch="257">hold(axes1,'on');</command>
<command batch="257" execution_time="141">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="258">for idx = 0:360</command>
<command batch="258">newRotationMatrix = rotz(idx);</command>
<command batch="258">for idx = 1:size(obj1,1)</command>
<command batch="258">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="258">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="258">end</command>
<command batch="258">% Create plot</command>
<command batch="258">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="258">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="258">figure1 = figure(1);</command>
<command batch="258">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="258">% Create axes</command>
<command batch="258">axes1 = axes('Parent',figure1,...</command>
<command batch="258">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="258">'ZColor',[0 0 0],...</command>
<command batch="258">'YColor',[0 0 0],...</command>
<command batch="258">'XColor',[0 0 0],...</command>
<command batch="258">'GridAlpha',1,...</command>
<command batch="258">'GridColor',[0 0 0]);</command>
<command batch="258">box(axes1,'on');</command>
<command batch="258">grid(axes1,'on');</command>
<command batch="258">hold(axes1,'on');</command>
<command batch="258">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="258">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608],'LineWidth',4);</command>
<command batch="258">plot(tmpObj2(:,1),tmpObj2(:,3),'color',[179/255, 146/255, 120/255], 'LineWidth',4);</command>
<command batch="258">pause(.0001);</command>
<command batch="258">hold off;</command>
<command batch="258">disp('scene updated');</command>
<command batch="258" execution_time="32347">end</command>
<command execution_time="15">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',4);</command>
<command batch="259">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="259">load('innerMold.mat','model');</command>
<command batch="259">obj1 = model.data;</command>
<command batch="259">load('innerMold.mat','model');</command>
<command batch="259">obj2 = model.data;</command>
<command batch="259">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="259">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="259">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="259">figure1 = figure;</command>
<command batch="259">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="259">% Create axes</command>
<command batch="259">axes1 = axes('Parent',figure1,...</command>
<command batch="259">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="259">'ZColor',[0 0 0],...</command>
<command batch="259">'YColor',[0 0 0],...</command>
<command batch="259">'XColor',[0 0 0],...</command>
<command batch="259">'GridAlpha',1,...</command>
<command batch="259">'GridColor',[0 0 0]);</command>
<command batch="259">box(axes1,'on');</command>
<command batch="259">grid(axes1,'on');</command>
<command batch="259">hold(axes1,'on');</command>
<command batch="259" execution_time="265">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="260" error="true">for idx = 0:360</command>
<command batch="260" error="true">newRotationMatrix = rotz(idx);</command>
<command batch="260" error="true">for idx = 1:size(obj1,1)</command>
<command batch="260" error="true">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="260" error="true">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="260" error="true">end</command>
<command batch="260" error="true">% Create plot</command>
<command batch="260" error="true">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="260" error="true">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="260" error="true">figure1 = figure(1);</command>
<command batch="260" error="true">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="260" error="true">% Create axes</command>
<command batch="260" error="true">axes1 = axes('Parent',figure1,...</command>
<command batch="260" error="true">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="260" error="true">'ZColor',[0 0 0],...</command>
<command batch="260" error="true">'YColor',[0 0 0],...</command>
<command batch="260" error="true">'XColor',[0 0 0],...</command>
<command batch="260" error="true">'GridAlpha',1,...</command>
<command batch="260" error="true">'GridColor',[0 0 0]);</command>
<command batch="260" error="true">box(axes1,'on');</command>
<command batch="260" error="true">grid(axes1,'on');</command>
<command batch="260" error="true">hold(axes1,'on');</command>
<command batch="260" error="true">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="260" error="true">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608];</command>
<command batch="260" error="true">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',4);</command>
<command batch="260" error="true">pause(.0001);</command>
<command batch="260" error="true">hold off;</command>
<command batch="260" error="true">disp('scene updated');</command>
<command batch="260" error="true" execution_time="232">end</command>
<command batch="261">% UPDATE OBJECT</command>
<command batch="261">for idx = 0:360</command>
<command batch="261">newRotationMatrix = rotz(idx);</command>
<command batch="261">for idx = 1:size(obj1,1)</command>
<command batch="261">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="261">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="261">end</command>
<command batch="261">% Create plot</command>
<command batch="261">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="261">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="261">figure1 = figure(1);</command>
<command batch="261">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="261">% Create axes</command>
<command batch="261">axes1 = axes('Parent',figure1,...</command>
<command batch="261">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="261">'ZColor',[0 0 0],...</command>
<command batch="261">'YColor',[0 0 0],...</command>
<command batch="261">'XColor',[0 0 0],...</command>
<command batch="261">'GridAlpha',1,...</command>
<command batch="261">'GridColor',[0 0 0]);</command>
<command batch="261">box(axes1,'on');</command>
<command batch="261">grid(axes1,'on');</command>
<command batch="261">hold(axes1,'on');</command>
<command batch="261">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="261">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="261">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',4);</command>
<command batch="261">pause(.0001);</command>
<command batch="261">hold off;</command>
<command batch="261">disp('scene updated');</command>
<command batch="261" execution_time="33441">end</command>
<command batch="262">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="262">load('innerMold.mat','model');</command>
<command batch="262">obj1 = model.data;</command>
<command batch="262">load('innerMold.mat','model');</command>
<command batch="262">obj2 = model.data;</command>
<command batch="262">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="262">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="262">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="262">figure1 = figure;</command>
<command batch="262">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="262">% Create axes</command>
<command batch="262">axes1 = axes('Parent',figure1,...</command>
<command batch="262">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="262">'ZColor',[0 0 0],...</command>
<command batch="262">'YColor',[0 0 0],...</command>
<command batch="262">'XColor',[0 0 0],...</command>
<command batch="262">'GridAlpha',1,...</command>
<command batch="262">'GridColor',[0 0 0]);</command>
<command batch="262">box(axes1,'on');</command>
<command batch="262">grid(axes1,'on');</command>
<command batch="262">hold(axes1,'on');</command>
<command batch="262" execution_time="280">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="263">for idx = 0:360</command>
<command batch="263">newRotationMatrix = rotz(idx);</command>
<command batch="263">for idx = 1:size(obj1,1)</command>
<command batch="263">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="263">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="263">end</command>
<command batch="263">% Create plot</command>
<command batch="263">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="263">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="263">figure1 = figure(1);</command>
<command batch="263">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="263">% Create axes</command>
<command batch="263">axes1 = axes('Parent',figure1,...</command>
<command batch="263">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="263">'ZColor',[0 0 0],...</command>
<command batch="263">'YColor',[0 0 0],...</command>
<command batch="263">'XColor',[0 0 0],...</command>
<command batch="263">'GridAlpha',1,...</command>
<command batch="263">'GridColor',[0 0 0]);</command>
<command batch="263">box(axes1,'on');</command>
<command batch="263">grid(axes1,'on');</command>
<command batch="263">hold(axes1,'on');</command>
<command batch="263">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="263">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="263">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="263">pause(.0001);</command>
<command batch="263">hold off;</command>
<command batch="263">disp('scene updated');</command>
<command batch="263" execution_time="34938">end</command>
<command execution_time="13105">figure</command>
<command execution_time="63">xlabel(['Angle: ' num2str(idx) char(176)]');</command>
<command batch="264">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="264">load('innerMold.mat','model');</command>
<command batch="264">obj1 = model.data;</command>
<command batch="264">load('innerMold.mat','model');</command>
<command batch="264">obj2 = model.data;</command>
<command batch="264">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="264">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="264">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="264">figure1 = figure;</command>
<command batch="264">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="264">% Create axes</command>
<command batch="264">axes1 = axes('Parent',figure1,...</command>
<command batch="264">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="264">'ZColor',[0 0 0],...</command>
<command batch="264">'YColor',[0 0 0],...</command>
<command batch="264">'XColor',[0 0 0],...</command>
<command batch="264">'GridAlpha',1,...</command>
<command batch="264">'GridColor',[0 0 0]);</command>
<command batch="264">box(axes1,'on');</command>
<command batch="264">grid(axes1,'on');</command>
<command batch="264">hold(axes1,'on');</command>
<command batch="264" execution_time="281">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="265">for idx = 0:360</command>
<command batch="265">newRotationMatrix = rotz(idx);</command>
<command batch="265">for idx = 1:size(obj1,1)</command>
<command batch="265">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="265">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="265">end</command>
<command batch="265">% Create plot</command>
<command batch="265">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="265">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="265">figure1 = figure(1);</command>
<command batch="265">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="265">% Create axes</command>
<command batch="265">axes1 = axes('Parent',figure1,...</command>
<command batch="265">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="265">'ZColor',[0 0 0],...</command>
<command batch="265">'YColor',[0 0 0],...</command>
<command batch="265">'XColor',[0 0 0],...</command>
<command batch="265">'GridAlpha',1,...</command>
<command batch="265">'GridColor',[0 0 0]);</command>
<command batch="265">box(axes1,'on');</command>
<command batch="265">grid(axes1,'on');</command>
<command batch="265">hold(axes1,'on');</command>
<command batch="265">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="265">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="265">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="265">xlabel(['Angle: ' num2str(idx) char(176)]');</command>
<command batch="265">pause(.0001);</command>
<command batch="265">hold off;</command>
<command batch="265">disp('scene updated');</command>
<command batch="265" execution_time="51135">end</command>
<command batch="266">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="266">load('innerMold.mat','model');</command>
<command batch="266">obj1 = model.data;</command>
<command batch="266">load('innerMold.mat','model');</command>
<command batch="266">obj2 = model.data;</command>
<command batch="266">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="266">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="266">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="266">figure1 = figure;</command>
<command batch="266">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="266">% Create axes</command>
<command batch="266">axes1 = axes('Parent',figure1,...</command>
<command batch="266">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="266">'ZColor',[0 0 0],...</command>
<command batch="266">'YColor',[0 0 0],...</command>
<command batch="266">'XColor',[0 0 0],...</command>
<command batch="266">'GridAlpha',1,...</command>
<command batch="266">'GridColor',[0 0 0]);</command>
<command batch="266">box(axes1,'on');</command>
<command batch="266">grid(axes1,'on');</command>
<command batch="266">hold(axes1,'on');</command>
<command batch="266" execution_time="266">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="267">for idx = 0:360</command>
<command batch="267">newRotationMatrix = rotz(idx);</command>
<command batch="267">for idx = 1:size(obj1,1)</command>
<command batch="267">tmpObj1(idx,:)  = obj1(idx,:) * newRotationMatrix;</command>
<command batch="267">tmpObj2(idx,:)  = obj2(idx,:) * newRotationMatrix;</command>
<command batch="267">end</command>
<command batch="267">% Create plot</command>
<command batch="267">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="267">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="267">figure1 = figure(1);</command>
<command batch="267">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="267">% Create axes</command>
<command batch="267">axes1 = axes('Parent',figure1,...</command>
<command batch="267">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="267">'ZColor',[0 0 0],...</command>
<command batch="267">'YColor',[0 0 0],...</command>
<command batch="267">'XColor',[0 0 0],...</command>
<command batch="267">'GridAlpha',1,...</command>
<command batch="267">'GridColor',[0 0 0]);</command>
<command batch="267">box(axes1,'on');</command>
<command batch="267">grid(axes1,'on');</command>
<command batch="267">hold(axes1,'on');</command>
<command batch="267">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="267">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="267">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="267">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="267">pause(.0001);</command>
<command batch="267">hold off;</command>
<command batch="267">disp('scene updated');</command>
<command batch="267" execution_time="54752">end</command>
<command execution_time="15">idx</command>
<command batch="268">% Create figure</command>
<command batch="268">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="268">load('innerMold.mat','model');</command>
<command batch="268">obj1 = model.data;</command>
<command batch="268">load('innerMold.mat','model');</command>
<command batch="268">obj2 = model.data;</command>
<command batch="268">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="268">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="268">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="268">figure1 = figure;</command>
<command batch="268">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="268">% Create axes</command>
<command batch="268">axes1 = axes('Parent',figure1,...</command>
<command batch="268">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="268">'ZColor',[0 0 0],...</command>
<command batch="268">'YColor',[0 0 0],...</command>
<command batch="268">'XColor',[0 0 0],...</command>
<command batch="268">'GridAlpha',1,...</command>
<command batch="268">'GridColor',[0 0 0]);</command>
<command batch="268">box(axes1,'on');</command>
<command batch="268">grid(axes1,'on');</command>
<command batch="268">hold(axes1,'on');</command>
<command batch="268" execution_time="266">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="269">for idx = 0:360</command>
<command batch="269">newRotationMatrix = rotz(idx);</command>
<command batch="269">for idx2 = 1:size(obj1,1)</command>
<command batch="269">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="269">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="269">end</command>
<command batch="269">% Create plot</command>
<command batch="269">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="269">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="269">figure1 = figure(1);</command>
<command batch="269">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="269">% Create axes</command>
<command batch="269">axes1 = axes('Parent',figure1,...</command>
<command batch="269">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="269">'ZColor',[0 0 0],...</command>
<command batch="269">'YColor',[0 0 0],...</command>
<command batch="269">'XColor',[0 0 0],...</command>
<command batch="269">'GridAlpha',1,...</command>
<command batch="269">'GridColor',[0 0 0]);</command>
<command batch="269">box(axes1,'on');</command>
<command batch="269">grid(axes1,'on');</command>
<command batch="269">hold(axes1,'on');</command>
<command batch="269">%     set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="269">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="269">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="269">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="269">pause(.0001);</command>
<command batch="269">hold off;</command>
<command batch="269">disp('scene updated');</command>
<command batch="269" execution_time="118263">end</command>
<command execution_time="19">xlabel('');</command>
<command batch="270">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="270">load('innerMold.mat','model');</command>
<command batch="270">obj1 = model.data;</command>
<command batch="270">load('innerMold.mat','model');</command>
<command batch="270">obj2 = model.data;</command>
<command batch="270">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="270">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="270">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="270">figure1 = figure;</command>
<command batch="270">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="270">% Create axes</command>
<command batch="270">axes1 = axes('Parent',figure1,...</command>
<command batch="270">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="270">'ZColor',[0 0 0],...</command>
<command batch="270">'YColor',[0 0 0],...</command>
<command batch="270">'XColor',[0 0 0],...</command>
<command batch="270">'GridAlpha',1,...</command>
<command batch="270">'GridColor',[0 0 0]);</command>
<command batch="270">box(axes1,'on');</command>
<command batch="270">grid(axes1,'on');</command>
<command batch="270">hold(axes1,'on');</command>
<command batch="270" execution_time="265">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="271">for idx = 0:360</command>
<command batch="271">newRotationMatrix = rotz(idx);</command>
<command batch="271">for idx2 = 1:size(obj1,1)</command>
<command batch="271">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="271">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="271">end</command>
<command batch="271">% Create plot</command>
<command batch="271">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="271">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="271">figure1 = figure(1);</command>
<command batch="271">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="271">% Create axes</command>
<command batch="271">axes1 = axes('Parent',figure1,...</command>
<command batch="271">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="271">'ZColor',[0 0 0],...</command>
<command batch="271">'YColor',[0 0 0],...</command>
<command batch="271">'XColor',[0 0 0],...</command>
<command batch="271">'GridAlpha',1,...</command>
<command batch="271">'GridColor',[0 0 0]);</command>
<command batch="271">box(axes1,'on');</command>
<command batch="271">grid(axes1,'on');</command>
<command batch="271">hold(axes1,'on');</command>
<command batch="271">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="271">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="271">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="271">pause(.0001);</command>
<command batch="271">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="271">xlabel('');</command>
<command batch="271">hold off;</command>
<command batch="271" execution_time="101003">end</command>
<command execution_time="164">profile -memory on;</command>
<command batch="272">assemblyTest</command>
</session>
<session>
<command time_stamp="151106b5ec2">%-- 11/16/2015 8:10 AM --%</command>
<command batch="273">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="273">load('innerMold.mat','model');</command>
<command batch="273">obj1 = model.data;</command>
<command batch="273">load('innerMold.mat','model');</command>
<command batch="273">obj2 = model.data;</command>
<command batch="273">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="273">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="273">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="273">figure1 = figure;</command>
<command batch="273">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="273">% Create axes</command>
<command batch="273">axes1 = axes('Parent',figure1,...</command>
<command batch="273">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="273">'ZColor',[0 0 0],...</command>
<command batch="273">'YColor',[0 0 0],...</command>
<command batch="273">'XColor',[0 0 0],...</command>
<command batch="273">'GridAlpha',1,...</command>
<command batch="273">'GridColor',[0 0 0]);</command>
<command batch="273">box(axes1,'on');</command>
<command batch="273">grid(axes1,'on');</command>
<command batch="273">hold(axes1,'on');</command>
<command batch="273">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="273">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="273">% INITIALIZE BUFFERS</command>
<command batch="273">tmpObj1 = zeros(size(obj1));</command>
<command batch="273" execution_time="9768">tmpObj2 = zeros(size(obj2));</command>
<command execution_time="20">get(figure1,'position')</command>
<command batch="274">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="274">load('innerMold.mat','model');</command>
<command batch="274">obj1 = model.data;</command>
<command batch="274">load('innerMold.mat','model');</command>
<command batch="274">obj2 = model.data;</command>
<command batch="274">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="274">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="274">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="274">figure1 = figure;</command>
<command batch="274">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="274">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="274">% Create axes</command>
<command batch="274">axes1 = axes('Parent',figure1,...</command>
<command batch="274">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="274">'ZColor',[0 0 0],...</command>
<command batch="274">'YColor',[0 0 0],...</command>
<command batch="274">'XColor',[0 0 0],...</command>
<command batch="274">'GridAlpha',1,...</command>
<command batch="274">'GridColor',[0 0 0]);</command>
<command batch="274">box(axes1,'on');</command>
<command batch="274">grid(axes1,'on');</command>
<command batch="274">hold(axes1,'on');</command>
<command batch="274">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="274">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="274">% INITIALIZE BUFFERS</command>
<command batch="274">tmpObj1 = zeros(size(obj1));</command>
<command batch="274" execution_time="442">tmpObj2 = zeros(size(obj2));</command>
<command error="true" execution_time="108961">assemblyTest</command>
<command batch="275">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="275">load('innerMold.mat','model');</command>
<command batch="275">obj1 = model.data;</command>
<command batch="275">load('innerMold.mat','model');</command>
<command batch="275">obj2 = model.data;</command>
<command batch="275">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="275">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="275">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="275">figure1 = figure;</command>
<command batch="275">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="275">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="275">% Create axes</command>
<command batch="275">axes1 = axes('Parent',figure1,...</command>
<command batch="275">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="275">'ZColor',[0 0 0],...</command>
<command batch="275">'YColor',[0 0 0],...</command>
<command batch="275">'XColor',[0 0 0],...</command>
<command batch="275">'GridAlpha',1,...</command>
<command batch="275">'GridColor',[0 0 0]);</command>
<command batch="275">box(axes1,'on');</command>
<command batch="275">grid(axes1,'on');</command>
<command batch="275">hold(axes1,'on');</command>
<command batch="275">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="275">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="275">% INITIALIZE BUFFERS</command>
<command batch="275">tmpObj1 = zeros(size(obj1));</command>
<command batch="275" execution_time="440">tmpObj2 = zeros(size(obj2));</command>
<command batch="276">for idx = 0:360</command>
<command batch="276">newRotationMatrix = rotz(idx);</command>
<command batch="276">for idx2 = 1:size(obj1,1)</command>
<command batch="276">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="276">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="276">end</command>
<command batch="276">% Create plot</command>
<command batch="276">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="276">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="276">figure1 = figure(1);</command>
<command batch="276">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="276">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="276">% Create axes</command>
<command batch="276">axes1 = axes('Parent',figure1,...</command>
<command batch="276">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="276">'ZColor',[0 0 0],...</command>
<command batch="276">'YColor',[0 0 0],...</command>
<command batch="276">'XColor',[0 0 0],...</command>
<command batch="276">'GridAlpha',1,...</command>
<command batch="276">'GridColor',[0 0 0]);</command>
<command batch="276">box(axes1,'on');</command>
<command batch="276">grid(axes1,'on');</command>
<command batch="276">hold(axes1,'on');</command>
<command batch="276">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="276">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="276">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="276">pause(.0001);</command>
<command batch="276">while idx ~= 360</command>
<command batch="276">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="276">xlabel('');</command>
<command batch="276">end</command>
<command batch="276">hold off;</command>
<command batch="276" execution_time="32545">end</command>
<command batch="277">figure1 = figure;</command>
<command batch="277">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="277">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="277">% Create axes</command>
<command batch="277">axes1 = axes('Parent',figure1,...</command>
<command batch="277">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="277">'ZColor',[0 0 0],...</command>
<command batch="277">'YColor',[0 0 0],...</command>
<command batch="277">'XColor',[0 0 0],...</command>
<command batch="277">'GridAlpha',1,...</command>
<command batch="277">'GridColor',[0 0 0]);</command>
<command batch="277">box(axes1,'on');</command>
<command batch="277">grid(axes1,'on');</command>
<command batch="277">hold(axes1,'on');</command>
<command batch="277">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="277" execution_time="250">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="278">% INITIALIZE BUFFERS</command>
<command batch="278">tmpObj1 = zeros(size(obj1));</command>
<command batch="278">tmpObj2 = zeros(size(obj2));</command>
<command batch="278">% UPDATE OBJECT</command>
<command batch="278">for idx = 0:360</command>
<command batch="278">newRotationMatrix = rotz(idx);</command>
<command batch="278">for idx2 = 1:size(obj1,1)</command>
<command batch="278">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="278">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="278">end</command>
<command batch="278">% Create plot</command>
<command batch="278">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="278">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="278">figure1 = figure(1);</command>
<command batch="278">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="278">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="278">% Create axes</command>
<command batch="278">axes1 = axes('Parent',figure1,...</command>
<command batch="278">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="278">'ZColor',[0 0 0],...</command>
<command batch="278">'YColor',[0 0 0],...</command>
<command batch="278">'XColor',[0 0 0],...</command>
<command batch="278">'GridAlpha',1,...</command>
<command batch="278">'GridColor',[0 0 0]);</command>
<command batch="278">box(axes1,'on');</command>
<command batch="278">grid(axes1,'on');</command>
<command batch="278">hold(axes1,'on');</command>
<command batch="278">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="278">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="278">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="278">pause(.0001);</command>
<command batch="278">while idx ~= 360</command>
<command batch="278">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="278">xlabel('');</command>
<command batch="278">end</command>
<command batch="278">hold off;</command>
<command batch="278" execution_time="32492">end</command>
</session>
<session>
<command time_stamp="1511085621b">%-- 11/16/2015 8:39 AM --%</command>
<command batch="279">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="279">load('innerMold.mat','model');</command>
<command batch="279">obj1 = model.data;</command>
<command batch="279">load('innerMold.mat','model');</command>
<command batch="279">obj2 = model.data;</command>
<command batch="279">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="279">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="279">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="279">figure1 = figure;</command>
<command batch="279">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="279">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="279">% Create axes</command>
<command batch="279">axes1 = axes('Parent',figure1,...</command>
<command batch="279">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="279">'ZColor',[0 0 0],...</command>
<command batch="279">'YColor',[0 0 0],...</command>
<command batch="279">'XColor',[0 0 0],...</command>
<command batch="279">'GridAlpha',1,...</command>
<command batch="279">'GridColor',[0 0 0]);</command>
<command batch="279">box(axes1,'on');</command>
<command batch="279">grid(axes1,'on');</command>
<command batch="279">hold(axes1,'on');</command>
<command batch="279">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="279" execution_time="2311">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="280" error="true">% INITIALIZE BUFFERS</command>
<command batch="280" error="true">tmpObj1 = zeros(size(obj1));</command>
<command batch="280" error="true">tmpObj2 = zeros(size(obj2));</command>
<command batch="280" error="true">% UPDATE OBJECT</command>
<command batch="280" error="true">for idx = 0:360</command>
<command batch="280" error="true">newRotationMatrix = rotz(idx);</command>
<command batch="280" error="true">for idx2 = 1:size(obj1,1)</command>
<command batch="280" error="true">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="280" error="true">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="280" error="true">end</command>
<command batch="280" error="true">% Create plot</command>
<command batch="280" error="true">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="280" error="true">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="280" error="true">figure1 = figure(1);</command>
<command batch="280" error="true">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="280" error="true">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="280" error="true">% Create axes</command>
<command batch="280" error="true">axes1 = axes('Parent',figure1,...</command>
<command batch="280" error="true">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="280" error="true">'ZColor',[0 0 0],...</command>
<command batch="280" error="true">'YColor',[0 0 0],...</command>
<command batch="280" error="true">'XColor',[0 0 0],...</command>
<command batch="280" error="true">'GridAlpha',1,...</command>
<command batch="280" error="true">'GridColor',[0 0 0]);</command>
<command batch="280" error="true">box(axes1,'on');</command>
<command batch="280" error="true">grid(axes1,'on');</command>
<command batch="280" error="true">hold(axes1,'on');</command>
<command batch="280" error="true">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="280" error="true">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="280" error="true">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="280" error="true">pause(.0001);</command>
<command batch="280" error="true">while idx ~= 360</command>
<command batch="280" error="true">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="280" error="true">xlabel('');</command>
<command batch="280" error="true">end</command>
<command batch="280" error="true">hold off;</command>
<command batch="280" error="true" execution_time="28284">end</command>
<command batch="281">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="281">load('innerMold.mat','model');</command>
<command batch="281">obj1 = model.data;</command>
<command batch="281">load('innerMold.mat','model');</command>
<command batch="281">obj2 = model.data;</command>
<command batch="281">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="281">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="281">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="281">figure1 = figure;</command>
<command batch="281">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="281">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="281">% Create axes</command>
<command batch="281">axes1 = axes('Parent',figure1,...</command>
<command batch="281">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="281">'ZColor',[0 0 0],...</command>
<command batch="281">'YColor',[0 0 0],...</command>
<command batch="281">'XColor',[0 0 0],...</command>
<command batch="281">'GridAlpha',1,...</command>
<command batch="281">'GridColor',[0 0 0]);</command>
<command batch="281">box(axes1,'on');</command>
<command batch="281">grid(axes1,'on');</command>
<command batch="281">hold(axes1,'on');</command>
<command batch="281">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="281">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="281">% INITIALIZE BUFFERS</command>
<command batch="281">tmpObj1 = zeros(size(obj1));</command>
<command batch="281" execution_time="390">tmpObj2 = zeros(size(obj2));</command>
<command batch="282" error="true">for idx = 0:360</command>
<command batch="282" error="true">newRotationMatrix = rotz(idx);</command>
<command batch="282" error="true">for idx2 = 1:size(obj1,1)</command>
<command batch="282" error="true">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="282" error="true">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="282" error="true">end</command>
<command batch="282" error="true">% Create plot</command>
<command batch="282" error="true">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="282" error="true">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="282" error="true">figure1 = figure(1);</command>
<command batch="282" error="true">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="282" error="true">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="282" error="true">% Create axes</command>
<command batch="282" error="true">axes1 = axes('Parent',figure1,...</command>
<command batch="282" error="true">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="282" error="true">'ZColor',[0 0 0],...</command>
<command batch="282" error="true">'YColor',[0 0 0],...</command>
<command batch="282" error="true">'XColor',[0 0 0],...</command>
<command batch="282" error="true">'GridAlpha',1,...</command>
<command batch="282" error="true">'GridColor',[0 0 0]);</command>
<command batch="282" error="true">box(axes1,'on');</command>
<command batch="282" error="true">grid(axes1,'on');</command>
<command batch="282" error="true">hold(axes1,'on');</command>
<command batch="282" error="true">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="282" error="true">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="282" error="true">%     xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="282" error="true">pause(.0001);</command>
<command batch="282" error="true">while idx ~= 360</command>
<command batch="282" error="true">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="282" error="true">xlabel('');</command>
<command batch="282" error="true">end</command>
<command batch="282" error="true">hold off;</command>
<command batch="282" error="true" execution_time="23141">end</command>
</session>
<session>
<command time_stamp="151108a7a6a">%-- 11/16/2015 8:44 AM --%</command>
<command batch="283">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="283">load('innerMold.mat','model');</command>
<command batch="283">obj1 = model.data;</command>
<command batch="283">load('innerMold.mat','model');</command>
<command batch="283">obj2 = model.data;</command>
<command batch="283">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="283">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="283">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="283">figure1 = figure;</command>
<command batch="283">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="283">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="283">% Create axes</command>
<command batch="283">axes1 = axes('Parent',figure1,...</command>
<command batch="283">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="283">'ZColor',[0 0 0],...</command>
<command batch="283">'YColor',[0 0 0],...</command>
<command batch="283">'XColor',[0 0 0],...</command>
<command batch="283">'GridAlpha',1,...</command>
<command batch="283">'GridColor',[0 0 0]);</command>
<command batch="283">box(axes1,'on');</command>
<command batch="283">grid(axes1,'on');</command>
<command batch="283">hold(axes1,'on');</command>
<command batch="283">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="283">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="283">% INITIALIZE BUFFERS</command>
<command batch="283">tmpObj1 = zeros(size(obj1));</command>
<command batch="283" execution_time="1232">tmpObj2 = zeros(size(obj2));</command>
<command execution_time="47">plot(obj1(:,1),obj1(:,3))</command>
<command batch="284">figure1 = figure;</command>
<command batch="284">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="284">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="284">% Create axes</command>
<command batch="284">axes1 = axes('Parent',figure1,...</command>
<command batch="284">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="284">'ZColor',[0 0 0],...</command>
<command batch="284">'YColor',[0 0 0],...</command>
<command batch="284">'XColor',[0 0 0],...</command>
<command batch="284">'GridAlpha',1,...</command>
<command batch="284">'GridColor',[0 0 0]);</command>
<command batch="284">box(axes1,'on');</command>
<command batch="284">grid(axes1,'on');</command>
<command batch="284">hold(axes1,'on');</command>
<command batch="284">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="284" execution_time="249">xlim([-50,50]); ylim([0 obj1(end,3) + 10]);</command>
<command execution_time="32">plot(axes1,obj1(:,1),obj1(:,3))</command>
<command execution_time="172">figure; plot(obj1(:,1),obj1(:,3))</command>
<command execution_time="31">R = rotz(360);</command>
<command error="true" execution_time="32">for idx = 1:size(obj1,1); tmpObj1(idx,:) = Obj1(idx,:) * R; end;</command>
<command execution_time="47">for idx = 1:size(obj1,1); tmpObj1(idx,:) = obj1(idx,:) * R; end;</command>
<command execution_time="16">plot(tmpObj1(:,1),tmpObj1(:,3))</command>
<command execution_time="16">R = rotz(45);</command>
<command execution_time="47">for idx = 1:size(obj1,1); tmpObj1(idx,:) = obj1(idx,:) * R; end;</command>
<command execution_time="16">plot(tmpObj1(:,1),tmpObj1(:,3))</command>
<command batch="285">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="285">load('innerMold.mat','model');</command>
<command batch="285">obj1 = model.data;</command>
<command batch="285">load('innerMold.mat','model');</command>
<command batch="285">obj2 = model.data;</command>
<command batch="285">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="285">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="285">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="285">figure1 = figure;</command>
<command batch="285">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="285">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="285">% Create axes</command>
<command batch="285">axes1 = axes('Parent',figure1,...</command>
<command batch="285">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="285">'ZColor',[0 0 0],...</command>
<command batch="285">'YColor',[0 0 0],...</command>
<command batch="285">'XColor',[0 0 0],...</command>
<command batch="285">'GridAlpha',1,...</command>
<command batch="285">'GridColor',[0 0 0]);</command>
<command batch="285">box(axes1,'on');</command>
<command batch="285">grid(axes1,'on');</command>
<command batch="285">hold(axes1,'on');</command>
<command batch="285">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="285">xlim([-80,80]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="285">% INITIALIZE BUFFERS</command>
<command batch="285">tmpObj1 = zeros(size(obj1));</command>
<command batch="285" execution_time="405">tmpObj2 = zeros(size(obj2));</command>
<command batch="286">for idx = 0:360</command>
<command batch="286">newRotationMatrix = rotz(idx);</command>
<command batch="286">for idx2 = 1:size(obj1,1)</command>
<command batch="286">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="286">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="286">end</command>
<command batch="286">% Create plot</command>
<command batch="286">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="286">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="286">figure1 = figure(1);</command>
<command batch="286">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="286">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="286">% Create axes</command>
<command batch="286">axes1 = axes('Parent',figure1,...</command>
<command batch="286">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="286">'ZColor',[0 0 0],...</command>
<command batch="286">'YColor',[0 0 0],...</command>
<command batch="286">'XColor',[0 0 0],...</command>
<command batch="286">'GridAlpha',1,...</command>
<command batch="286">'GridColor',[0 0 0]);</command>
<command batch="286">box(axes1,'on');</command>
<command batch="286">grid(axes1,'on');</command>
<command batch="286">hold(axes1,'on');</command>
<command batch="286">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="286">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="286">%     xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="286">pause(.0001);</command>
<command batch="286">while idx ~= 360</command>
<command batch="286">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="286">xlabel('');</command>
<command batch="286">end</command>
<command batch="286">hold off;</command>
<command batch="286" execution_time="10171">end</command>
<command batch="287" error="true">for idx = 0:360</command>
<command batch="287" error="true">newRotationMatrix = rotz(idx);</command>
<command batch="287" error="true">for idx2 = 1:size(obj1,1)</command>
<command batch="287" error="true">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="287" error="true">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="287" error="true">end</command>
<command batch="287" error="true">% Create plot</command>
<command batch="287" error="true">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="287" error="true">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="287" error="true">figure1 = figure(1);</command>
<command batch="287" error="true">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="287" error="true">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="287" error="true">% Create axes</command>
<command batch="287" error="true">axes1 = axes('Parent',figure1,...</command>
<command batch="287" error="true">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="287" error="true">'ZColor',[0 0 0],...</command>
<command batch="287" error="true">'YColor',[0 0 0],...</command>
<command batch="287" error="true">'XColor',[0 0 0],...</command>
<command batch="287" error="true">'GridAlpha',1,...</command>
<command batch="287" error="true">'GridColor',[0 0 0]);</command>
<command batch="287" error="true">box(axes1,'on');</command>
<command batch="287" error="true">grid(axes1,'on');</command>
<command batch="287" error="true">hold(axes1,'on');</command>
<command batch="287" error="true">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="287" error="true">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="287" error="true">%     xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="287" error="true">pause(.0001);</command>
<command batch="287" error="true">while idx ~= 360</command>
<command batch="287" error="true">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="287" error="true">xlabel('');</command>
<command batch="287" error="true">end</command>
<command batch="287" error="true">disp('scene updated');</command>
<command batch="287" error="true">hold off;</command>
<command batch="287" error="true" execution_time="13128">end</command>
<command batch="288">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="288">load('innerMold.mat','model');</command>
<command batch="288">obj1 = model.data;</command>
<command batch="288">load('innerMold.mat','model');</command>
<command batch="288">obj2 = model.data;</command>
<command batch="288">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="288">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="288">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="288">figure1 = figure;</command>
<command batch="288">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="288">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="288">% Create axes</command>
<command batch="288">axes1 = axes('Parent',figure1,...</command>
<command batch="288">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="288">'ZColor',[0 0 0],...</command>
<command batch="288">'YColor',[0 0 0],...</command>
<command batch="288">'XColor',[0 0 0],...</command>
<command batch="288">'GridAlpha',1,...</command>
<command batch="288">'GridColor',[0 0 0]);</command>
<command batch="288">box(axes1,'on');</command>
<command batch="288">grid(axes1,'on');</command>
<command batch="288">hold(axes1,'on');</command>
<command batch="288">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="288">xlim([-80,80]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="288">% INITIALIZE BUFFERS</command>
<command batch="288">tmpObj1 = zeros(size(obj1));</command>
<command batch="288" execution_time="390">tmpObj2 = zeros(size(obj2));</command>
<command batch="289">for idx = 0:360</command>
<command batch="289">newRotationMatrix = rotz(idx);</command>
<command batch="289">for idx2 = 1:size(obj1,1)</command>
<command batch="289">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="289">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="289">end</command>
<command batch="289">% Create plot</command>
<command batch="289">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="289">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="289">figure1 = figure(1);</command>
<command batch="289">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="289">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="289">% Create axes</command>
<command batch="289">axes1 = axes('Parent',figure1,...</command>
<command batch="289">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="289">'ZColor',[0 0 0],...</command>
<command batch="289">'YColor',[0 0 0],...</command>
<command batch="289">'XColor',[0 0 0],...</command>
<command batch="289">'GridAlpha',1,...</command>
<command batch="289">'GridColor',[0 0 0]);</command>
<command batch="289">box(axes1,'on');</command>
<command batch="289">grid(axes1,'on');</command>
<command batch="289">hold(axes1,'on');</command>
<command batch="289">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="289">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="289">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="289">pause(.0001);</command>
<command batch="289">%     while idx ~= 360</command>
<command batch="289">%         set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="289">%         xlabel('');</command>
<command batch="289">%     end</command>
<command batch="289">disp('scene updated');</command>
<command batch="289">hold off;</command>
<command batch="289" execution_time="118857">end</command>
<command batch="290">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="290">load('innerMold.mat','model');</command>
<command batch="290">obj1 = model.data;</command>
<command batch="290">load('innerMold.mat','model');</command>
<command batch="290">obj2 = model.data;</command>
<command batch="290">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="290">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="290">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="290">figure1 = figure;</command>
<command batch="290">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="290">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="290">% Create axes</command>
<command batch="290">axes1 = axes('Parent',figure1,...</command>
<command batch="290">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="290">'ZColor',[0 0 0],...</command>
<command batch="290">'YColor',[0 0 0],...</command>
<command batch="290">'XColor',[0 0 0],...</command>
<command batch="290">'GridAlpha',1,...</command>
<command batch="290">'GridColor',[0 0 0]);</command>
<command batch="290">box(axes1,'on');</command>
<command batch="290">grid(axes1,'on');</command>
<command batch="290">hold(axes1,'on');</command>
<command batch="290">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="290">xlim([-80,80]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="290">% INITIALIZE BUFFERS</command>
<command batch="290">tmpObj1 = zeros(size(obj1));</command>
<command batch="290" execution_time="406">tmpObj2 = zeros(size(obj2));</command>
<command batch="291">for idx = 0:360</command>
<command batch="291">newRotationMatrix = rotz(idx);</command>
<command batch="291">for idx2 = 1:size(obj1,1)</command>
<command batch="291">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="291">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="291">end</command>
<command batch="291">% Create plot</command>
<command batch="291">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="291">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="291">figure1 = figure(1);</command>
<command batch="291">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="291">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="291">% Create axes</command>
<command batch="291">axes1 = axes('Parent',figure1,...</command>
<command batch="291">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="291">'ZColor',[0 0 0],...</command>
<command batch="291">'YColor',[0 0 0],...</command>
<command batch="291">'XColor',[0 0 0],...</command>
<command batch="291">'GridAlpha',1,...</command>
<command batch="291">'GridColor',[0 0 0]);</command>
<command batch="291">box(axes1,'on');</command>
<command batch="291">grid(axes1,'on');</command>
<command batch="291">hold(axes1,'on');</command>
<command batch="291">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="291">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="291">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="291">pause(.0001);</command>
<command batch="291">%     while idx ~= 360</command>
<command batch="291">%         set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="291">%         xlabel('');</command>
<command batch="291">%     end</command>
<command batch="291">disp('scene updated');</command>
<command batch="291">hold off;</command>
<command batch="291" execution_time="113740">end</command>
<command batch="292">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="292">load('innerMold.mat','model');</command>
<command batch="292">obj1 = model.data;</command>
<command batch="292">load('innerMold.mat','model');</command>
<command batch="292">obj2 = model.data;</command>
<command batch="292">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="292">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="292">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="292">figure1 = figure;</command>
<command batch="292">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="292">% set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="292">% Create axes</command>
<command batch="292">axes1 = axes('Parent',figure1,...</command>
<command batch="292">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="292">'ZColor',[0 0 0],...</command>
<command batch="292">'YColor',[0 0 0],...</command>
<command batch="292">'XColor',[0 0 0],...</command>
<command batch="292">'GridAlpha',1,...</command>
<command batch="292">'GridColor',[0 0 0]);</command>
<command batch="292">box(axes1,'on');</command>
<command batch="292">grid(axes1,'on');</command>
<command batch="292">hold(axes1,'on');</command>
<command batch="292">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="292">xlim([-80,80]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="292">% INITIALIZE BUFFERS</command>
<command batch="292">tmpObj1 = zeros(size(obj1));</command>
<command batch="292" execution_time="390">tmpObj2 = zeros(size(obj2));</command>
<command batch="293">for idx = 0:360</command>
<command batch="293">newRotationMatrix = rotz(idx);</command>
<command batch="293">for idx2 = 1:size(obj1,1)</command>
<command batch="293">tmpObj1(idx2,:)  = obj1(idx2,:) * newRotationMatrix;</command>
<command batch="293">tmpObj2(idx2,:)  = obj2(idx2,:) * newRotationMatrix;</command>
<command batch="293">end</command>
<command batch="293">% Create plot</command>
<command batch="293">%     figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="293">%         [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="293">figure1 = figure(1);</command>
<command batch="293">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="293">%     set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="293">% Create axes</command>
<command batch="293">axes1 = axes('Parent',figure1,...</command>
<command batch="293">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="293">'ZColor',[0 0 0],...</command>
<command batch="293">'YColor',[0 0 0],...</command>
<command batch="293">'XColor',[0 0 0],...</command>
<command batch="293">'GridAlpha',1,...</command>
<command batch="293">'GridColor',[0 0 0]);</command>
<command batch="293">box(axes1,'on');</command>
<command batch="293">grid(axes1,'on');</command>
<command batch="293">hold(axes1,'on');</command>
<command batch="293">plot(axes1,tmpObj1(:,1),tmpObj1(:,3),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="293">plot(tmpObj2(:,1),tmpObj2(:,3),'color','r', 'LineWidth',2);</command>
<command batch="293">xlabel(['Angle: ' num2str(idx) char(176)]);</command>
<command batch="293">pause(.0001);</command>
<command batch="293">hold off;</command>
<command batch="293">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="293">xlabel('');</command>
<command batch="293">%     while idx ~= 360</command>
<command batch="293">%         set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="293">%         xlabel('');</command>
<command batch="293">%     end</command>
<command batch="293">disp('scene updated');</command>
<command batch="293" execution_time="96830">end</command>
<command execution_time="106186" repeat="2">assemblyTest</command>
<command execution_time="16">V = obj1(1:3,:)</command>
<command execution_time="16">newRotationMatrix</command>
<command execution_time="16">R = newRotationMatrix;</command>
<command execution_time="15">R</command>
<command execution_time="16">bsxfun(@times,R,V)</command>
<command execution_time="16">49.7004 - 15.3267 + 21.1262</command>
<command execution_time="47">V(1,:) * R</command>
<command execution_time="16">Vtmp = reshape(V,1,3,3)</command>
<command execution_time="31">size(Vtmp)</command>
<command execution_time="16">bsxfun(@times,R,Vtmp)</command>
<command execution_time="47">squeeze(ans)</command>
<command execution_time="15">sum(ans,2)</command>
<command execution_time="16">squeeze(ans)</command>
<command execution_time="15">V(1,:) * R</command>
<command error="true" execution_time="1356">assemblyTests</command>
<command error="true" execution_time="811" repeat="2">assemblyTest</command>
<command execution_time="31">size(obj1)</command>
<command batch="294">obj1 = reshape(obj1,1,3,size(obj1,1));</command>
<command batch="294" execution_time="31">obj2 = reshape(obj2,1,3,size(obj2,1));</command>
<command execution_time="43260" repeat="2">assemblyTest</command>
<command execution_time="15">size(tmpObj1)</command>
<command execution_time="32">plot(axes1,tmpObj1(1,:),tmpObj1(3,:),'color',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command execution_time="78">figure; plot(tmpObj1(1,:),tmpObj1(3,:))</command>
<command execution_time="16">tmpObj1(:,1:3)</command>
<command batch="295">clear all; close all;</command>
<command batch="295">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="295">load('innerMold.mat','model');</command>
<command batch="295">obj1 = model.data;</command>
<command batch="295">load('innerMold.mat','model');</command>
<command batch="295">obj2 = model.data;</command>
<command batch="295" execution_time="187">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command execution_time="16">obj1(1:3,:)</command>
<command error="true" execution_time="497">newRotationMatrix</command>
<command execution_time="16">idx = 360;</command>
<command execution_time="16">newRotationMatrix = rotz(idx);</command>
<command execution_time="16">newRotationMatrix</command>
<command execution_time="16">size(obj1)</command>
<command execution_time="15">V = obj1(1:3,:)</command>
<command execution_time="31">R = newRotationMatrix;</command>
<command execution_time="31">R</command>
<command execution_time="78">V*R</command>
<command execution_time="31">squeeze(sum(bsxfun(@times,R,V),2))</command>
<command execution_time="16">Vtmp = reshape(V,1,3,3)</command>
<command execution_time="31">squeeze(sum(bsxfun(@times,R,Vtmp),2))</command>
<command execution_time="43552">assemblyTest</command>
<command execution_time="16">size(tmpObj1)</command>
<command execution_time="32">size(obj1)</command>
<command execution_time="44534">assemblyTest</command>
<command execution_time="16">size(tmpObj1)</command>
<command batch="296">clear all; close all;</command>
<command batch="296">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="296">load('innerMold.mat','model');</command>
<command batch="296">obj1 = model.data;</command>
<command batch="296">load('innerMold.mat','model');</command>
<command batch="296">obj2 = model.data;</command>
<command batch="296">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="296">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="296">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="296">figure1 = figure;</command>
<command batch="296">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="296">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="296">% Create axes</command>
<command batch="296">axes1 = axes('Parent',figure1,...</command>
<command batch="296">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="296">'ZColor',[0 0 0],...</command>
<command batch="296">'YColor',[0 0 0],...</command>
<command batch="296">'XColor',[0 0 0],...</command>
<command batch="296">'GridAlpha',1,...</command>
<command batch="296">'GridColor',[0 0 0]);</command>
<command batch="296">box(axes1,'on');</command>
<command batch="296">grid(axes1,'on');</command>
<command batch="296">hold(axes1,'on');</command>
<command batch="296">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="296">xlim([-80,80]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="296">obj1 = reshape(obj1,1,3,size(obj1,1));</command>
<command batch="296" execution_time="936">obj2 = reshape(obj2,1,3,size(obj2,1));</command>
<command execution_time="16">size(obj1)</command>
<command execution_time="15">idx = 0;</command>
<command execution_time="15">newRotationMatrix = rotz(idx);</command>
<command execution_time="16">size(newRotationMatrix)</command>
<command execution_time="16">tmpObj1 = squeeze(sum(bsxfun(@times,newRotationMatrix,obj1),2));</command>
<command execution_time="16">size(tmpObj1)</command>
<command error="true" execution_time="31">V = obj1(1:3,:)</command>
<command batch="297" error="true">clear all; close all;</command>
<command batch="297" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="297" error="true">load('innerMold.mat','model');</command>
<command batch="297" error="true">obj1 = model.data;</command>
<command batch="297" error="true">load('innerMold.mat','model');</command>
<command batch="297" error="true">obj2 = model.data;</command>
<command batch="297" error="true" execution_time="219">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3)</command>
<command batch="298">clear all; close all;</command>
<command batch="298">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="298">load('innerMold.mat','model');</command>
<command batch="298">obj1 = model.data;</command>
<command batch="298">load('innerMold.mat','model');</command>
<command batch="298">obj2 = model.data;</command>
<command batch="298" execution_time="93">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command execution_time="16">size(obj1)</command>
<command execution_time="15">V = obj1(1:3,:)</command>
<command execution_time="15">Vtmp = reshape(V,1,3,3)</command>
<command execution_time="15">size(Vtmp)</command>
<command execution_time="31">V = obj1(1:5,:)</command>
<command execution_time="15">Vtmp = reshape(V,1,3,5)</command>
<command error="true" execution_time="744">newRotationMatrix = rotz(idx);</command>
<command execution_time="16">newRotationMatrix = rotz(0);</command>
<command execution_time="16">squeeze(sum(bsxfun(@times,newRotationMatrix,Vtmp)))</command>
<command execution_time="31">V</command>
<command execution_time="16">bsxfun(@times,newRotationMatrix,Vtmp)</command>
<command execution_time="31">bsxfun(@times,Vtmp,newRotationMatrix)</command>
<command execution_time="31">Vtmp</command>
<command execution_time="16">V</command>
<command error="true" execution_time="62">bsxfun(@times,newRotationMatrix,V)</command>
<command execution_time="15">size(V)</command>
<command execution_time="16">size(Vtmp)</command>
<command execution_time="16">size(newRotationMatrix)</command>
<command execution_time="31">bsxfun(@times,newRotationMatrix,Vtmp)</command>
<command execution_time="16">Vtmp = reshape(V,3,5)</command>
<command execution_time="16">V</command>
<command execution_time="16">V'</command>
<command error="true" execution_time="31">squeeze(sum(bsxfun(@times,newRotationMatrix,V')))</command>
<command error="true" execution_time="31">squeeze(sum(bsxfun(@times,newRotationMatrix,V'),2))</command>
<command execution_time="16">reshape(V',1,3,5)</command>
<command execution_time="15">squeeze(sum(bsxfun(@times,newRotationMatrix,ans),2))</command>
<command execution_time="16">V'</command>
<command batch="299">clear all; close all;</command>
<command batch="299">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="299">load('innerMold.mat','model');</command>
<command batch="299">obj1 = model.data;</command>
<command batch="299">load('innerMold.mat','model');</command>
<command batch="299">obj2 = model.data;</command>
<command batch="299">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="299">% figure1 = figure('Name','limbRevolution.CAD','Color',...</command>
<command batch="299">%     [0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="299">figure1 = figure;</command>
<command batch="299">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="299">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="299">% Create axes</command>
<command batch="299">axes1 = axes('Parent',figure1,...</command>
<command batch="299">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="299">'ZColor',[0 0 0],...</command>
<command batch="299">'YColor',[0 0 0],...</command>
<command batch="299">'XColor',[0 0 0],...</command>
<command batch="299">'GridAlpha',1,...</command>
<command batch="299">'GridColor',[0 0 0]);</command>
<command batch="299">box(axes1,'on');</command>
<command batch="299">grid(axes1,'on');</command>
<command batch="299">hold(axes1,'on');</command>
<command batch="299">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="299">xlim([-80,80]); ylim([0 obj1(end,3) + 10]);</command>
<command batch="299">obj1 = reshape(obj1',1,3,size(obj1,1));</command>
<command batch="299">obj2 = reshape(obj2',1,3,size(obj2,1));</command>
<command batch="299">% INITIALIZE BUFFERS</command>
<command batch="299">tmpObj1 = zeros(size(obj1));</command>
<command batch="299" execution_time="408">tmpObj2 = zeros(size(obj2));</command>
<command execution_time="31">size(obj1)</command>
<command batch="300">% INITIALIZE BUFFERS</command>
<command batch="300">tmpObj1 = zeros(3,size(obj1,3));</command>
<command batch="300" execution_time="31">tmpObj2 = zeros(3,size(obj2,3));</command>
<command execution_time="16">newRotationMatrix = rotz(0);</command>
<command batch="301">tmpObj1 = squeeze(sum(bsxfun(@times,newRotationMatrix,obj1),2));</command>
<command batch="301" execution_time="31">tmpObj2 = squeeze(sum(bsxfun(@times,newRotationMatrix,obj2),2));</command>
<command execution_time="31">plot(axes1,tmpObj1(1,:),tmpObj1(3,:))</command>
<command execution_time="104797">assemblyTest</command>
<command execution_time="109">profile viewer</command>
<command execution_time="13257" repeat="13">assemblyTest</command>
<command batch="302">clear all; close all;</command>
<command batch="302">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="302">load('innerMold.mat','model');</command>
<command batch="302">obj1 = model.data;</command>
<command batch="302">load('innerMold.mat','model');</command>
<command batch="302">obj2 = model.data;</command>
<command batch="302">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="302">ymax = obj1(end,3) + 10;</command>
<command batch="302">figure1 = figure;</command>
<command batch="302">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="302">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="302">% Create axes</command>
<command batch="302">axes1 = axes('Parent',figure1,...</command>
<command batch="302">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="302">'ZColor',[0 0 0],...</command>
<command batch="302">'YColor',[0 0 0],...</command>
<command batch="302">'XColor',[0 0 0],...</command>
<command batch="302">'GridAlpha',1,...</command>
<command batch="302">'GridColor',[0 0 0]);</command>
<command batch="302">box(axes1,'on');</command>
<command batch="302">grid(axes1,'on');</command>
<command batch="302">hold(axes1,'on');</command>
<command batch="302">set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="302">xlim([-100,100]); ylim([0 ymax]);</command>
<command batch="302">obj1 = reshape(obj1',1,3,size(obj1,1));</command>
<command batch="302">obj2 = reshape(obj2',1,3,size(obj2,1));</command>
<command batch="302">% INITIALIZE BUFFERS</command>
<command batch="302">tmpObj1 = zeros(3,size(obj1,3));</command>
<command batch="302" execution_time="1217">tmpObj2 = zeros(3,size(obj2,3));</command>
<command batch="303">clear all; close all;</command>
<command batch="303">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="303">load('innerMold.mat','model');</command>
<command batch="303">obj1 = model.data;</command>
<command batch="303">load('innerMold.mat','model');</command>
<command batch="303">obj2 = model.data;</command>
<command batch="303">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="303">ymax = obj1(end,3) + 10;</command>
<command batch="303">figure1 = figure;</command>
<command batch="303">set(figure1,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="303">set(figure1,'position', [2590 -98  637 877]);</command>
<command batch="303">% Create axes</command>
<command batch="303">axes1 = axes('Parent',figure1,...</command>
<command batch="303">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="303">'ZColor',[0 0 0],...</command>
<command batch="303">'YColor',[0 0 0],...</command>
<command batch="303">'XColor',[0 0 0],...</command>
<command batch="303">'GridAlpha',1,...</command>
<command batch="303">'GridColor',[0 0 0]);</command>
<command batch="303">box(axes1,'on');</command>
<command batch="303">grid(axes1,'on');</command>
<command batch="303">hold(axes1,'on');</command>
<command batch="303">% set(gca,'XTickLabel',''); set(gca,'YTickLabel','');</command>
<command batch="303">xlim([-100,100]); ylim([0 ymax]);</command>
<command batch="303">obj1 = reshape(obj1',1,3,size(obj1,1));</command>
<command batch="303">obj2 = reshape(obj2',1,3,size(obj2,1));</command>
<command batch="303">% INITIALIZE BUFFERS</command>
<command batch="303">tmpObj1 = zeros(3,size(obj1,3));</command>
<command batch="303" execution_time="485">tmpObj2 = zeros(3,size(obj2,3));</command>
<command execution_time="12893" repeat="3">assemblyTest</command>
<command execution_time="250">colormap(parula(8))</command>
<command execution_time="31">cmp = colormap(parula(8))</command>
<command execution_time="12776" repeat="2">assemblyTest</command>
<command execution_time="546">open assemblyTest</command>
<command execution_time="31">ymax</command>
<command error="true" execution_time="324">iniGL</command>
<command execution_time="359" repeat="8">initGL</command>
<command execution_time="16">size(object.data)</command>
<command execution_time="16">size(object.newRotationMatrix)</command>
<command execution_time="15">size(object.data)</command>
<command execution_time="31">size(object.newRotationMatrix)</command>
<command execution_time="234" repeat="2">initGL</command>
<command execution_time="16">object.newRotationMatrix</command>
<command error="true" execution_time="32">object.event</command>
<command error="true" execution_time="306">event</command>
<command execution_time="15" repeat="2">object</command>
<command execution_time="16">object.newX - object.lastMouseX</command>
<command execution_time="47">clear all</command>
<command execution_time="330" repeat="6">initGL</command>
<command execution_time="21">object</command>
<command execution_time="84">varArgIn</command>
<command execution_time="20">varArgIn.Key</command>
<command execution_time="21">whos ans</command>
<command execution_time="23">varArgIn.Source</command>
<command execution_time="20">varArgIn.Character</command>
<command execution_time="21">whos ans</command>
<command error="true" execution_time="358">if varArgnIn.Key == 'uparrow'; foo = 1; end</command>
<command execution_time="17">if varArgIn.Key == 'uparrow'; foo = 1; end</command>
<command execution_time="15">foo</command>
<command execution_time="297">initGL</command>
<command execution_time="15">object</command>
<command execution_time="15">strcmp(object.currentlyPressedKeys,'leftarrow')</command>
<command batch="304">if strcmp(object.currentlyPressedKeys,'uparrow');</command>
<command batch="304">object.x = 0.05;</command>
<command batch="304">elseif strcmp(object.currentlyPressedKeys,'downarrow');</command>
<command batch="304">object.x = -0.05;</command>
<command batch="304">elseif strcmp(object.currentlyPressedKeys,'rightarrow');</command>
<command batch="304">object.z = 0.05;</command>
<command batch="304">elseif strcmp(object.currentlyPressedKeys,'leftarrow');</command>
<command batch="304">object.z = -0.05;</command>
<command batch="304" execution_time="47">end</command>
<command execution_time="327">object</command>
<command execution_time="312" repeat="5">initGL</command>
<command execution_time="15">object.currentlyPressedKeys</command>
<command execution_time="16">xlim([-60,60]);</command>
<command execution_time="16">xlim([-100,100]);</command>
<command execution_time="15">xlim([-36,36]);</command>
<command execution_time="15">xlim([-100,100]);</command>
<command execution_time="328" repeat="3">initGL</command>
<command execution_time="31">[object.minX, object.maxX]</command>
<command execution_time="327">initGL</command>
<command execution_time="15">xlim([object.minX, object.maxX]);</command>
<command error="true" execution_time="47" repeat="5">initGL</command>
<command execution_time="47">clear all; close all;</command>
<command execution_time="312" repeat="2">initGL</command>
<command execution_time="15">xlim(object.axes1,[object.minX, object.maxX]);</command>
<command execution_time="32">ylim(object.axes1,[object.minY, object.maxY]);</command>
<command execution_time="16">xlim([object.minX, object.maxX]);</command>
<command execution_time="78">axis([-100 100 0 200])</command>
<command error="true" execution_time="296">iniGL</command>
<command execution_time="312">initGL</command>
<command execution_time="16">set(gca,'xlim',[-10,10])</command>
<command error="true" execution_time="15">set(gca,'axes',[-100, 100, 0, 200])</command>
<command execution_time="343" repeat="9">initGL</command>
<command execution_time="31">object.currentlyPressedKeys</command>
<command execution_time="327">initGL</command>
<command execution_time="31">object.currentlyPressedKeys</command>
<command execution_time="327" repeat="7">initGL</command>
<command batch="305">clear all; close all;</command>
<command batch="305">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="305">load('innerMold.mat','model');</command>
<command batch="305">obj1 = model.data;</command>
<command batch="305">load('innerMold.mat','model');</command>
<command batch="305">obj2 = model.data;</command>
<command batch="305">obj2 = cat(2,obj2(:,1:2).*.7,obj2(:,3));</command>
<command batch="305">ymax = obj1(end,3) + 10;</command>
<command batch="305">model.data = obj2;</command>
<command batch="305" execution_time="125">save('innerMold2.mat', 'model');</command>
<command error="true" execution_time="331">iniGL</command>
<command execution_time="375" repeat="5">initGL</command>
<command execution_time="328">open main</command>
<command execution_time="125" repeat="2">main</command>
<command execution_time="16">whos model</command>
<command execution_time="15" repeat="2">model</command>
<command execution_time="16">object.data = model.data;</command>
<command execution_time="15">whos object.data</command>
<command execution_time="16">size(object.data)</command>
<command error="true" execution_time="32">model.importAOP</command>
</session>
<session>
<command time_stamp="1511613fdec">%-- 11/17/2015 10:33 AM --%</command>
<command execution_time="2717">open templateLiner</command>
<command execution_time="359">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">axis equal</command>
<command batch="306">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="306">data = model.data;</command>
<command batch="306">point1 = model.guiExtendPoint1(3);</command>
<command batch="306">point2 = model.data(:,end);</command>
<command batch="306">zEnvelope = model.guiZEnvelope;</command>
<command batch="306">sliceHeights = model.sliceHeights; % unit</command>
<command batch="306">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="306">offset = model.guiMoldKeysOffSet;</command>
<command batch="306">numSlice = length(sliceHeights); % points</command>
<command batch="306">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="306">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="306">point1 = round(point1 / slicePerStep);</command>
<command batch="306">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="306">n = point2 - point1;</command>
<command batch="306">y = linspace(1,300,n);</command>
<command batch="306" execution_time="140">model.cirReduction = offset/log10(300)*log10(y);</command>
<command execution_time="15">idx = point1</command>
<command execution_time="16">idx2 = 1;</command>
<command batch="307">window = idx/slicePerStep*numSlicePoints+1:numSlicePoints*(idx/slicePerStep+1);</command>
<command batch="307" execution_time="31">window = window(angleIdx);</command>
<command error="true" execution_time="16">data(window,1:2) = data(window,1:2)+cirReduction(idx2);</command>
<command execution_time="16">window</command>
<command execution_time="16">angleIdx</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="15">numSlice</command>
<command execution_time="16">27540/90</command>
<command execution_time="16">numSlicePoints</command>
<command execution_time="31">numSlices = numSlice;</command>
<command error="true" execution_time="78">foo = reshape(model.data,numSlicePoints,numSlices);</command>
<command execution_time="32">numSlicePoints</command>
<command execution_time="16">numSlices</command>
<command execution_time="31">90*306</command>
<command error="true" execution_time="15">size(data.model)</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="16">foo = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command execution_time="16">foo(1,1:2,1)</command>
<command execution_time="16">model.data(1)</command>
<command execution_time="15">model.data(91)</command>
<command execution_time="30">point1</command>
<command batch="308" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="308" error="true" execution_time="1527">tmpData = tmpData(angleIdx,rountd(point1/slicePerStep):round(point2/slicePerStep),1:2) + model.cirReduction;</command>
<command batch="309" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="309" error="true" execution_time="47">tmpData = tmpData(angleIdx,round(point1/slicePerStep):round(point2/slicePerStep),1:2) + model.cirReduction;</command>
<command execution_time="32">size(model.cirReduction)</command>
<command batch="310" error="true">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="310" error="true">data = model.data;</command>
<command batch="310" error="true">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="310" error="true">point2 = model.data(:,end); % mm</command>
<command batch="310" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="310" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="310" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="310" error="true">offset = model.guiMoldKeysOffSet;</command>
<command batch="310" error="true">numSlices = length(sliceHeights); % points</command>
<command batch="310" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="310" error="true">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="310" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="310" error="true">point2 = round(zEnvelope / slicePerStep);</command>
<command batch="310" error="true">n = point2 - point1;</command>
<command batch="310" error="true">y = linspace(1,300,n);</command>
<command batch="310" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="310" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="310" error="true" execution_time="244">tmpData = tmpData(angleIdx,point1:point2,1:2) + model.cirReduction;</command>
<command error="true" execution_time="32">tmpData = tmpData(angleIdx,point1:point2,1:2) + model.cirReduction;</command>
<command execution_time="31">size(tmpData)</command>
<command execution_time="31">point1</command>
<command execution_time="32" repeat="2">point2</command>
<command execution_time="16">model.data(end,end)</command>
<command batch="311" error="true">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="311" error="true">data = model.data;</command>
<command batch="311" error="true">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="311" error="true">point2 = model.data(end,end); % mm</command>
<command batch="311" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="311" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="311" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="311" error="true">offset = model.guiMoldKeysOffSet;</command>
<command batch="311" error="true">numSlices = length(sliceHeights); % points</command>
<command batch="311" error="true">slicePerStep = mean(diff(sliceHeights)); % unit per step</command>
<command batch="311" error="true">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="311" error="true">point1 = round(point1 / slicePerStep);</command>
<command batch="311" error="true">point2 = round(point2 / slicePerStep);</command>
<command batch="311" error="true">n = point2 - point1;</command>
<command batch="311" error="true">y = linspace(1,300,n);</command>
<command batch="311" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="311" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="311" error="true" execution_time="213">tmpData = tmpData(angleIdx,point1:point2,1:2) + model.cirReduction;</command>
<command execution_time="15">point2</command>
<command execution_time="32">size(tmpData)</command>
<command execution_time="15">slicePerStep</command>
<command execution_time="15">plot(sliceHeights)</command>
<command execution_time="62">figure;</command>
<command execution_time="32">plot(sliceHeights)</command>
<command execution_time="15">(44.38-46.15)/(14-15)</command>
<command execution_time="32">plot(diff(sliceHeights))</command>
<command execution_time="15">point2/numSlices</command>
<command execution_time="31">point2/ans</command>
<command execution_time="15">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command execution_time="31">slicePerStep</command>
<command execution_time="15">model.data(end,end)</command>
<command execution_time="16">point2</command>
<command batch="312">data = model.data;</command>
<command batch="312">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="312">point2 = model.data(end,end); % mm</command>
<command batch="312">zEnvelope = model.guiZEnvelope;</command>
<command batch="312">sliceHeights = model.sliceHeights; % unit</command>
<command batch="312">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="312">offset = model.guiMoldKeysOffSet;</command>
<command batch="312">numSlices = length(sliceHeights); % points</command>
<command batch="312">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="312" execution_time="94">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command execution_time="16">point2</command>
<command batch="313">point1 = round(point1 / slicePerStep);</command>
<command batch="313" execution_time="15">point2 = round(point2 / slicePerStep);</command>
<command execution_time="16">point2</command>
<command execution_time="31">numSlices</command>
<command batch="314" error="true">point1 = round(point1 / slicePerStep); % step</command>
<command batch="314" error="true">point2 = round(point2 / slicePerStep); % step</command>
<command batch="314" error="true">n = point2 - point1;</command>
<command batch="314" error="true">y = linspace(1,300,n);</command>
<command batch="314" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="314" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="314" error="true" execution_time="109">tmpData = tmpData(angleIdx,point1:point2,1:2) + model.cirReduction;</command>
<command execution_time="31">point1</command>
<command execution_time="31">point2</command>
<command batch="315" error="true">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="315" error="true">data = model.data;</command>
<command batch="315" error="true">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="315" error="true">point2 = model.data(end,end); % mm</command>
<command batch="315" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="315" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="315" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="315" error="true">offset = model.guiMoldKeysOffSet;</command>
<command batch="315" error="true">numSlices = length(sliceHeights); % points</command>
<command batch="315" error="true">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="315" error="true">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="315" error="true">point1 = round(point1 / slicePerStep); % step</command>
<command batch="315" error="true">point2 = round(point2 / slicePerStep); % step</command>
<command batch="315" error="true">n = point2 - point1;</command>
<command batch="315" error="true">y = linspace(1,300,n);</command>
<command batch="315" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="315" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="315" error="true" execution_time="236">tmpData = tmpData(angleIdx,point1:point2,1:2) + model.cirReduction;</command>
<command execution_time="31">point2</command>
<command execution_time="31">point1</command>
<command execution_time="16">size(tmpData)</command>
<command execution_time="16">size(model.cirReduction)</command>
<command execution_time="15">306-116</command>
<command batch="316" error="true">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="316" error="true">data = model.data;</command>
<command batch="316" error="true">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="316" error="true">point2 = model.data(end,end); % mm</command>
<command batch="316" error="true">zEnvelope = model.guiZEnvelope;</command>
<command batch="316" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="316" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="316" error="true">offset = model.guiMoldKeysOffSet;</command>
<command batch="316" error="true">numSlices = length(sliceHeights); % points</command>
<command batch="316" error="true">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="316" error="true">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="316" error="true">point1 = round(point1 / slicePerStep); % step</command>
<command batch="316" error="true">point2 = round(point2 / slicePerStep); % step</command>
<command batch="316" error="true">n = point2 - point1;</command>
<command batch="316" error="true">y = linspace(1,300,n);</command>
<command batch="316" error="true">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="316" error="true">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="316" error="true">tmpData(angleIdx,point1:point2,1) = tmpData(angleIdx,point1:point2,1) + model.cirReduction;</command>
<command batch="316" error="true" execution_time="294">tmpData(angleIdx,point1:point2,2) = tmpData(angleIdx,point1:point2,2) + model.cirReduction;</command>
<command error="true" execution_time="31">size(tmpData(angleIdx,point1:point2,2)</command>
<command execution_time="31">size(tmpData(angleIdx,point1:point2,2))</command>
<command error="true" execution_time="16">foo = bsxfun(@sum,model.cirRecution',tmpData(angleIdx,point1:point2,2));</command>
<command error="true" execution_time="78">foo = bsxfun(@sum,model.cirReduction',tmpData(angleIdx,point1:point2,2));</command>
<command error="true" execution_time="31">foo = bsxfun(@sum,model.cirReduction,tmpData(angleIdx,point1:point2,2));</command>
<command error="true" execution_time="331">bsca(@sum,ones(1,10),ones(10,10))</command>
<command error="true" execution_time="47">bsxfun(@sum,ones(1,10),ones(10,10))</command>
<command error="true" execution_time="31">bsxfun(@sum,ones(1,10)',ones(10,10))</command>
<command error="true" execution_time="15">bsxfun(@sum,ones(10,1),ones(10,10))</command>
<command execution_time="47">bsxfun(@plus,ones(10,1),ones(10,10))</command>
<command error="true" execution_time="15">foo = bsxfun(@plus,model.cirReduction,tmpData(angleIdx,point1:point2,2));</command>
<command error="true" execution_time="15">foo = bsxfun(@plus,model.cirReduction',tmpData(angleIdx,point1:point2,2));</command>
<command execution_time="31">size(tmpData(angleIdx,point1:point2,2))</command>
<command execution_time="31">size(model.cirReduction)</command>
<command execution_time="15">foo = bsxfun(@plus,ones(1,191),tmpData(angleIdx,point1:point2,2));</command>
<command execution_time="16">tmpData(angleIdx,point1,2)</command>
<command error="true" execution_time="32">foo(angleIdx,point1,2)</command>
<command error="true" execution_time="276">foo(:,poin1,2)</command>
<command error="true" execution_time="16">foo(:,point1,2)</command>
<command execution_time="16">foo(:,point1)</command>
<command execution_time="31">foo = bsxfun(@plus,tmpData(angleIdx,point1:point2,2),ones(1,191));</command>
<command execution_time="15">foo(:,point1)</command>
<command execution_time="16">foo = bsxfun(@plus,tmpData(angleIdx,point1:point2,:),ones(1,191));</command>
<command execution_time="31">foo(:,point1,:)</command>
<command execution_time="15">tmpData(angleIdx,point1,:)</command>
<command execution_time="31">size(model.cirReduction)</command>
<command execution_time="31">size(tmpData(angleIdx,point1:point2,2))</command>
<command batch="317">data = model.data;</command>
<command batch="317">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="317">point2 = model.data(end,end); % mm</command>
<command batch="317">zEnvelope = model.guiZEnvelope;</command>
<command batch="317">sliceHeights = model.sliceHeights; % unit</command>
<command batch="317">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="317">offset = model.guiMoldKeysOffSet;</command>
<command batch="317">numSlices = length(sliceHeights); % points</command>
<command batch="317">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="317">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="317">point1 = round(point1 / slicePerStep); % step</command>
<command batch="317">point2 = round(point2 / slicePerStep); % step</command>
<command batch="317">n = point2 + 1 - point1;</command>
<command batch="317" execution_time="156">y = linspace(1,300,n);</command>
<command execution_time="15">size(y)</command>
<command batch="318">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="318">data = model.data;</command>
<command batch="318">point1 = model.guiExtendPoint1(3); % mm</command>
<command batch="318">point2 = model.data(end,end); % mm</command>
<command batch="318">zEnvelope = model.guiZEnvelope;</command>
<command batch="318">sliceHeights = model.sliceHeights; % unit</command>
<command batch="318">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="318">offset = model.guiMoldKeysOffSet;</command>
<command batch="318">numSlices = length(sliceHeights); % points</command>
<command batch="318">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="318">angleIdx = [1, round(numSlicePoints*.25),round(numSlicePoints*.75), numSlicePoints];</command>
<command batch="318">point1 = round(point1 / slicePerStep); % step</command>
<command batch="318">point2 = round(point2 / slicePerStep); % step</command>
<command batch="318">n = point2 + 1 - point1;</command>
<command batch="318">y = linspace(1,300,n);</command>
<command batch="318">model.cirReduction = offset/log10(300)*log10(y);</command>
<command batch="318">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command batch="318" execution_time="203">tmpData(angleIdx,point1:point2,1:2) = bsxfun(@plus,tmpData(angleIdx,point1:point2,1:2), model.cirReduction);</command>
<command error="true" execution_time="20">mean(tmpData(angleIdx(1),point1:point2,1) - model.cirReduction))</command>
<command execution_time="31">mean(tmpData(angleIdx(1),point1:point2,1) - model.cirReduction)</command>
<command execution_time="16">bsxfun(@plus,ones(5,5),ones(1,5))</command>
<command execution_time="49">bsxfun(@plus,rand(5,5),ones(1,5))</command>
<command execution_time="15">tmp = rand(5,5);</command>
<command execution_time="32">bsxfun(@plus,tmp,ones(1,5))</command>
<command execution_time="31">tmp</command>
<command execution_time="16">bsxfun(@plus,tmp,1:5)</command>
<command execution_time="32">foo = bsxfun(@plus,tmp,1:5);</command>
<command execution_time="16">foo(1,:) - 1:5</command>
<command execution_time="16">foo = (tmpData(angleIdx(1),point1:point2,1) - model.cirReduction);</command>
<command execution_time="31">mean(tmpData(angleIdx(1),point1:point2,1) - foo)</command>
<command execution_time="31">tmpData = reshape(model.data,numSlicePoints,numSlices,3);</command>
<command error="true" execution_time="31">mean(tmpData - foo)</command>
<command execution_time="31">mean(tmpData(angleIdx(1),point1:point2,1) - foo)</command>
<command batch="319">model.guiMoldKeysOffSet = 20; % mm</command>
<command batch="319">numSlices = length(model.sliceHeights); % points</command>
<command batch="319">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="319">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="319">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="319">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="319">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="319">n = point2 + 1 - point1;</command>
<command batch="319">y = linspace(1,300,n);</command>
<command batch="319">model.cirReduction = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="319">tmpData = reshape(model.data,model.numSlicePoints,numSlices,3);</command>
<command batch="319" execution_time="124">tmpData(angleIdx,point1:point2,1:2) = bsxfun(@plus,tmpData(angleIdx,point1:point2,1:2), model.cirReduction);</command>
<command execution_time="94">figure; plot(tmpData(:,3),tmpData(:,1))</command>
<command execution_time="15">foo = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command execution_time="94">figure; plot(foo(:,3),foo(:,1))</command>
<command execution_time="31">axis equal</command>
<command execution_time="31">mean(ones(10,10),2)</command>
<command execution_time="16">mean(ones(10,10),1)</command>
<command error="true" execution_time="31">bsxfun(@subtract,ones(5,5),[2 3 4])</command>
<command error="true" execution_time="32">bsxfun(@subtract,ones(3,3),[2 3 4])</command>
<command execution_time="47">bsxfun(@minus,ones(3,3),[2 3 4])</command>
<command execution_time="31">model.centroid</command>
<command execution_time="31">[V, E, F] = createIcosahedron;</command>
<command execution_time="15">V</command>
<command batch="320">V = [0        0         0;...</command>
<command batch="320">0.8507         0    0.5257;...</command>
<command batch="320">0.2629    0.8090    0.5257;...</command>
<command batch="320">-0.6882    0.5000    0.5257;...</command>
<command batch="320">-0.6882   -0.5000    0.5257;...</command>
<command batch="320">0.2629   -0.8090    0.5257;...</command>
<command batch="320">0.6882    0.5000    1.3764;...</command>
<command batch="320">-0.2629    0.8090    1.3764;...</command>
<command batch="320">-0.8507    0.0000    1.3764;...</command>
<command batch="320">-0.2629   -0.8090    1.3764;...</command>
<command batch="320">0.6882   -0.5000    1.3764;...</command>
<command batch="320" execution_time="94">0         0    1.9021];</command>
<command error="true" execution_time="301">v</command>
<command execution_time="16">V</command>
<command execution_time="31">E</command>
<command batch="321">E = [1     2;...</command>
<command batch="321">1     3;...</command>
<command batch="321">1     4;...</command>
<command batch="321">1     5;...</command>
<command batch="321">1     6;...</command>
<command batch="321">2     3;...</command>
<command batch="321">3     4;...</command>
<command batch="321">4     5;...</command>
<command batch="321">5     6;...</command>
<command batch="321">6     2;...</command>
<command batch="321">2     7;...</command>
<command batch="321">7     3;...</command>
<command batch="321">3     8;...</command>
<command batch="321">8     4;...</command>
<command batch="321">4     9;...</command>
<command batch="321">9     5;...</command>
<command batch="321">5    10;...</command>
<command batch="321">10     6;...</command>
<command batch="321">6    11;...</command>
<command batch="321">11     2;...</command>
<command batch="321">7     8;...</command>
<command batch="321">8     9;...</command>
<command batch="321">9    10;...</command>
<command batch="321">10    11;...</command>
<command batch="321">11     7;...</command>
<command batch="321">7    12;...</command>
<command batch="321">8    12;...</command>
<command batch="321">9    12;...</command>
<command batch="321">10    12;...</command>
<command batch="321" execution_time="225">11    12];</command>
<command execution_time="16">E</command>
<command execution_time="31">F</command>
<command execution_time="124">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="47">locR</command>
<command execution_time="47">[foo, foo1] = min(abs(tmpR-model.capSet(idx)))</command>
<command execution_time="15">size(tmpR)</command>
<command error="true" execution_time="275">bsxfun(@minus,one(3,10),ones(1,3))</command>
<command error="true" execution_time="15">bsxfun(@minus,ones(3,10),ones(1,3))</command>
<command execution_time="32">bsxfun(@minus,ones(3,10),ones(3,1))</command>
<command execution_time="15">bsxfun(@minus,ones(3,10),[1:3]')</command>
<command execution_time="15">size(model.data)</command>
<command error="true" execution_time="244">foo = reshape(model.data,numSliceHeights,3,model.numSlices);</command>
<command execution_time="15">model</command>
<command error="true" execution_time="16">foo = reshape(model.data,model.numSlicePoints,3,length(model.numSlicePoints));</command>
<command execution_time="15">foo = reshape(model.data,model.numSlicePoints,3,109);</command>
<command execution_time="15">size(foo)</command>
<command execution_time="15">foo = reshape(model.data,model.numSlicePoints,109,3);</command>
<command execution_time="31">size(foo)</command>
<command execution_time="94">figure; plot(foo(1,:,1))</command>
<command execution_time="46">axis equal</command>
<command execution_time="156">model</command>
<command execution_time="16">size(foo)</command>
<command execution_time="20">tmp = sum(foo(:,:,1:2).^2,2);</command>
<command execution_time="20">size(tmp)</command>
<command execution_time="15">tmp = sum(foo(:,:,1:2).^2,3);</command>
<command execution_time="16">size(tmp)</command>
<command execution_time="16">tmp2 = mean(ans,1);</command>
<command execution_time="33">size(tmp2)</command>
<command execution_time="15">tmp2</command>
<command execution_time="16">tmp2 = mean(tmp,1);</command>
<command execution_time="16">size(tmp2)</command>
<command batch="322">for idx = 0:numSliceHeights-1</command>
<command batch="322">tmpR(idx+1) = ...</command>
<command batch="322">mean(sqrt(sum(model.data(idx*model.numSlicePoints+1:model.numSlicePoints*(idx+1),1:2).^2,2)));</command>
<command batch="322" execution_time="47">end</command>
<command batch="323">tmpR1 = reshape(model.data,model.numSlicePoints,numSliceHeights,3);</command>
<command batch="323" execution_time="31">tmpR1 = mean(sqrt(sum(tmpR1(:,:,1:2).^2)));</command>
<command error="true" execution_time="31">mean(tmpR-tmpR1)</command>
<command execution_time="16">size(tmpR)</command>
<command execution_time="31">size(tmpR1)</command>
<command batch="324">tmpR1 = reshape(model.data,model.numSlicePoints,numSliceHeights,3);</command>
<command batch="324" execution_time="15">tmpR1 = mean(sqrt(sum(tmpR1(:,:,1:2).^2)),1);</command>
<command execution_time="15">size(tmpR1)</command>
<command execution_time="31">tmpR1 = reshape(model.data,model.numSlicePoints,numSliceHeights,3);</command>
<command execution_time="32">size(tmpR1)</command>
<command error="true" execution_time="62">tmpR1 = mean(sqrt(sum(tmpR1(:,:,1:2).^2),3),1);</command>
<command execution_time="16">tmpR1 = mean(sqrt(sum(tmpR1(:,:,1:2).^2,3)),1);</command>
<command execution_time="16">mean(tmpR-tmpR1)</command>
<command batch="325">data = model.data;</command>
<command batch="325">numSlicePoints = model.numSlicePoints;</command>
<command batch="325">sliceHeights = model.sliceHeights;</command>
<command batch="325">numSliceHeights = size(sliceHeights,1);</command>
<command batch="325">tmp = floor(max(sliceHeights/50));</command>
<command batch="325">step = tmp/numSliceHeights;</command>
<command batch="325" execution_time="62">cirReduction = 1-((step:step:tmp)/100);</command>
<command execution_time="31">plot(cirReduction)</command>
<command execution_time="16">cirReduction</command>
<command execution_time="15">step</command>
<command execution_time="16">tmp</command>
<command execution_time="16">size(data)</command>
<command execution_time="16">numSlicePoints</command>
<command execution_time="15">sliceHeights</command>
<command execution_time="16">numSliceHeights</command>
<command execution_time="15">size(sliceHeights)</command>
<command batch="326">data = model.data;</command>
<command batch="326">numSlicePoints = model.numSlicePoints;</command>
<command batch="326">sliceHeights = model.sliceHeights;</command>
<command batch="326">numSliceHeights = length(sliceHeights);</command>
<command batch="326">tmp = floor(max(sliceHeights/50));</command>
<command batch="326">step = tmp/numSliceHeights;</command>
<command batch="326" execution_time="78">cirReduction = 1-((step:step:tmp)/100);</command>
<command execution_time="16">plot(cirReduction)</command>
<command execution_time="16">tmp = 0:50:floor(max(model.sliceHeights/50));</command>
<command execution_time="16">tmp</command>
<command execution_time="31">model.sliceHeights/50</command>
<command error="true" execution_time="31">max(model.sliceheights)</command>
<command execution_time="20">max(model.sliceHeights)</command>
<command execution_time="16">tmp = 0:50:floor(max(model.sliceHeights));</command>
<command execution_time="32">plot(tmp)</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="31">0:length(tmp)</command>
<command batch="327" error="true">numSliceHeights = length(model.sliceHeights);</command>
<command batch="327" error="true">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="327" error="true">model.guiPerRed = 1-(0:length(tmp));</command>
<command batch="327" error="true" execution_time="900">model.guiPerRed = interp(model.guiPerRed,numSliceHeights);</command>
<command batch="328" error="true">numSliceHeights = length(model.sliceHeights);</command>
<command batch="328" error="true">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="328" error="true">model.guiPerRed = 1-(0:length(tmp));</command>
<command batch="328" error="true" execution_time="296">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="31">size(model.guiLandMarks)</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command batch="329" error="true">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="329" error="true">model.guiPerRed = 1-(0:length(tmp-1));</command>
<command batch="329" error="true" execution_time="47">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command batch="330">numSliceHeights = length(model.sliceHeights);</command>
<command batch="330">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="330">model.guiPerRed = 1-(0:length(tmp)-1);</command>
<command batch="330" execution_time="203">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="31">model.guiPerRed</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="31">model.guiLandMarks</command>
<command execution_time="16">model.guiPerRed</command>
<command execution_time="31">length(tmp)</command>
<command execution_time="15">model.guiPerRed = 1-(0:length(tmp)-1);</command>
<command execution_time="16">model.guiPerRed</command>
<command batch="331">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="331" execution_time="31">model.guiPerRed = 1-((0:length(tmp)-1)/(length(tmp)-1));</command>
<command execution_time="31">model.guiPerRed</command>
<command batch="332">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="332">model.guiPerRed = 1;</command>
<command batch="332">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="332">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .1;</command>
<command batch="332" execution_time="47">end</command>
<command execution_time="31">plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="333">numSliceHeights = length(model.sliceHeights);</command>
<command batch="333">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="333">model.guiPerRed = 1;</command>
<command batch="333">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="333">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="333" execution_time="63">end</command>
<command execution_time="31">plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="334">tmp = floor(max(model.sliceHeights/50));</command>
<command batch="334">step = tmp/numSliceHeights;</command>
<command batch="334" execution_time="47">cirReduction = 1-((step:step:tmp)/100);</command>
<command execution_time="93">figure; plot(cirReduction)</command>
<command error="true" execution_time="575">size(cirRecution)</command>
<command execution_time="16">size(cirReduction)</command>
<command execution_time="15">numSliceHeights</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command batch="335" error="true">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="335" error="true">model.guiPerRed = 1;</command>
<command batch="335" error="true">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="335" error="true">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="335" error="true">end</command>
<command batch="335" error="true" execution_time="541">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeigh</command>
<command error="true" execution_time="425">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeigh)</command>
<command batch="336">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="336">model.guiPerRed = 1;</command>
<command batch="336">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="336">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="336">end</command>
<command batch="336" execution_time="47">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="15">size(model.guiPerRed)</command>
<command execution_time="31">tmp</command>
<command execution_time="31">4/100</command>
<command batch="337">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="337">model.guiPerRed = 1;</command>
<command batch="337">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="337">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="337" execution_time="63">end</command>
<command execution_time="16">plot(model.guiPerRed)</command>
<command execution_time="32">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="16">plot(model.guiPerRed)</command>
<command execution_time="15">plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="338">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="338">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="338" execution_time="31">end</command>
<command error="true" execution_time="32">plot(model.landMarks,model.perRed)</command>
<command execution_time="15">plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="339">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="339">model.guiPerRed = 1;</command>
<command batch="339">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="339">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="339" execution_time="31">end</command>
<command execution_time="31">plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="15">numSliceHeights</command>
<command execution_time="32">sliceHeights</command>
<command execution_time="31">model.guiLandMarks</command>
<command execution_time="31">model.guiLandMarks = linspace(0,floor(max(model.sliceHeights)),50)</command>
<command execution_time="31">model.guiLandMarks</command>
<command execution_time="16">diff(model.guiLandMarks)</command>
<command execution_time="141">close all</command>
<command execution_time="109">figure; plot(model.guiPerRed)</command>
<command execution_time="32">size(model.guiPerRed)</command>
<command batch="340">numSliceHeights = length(model.sliceHeights);</command>
<command batch="340">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="340">model.guiPerRed = 1;</command>
<command batch="340">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="340">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="340">end</command>
<command batch="340">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiLandMarks)) * max(model.sliceHeights));</command>
<command batch="340">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command batch="340" execution_time="94">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="341">numSliceHeights = length(model.sliceHeights);</command>
<command batch="341">model.guiLandMarks = 0:50:floor(max(model.sliceHeights));</command>
<command batch="341">model.guiPerRed = 1;</command>
<command batch="341">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="341">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="341">end</command>
<command batch="341">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiLandMarks)) * max(model.sliceHeights));</command>
<command batch="341" execution_time="94">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="31">mean(diff(model.guiLandMarks))</command>
<command batch="342">numSliceHeights = length(model.sliceHeights);</command>
<command batch="342">dx = 50;</command>
<command batch="342">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="342">model.guiPerRed = 1;</command>
<command batch="342">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="342">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="342">end</command>
<command batch="342">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiLandMarks))/dx * max(model.sliceHeights));</command>
<command batch="342">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command batch="342" execution_time="93">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="343">numSliceHeights = length(model.sliceHeights);</command>
<command batch="343">dx = 50;</command>
<command batch="343">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="343">model.guiPerRed = 1;</command>
<command batch="343">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="343">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="343">end</command>
<command batch="343">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiLandMarks))/dx * max(model.sliceHeights));</command>
<command batch="343" execution_time="93">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="15">mean(diff(model.guiLandMarks))/dx</command>
<command error="true" execution_time="15">mean(diff(model.guiLandMarks))/dx * max(model.sliceHeights</command>
<command execution_time="46">mean(diff(model.guiLandMarks))/dx * max(model.sliceHeights)</command>
<command execution_time="15">max(model.sliceHeights)</command>
<command batch="344">numSliceHeights = length(model.sliceHeights);</command>
<command batch="344">dx = 50;</command>
<command batch="344">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="344">model.guiPerRed = 1;</command>
<command batch="344">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="344">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="344">end</command>
<command batch="344">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed))/dx * max(model.sliceHeights));</command>
<command batch="344">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command batch="344" execution_time="78">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="345">numSliceHeights = length(model.sliceHeights);</command>
<command batch="345">dx = 50;</command>
<command batch="345">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="345">model.guiPerRed = 1;</command>
<command batch="345">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="345">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="345">end</command>
<command batch="345">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed))/dx * max(model.sliceHeights));</command>
<command batch="345" execution_time="78">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command execution_time="94">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command batch="346">numSliceHeights = length(model.sliceHeights);</command>
<command batch="346">dx = 50;</command>
<command batch="346">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="346">model.guiPerRed = 1;</command>
<command batch="346">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="346">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="346">end</command>
<command batch="346">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed)) * max(model.sliceHeights));</command>
<command batch="346" execution_time="109">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command execution_time="109">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="31">mean(diff(model.guiPerRed))</command>
<command execution_time="31">1 + ans</command>
<command execution_time="110">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="15">(1-0.99) / (0-50)</command>
<command execution_time="31">(0.99-1) / (50-0)</command>
<command execution_time="16">mean(diff(model.guiPerRed))/50</command>
<command execution_time="15">.99-1</command>
<command execution_time="16">model.guiPerRed(1) - model.guiPerRed(2)</command>
<command execution_time="15">ans/50</command>
<command execution_time="16">diff(model.guiPerRed)</command>
<command execution_time="16">mean(ans)</command>
<command execution_time="16">model.guiPerRed = []</command>
<command execution_time="16">model.guiLandMarks = [];</command>
<command batch="347">numSliceHeights = length(model.sliceHeights);</command>
<command batch="347">dx = 50;</command>
<command batch="347">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="347">model.guiPerRed = 1;</command>
<command batch="347">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="347">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="347">end</command>
<command batch="347">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed)) * max(model.sliceHeights) + 1);</command>
<command batch="347" execution_time="78">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command execution_time="78">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="16">mean(diff(model.guiPerRed(1:end-1)))</command>
<command execution_time="31">ans / 50</command>
<command execution_time="16">ans * max(model.sliceHeights)</command>
<command execution_time="31">ans + 1</command>
<command execution_time="15">mean(diff(model.guiPerRed)) * max(model.sliceHeights) + 1</command>
<command execution_time="15">mean(diff(model.guiPerRed(1:end-1))) * max(model.sliceHeights) + 1</command>
<command execution_time="31">(mean(diff(model.guiPerRed(1:end-1))) * max(model.sliceHeights)) + 1</command>
<command execution_time="15">mean(diff(model.guiPerRed(1:end-1)))</command>
<command execution_time="31">ans * max(model.sliceHeights)</command>
<command execution_time="15">max(model.sliceHeights)</command>
<command execution_time="31">-0</command>
<command execution_time="31">-0.01 /50</command>
<command execution_time="16">mean(diff(model.guiPerRed))/dx</command>
<command execution_time="16">dx</command>
<command execution_time="16">mean(diff(model.guiPerRed))</command>
<command execution_time="31">mean(diff(model.guiPerRed(1:end-1)))/dx</command>
<command execution_time="31">model.guiLandMarks = [];</command>
<command execution_time="31">model.guiPerRed = []</command>
<command batch="348">numSliceHeights = length(model.sliceHeights);</command>
<command batch="348">dx = 50;</command>
<command batch="348">model.guiLandMarks = 0:dx:floor(max(model.sliceHeights));</command>
<command batch="348">model.guiPerRed = 1;</command>
<command batch="348">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="348">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="348">end</command>
<command batch="348">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed))/dx * max(model.sliceHeights) + 1);</command>
<command batch="348" execution_time="94">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command execution_time="96">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="15">size(model.guiPerRed)</command>
<command execution_time="31">size(model.guiLandMarks)</command>
<command execution_time="16">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,numSliceHeights);</command>
<command execution_time="78">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command execution_time="16">size(model.guiLandMarks)</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="15">model.guiPerRed</command>
<command execution_time="31">numSliceHeights</command>
<command error="true" execution_time="47">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,model.sliceHeights);</command>
<command execution_time="15">model.guiLandMarks(1)</command>
<command execution_time="31">model.guiLandMarks(end)</command>
<command execution_time="31">model.sliceHeights(1)</command>
<command batch="349">numSliceHeights = length(model.sliceHeights);</command>
<command batch="349">dx = 50;</command>
<command batch="349">model.guiLandMarks = model.sliceHeights(1):dx:floor(max(model.sliceHeights));</command>
<command batch="349">model.guiPerRed = 1;</command>
<command batch="349">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="349">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="349">end</command>
<command batch="349">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed))/dx * max(model.sliceHeights) + 1);</command>
<command batch="349">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command batch="349" execution_time="93">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,model.sliceHeights);</command>
<command error="true" execution_time="171">figure; plot(model.guiLandMarks,model.guiPerRed)</command>
<command error="true" execution_time="94">figure; plot(model.sliceHeight,model.guiPerRed)</command>
<command execution_time="109">figure; plot(model.sliceHeights,model.guiPerRed)</command>
<command error="true" execution_time="47">bsxfun(@prod,ones(5,5),ones(1,5))</command>
<command execution_time="31">bsxfun(@plus,ones(5,5),ones(1,5))</command>
<command error="true" execution_time="31">bsxfun(@mult,ones(5,5),ones(1,5))</command>
<command error="true" execution_time="31">bsxfun(@div,ones(5,5),ones(1,5))</command>
<command error="true" execution_time="31">bsxfun(@prod,ones(5,5),ones(1,5))</command>
<command error="true" execution_time="343">prod(one(3,3),1:3),2)</command>
<command error="true" execution_time="371">prod(one(3,3),1:3,2)</command>
<command error="true" execution_time="31">prod(ones(3,3),1:3,2)</command>
<command batch="350">numSlices = length(model.sliceHeights);</command>
<command batch="350">model.dxLandMark = 50;</command>
<command batch="350">model.guiLandMarks = model.sliceHeights(1):dx:floor(max(model.sliceHeights));</command>
<command batch="350">model.guiPerRed = 1;</command>
<command batch="350">for idx = 1:length(model.guiLandMarks)-1</command>
<command batch="350">model.guiPerRed(idx+1) = model.guiPerRed(idx) - .01;</command>
<command batch="350">end</command>
<command batch="350">model.guiPerRed = cat(2, model.guiPerRed, mean(diff(model.guiPerRed))...</command>
<command batch="350">/model.dxLandMark * max(model.sliceHeights) + 1);</command>
<command batch="350">model.guiLandMarks = cat(2, model.guiLandMarks, max(model.sliceHeights));</command>
<command batch="350">model.guiPerRed = interpn(model.guiLandMarks,model.guiPerRed,model.sliceHeights);</command>
<command batch="350">for idx = 0:numSlices-1</command>
<command batch="350">model.data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2) = ...</command>
<command batch="350">model.data(idx*numSlicePoints+1:numSlicePoints*(idx+1),1:2).*cirReduction(idx+1);</command>
<command batch="350" execution_time="125">end</command>
<command execution_time="16">model.numSlicePoints</command>
<command batch="351" error="true">for idx = 0:numSlices-1</command>
<command batch="351" error="true">model.data(idx*model.numSlicePoints+1:model.numSlicePoints*(idx+1),1:2) = ...</command>
<command batch="351" error="true">model.data(idx*model.numSlicePoints+1:model.numSlicePoints*(idx+1),1:2).*cirReduction(idx+1);</command>
<command batch="351" error="true" execution_time="125">end</command>
<command batch="352">for idx = 0:numSlices-1</command>
<command batch="352">model.data(idx*model.numSlicePoints+1:model.numSlicePoints*(idx+1),1:2) = ...</command>
<command batch="352">model.data(idx*model.numSlicePoints+1:model.numSlicePoints*(idx+1),1:2).*model.guiPerRed(idx+1);</command>
<command batch="352" execution_time="47">end</command>
<command error="true" execution_time="1893">mean(model.guiPerRed - (model.data/test))</command>
<command error="true" execution_time="94">foo = model.data(:,1)-test;</command>
<command error="true" execution_time="125">foo = model.data(:,1)/test;</command>
<command execution_time="889">foo = model.data(:,1)/test(:,1);</command>
<command execution_time="15">foo(1)</command>
<command execution_time="16">foo(91)</command>
<command execution_time="6275">figure; plot(foo)</command>
</session>
<session>
<command time_stamp="1511793777d">%-- 11/17/2015 5:31 PM --%</command>
<command execution_time="1170">foo = model.data(:,1)/test(:,1);</command>
<command execution_time="16">foo(1)</command>
<command execution_time="16">foo(91)</command>
<command execution_time="6771">figure; plot(foo)</command>
</session>
<session>
<command time_stamp="15117a0f13c">%-- 11/17/2015 5:46 PM --%</command>
<command execution_time="141">figure;</command>
<command execution_time="390">plot(1:10)</command>
<command execution_time="1201">foo = model.data/test;</command>
<command execution_time="15">foo(end)</command>
<command execution_time="31">foo(100)</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="15">model.data(end,end)</command>
<command execution_time="63">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">figure; plot(foo(:,3),foo(:,1))</command>
<command execution_time="78">figure; plot(test(:,3),test(:,1))</command>
<command execution_time="16">59.13/59.4</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command execution_time="78">figure; plot(model.sliceHeights,model.guiPerRed)</command>
<command execution_time="718">open main</command>
<command execution_time="749">main</command>
<command execution_time="78">figure</command>
<command execution_time="125">h = figure</command>
<command execution_time="31">get(h,'position')</command>
<command execution_time="78" repeat="2">figure; plot(model.data(:,1))</command>
<command error="true" execution_time="62">message('hello')</command>
<command execution_time="187">msgbox('hello')</command>
<command execution_time="1872" repeat="2">questdlg('hello')</command>
<command execution_time="561">foo = imgaussfilt(ones(50,50));</command>
<command execution_time="125">figure; imagesc(foo)</command>
<command execution_time="46">foo = imgaussfilt(rand(50,50));</command>
<command execution_time="78">figure; imagesc(foo)</command>
<command execution_time="15">test = rand(50,50);</command>
<command execution_time="78">figure; imagesc(test)</command>
<command execution_time="78">figure; imagesc(imgaussfilt(test))</command>
<command execution_time="110">figure; imagesc(keys)</command>
<command error="true" execution_time="94">figure; imagessc(keys)</command>
<command execution_time="78">figure; imagesc(keys)</command>
<command execution_time="62">keys = imgaussfilt(keys,2);</command>
<command execution_time="78">figure; imagesc(keys)</command>
<command execution_time="93" repeat="3">figure; plot(model.data(:,1))</command>
<command execution_time="78">axis equal</command>
<command execution_time="78">figure; plot(model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">axis equal</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">axis equal</command>
<command execution_time="187">main</command>
<command execution_time="16">whos model</command>
<command execution_time="15">model</command>
<command error="true" execution_time="372">theta*90</command>
<command execution_time="16">4*90</command>
<command execution_time="31">length(4:360)</command>
<command execution_time="16">length(4:4:360)</command>
<command error="true" execution_time="47">bsxfun(@prod,ones(5,5),1:5)</command>
<command error="true" execution_time="32">foo = bsxfun(@prod,ones(5,5),1:5);</command>
<command execution_time="15">foo = bsxfun(@times,ones(5,5),1:5);</command>
<command execution_time="15">foo</command>
<command batch="353" error="true">sinTheta = cosd(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="353" error="true">cosTheta = sind(0:model.angelStep:model.angleStep*numSlices);</command>
<command batch="353" error="true">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2),cosTheta(point1:point2));</command>
<command batch="353" error="true">tmpData(:,point2:point2,2) = bsxfun(@times,tmpData(:,point1:point2),sinTheta(point2:point2));</command>
<command batch="353" error="true" execution_time="390">model.data = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command execution_time="16">model</command>
<command execution_time="16" repeat="3">model.angleStep</command>
<command batch="354" error="true">sinTheta = cosd(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="354" error="true">cosTheta = sind(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="354" error="true">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2),cosTheta(point1:point2));</command>
<command batch="354" error="true">tmpData(:,point2:point2,2) = bsxfun(@times,tmpData(:,point1:point2),sinTheta(point2:point2));</command>
<command batch="354" error="true" execution_time="93">model.data = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command batch="355">sinTheta = cosd(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="355" execution_time="16">cosTheta = sind(0:model.angleStep:model.angleStep*numSlices);</command>
<command execution_time="15">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2),cosTheta(point1:point2));</command>
<command error="true" execution_time="31">tmpData(:,point2:point2,2) = bsxfun(@times,tmpData(:,point1:point2),sinTheta(point2:point2));</command>
<command error="true" execution_time="31">tmpData(:,point2:point2,2) = bsxfun(@times,tmpData(:,point1:point2),sinTheta(point1:point2));</command>
<command execution_time="16">tmpData(:,point1:point2,2) = bsxfun(@times,tmpData(:,point1:point2),sinTheta(point1:point2));</command>
<command execution_time="15">model.data = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command execution_time="93">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="356" error="true">% MAKE KEYS</command>
<command batch="356" error="true">keys = ones(model.numSlicePoints,length(point1:point2));</command>
<command batch="356" error="true">keys(angleIdx,:) = bsxfun(@plus,keys(angleIdx,:), model.cirReduction);</command>
<command batch="356" error="true">test = keys;</command>
<command batch="356" error="true">keys = imgaussfilt(keys,.5);</command>
<command batch="356" error="true">% APPLY KEYS TO MODEL</command>
<command batch="356" error="true">tmpData = reshape(model.data,model.numSlicePoints,numSlices,3);</command>
<command batch="356" error="true">% COMPUTE MAGNITUDE</command>
<command batch="356" error="true">tmpData(:,point1:point2,1:2) = sqrt(sum(tmpData(:,point1:point2,1:2).^2,3));</command>
<command batch="356" error="true">tmpData(:,point1:point2,1:2) = bsxfun(@plus,tmpData(:,point1:point2,1:2), model.cirReduction);</command>
<command batch="356" error="true">% COMPUTE X AND Y CORDINATES</command>
<command batch="356" error="true">sinTheta = cosd(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="356" error="true">cosTheta = sind(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="356" error="true">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2,1),cosTheta(point1:point2));</command>
<command batch="356" error="true">tmpData(:,point1:point2,2) = bsxfun(@times,tmpData(:,point1:point2,1),sinTheta(point1:point2));</command>
<command batch="356" error="true" execution_time="109">model.data = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command execution_time="16">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2,1),cosTheta(point1:point2));</command>
<command error="true" execution_time="16">tmpData(:,point1:point2,1:2) = sqrt(sum(tmpData(:,point1:point2,1:2).^2,3));</command>
<command execution_time="32">tmpData = reshape(model.data,model.numSlicePoints,numSlices,3);</command>
<command execution_time="31">size(tmpData)</command>
<command batch="357" error="true">% APPLY KEYS TO MODEL</command>
<command batch="357" error="true">tmpData = reshape(model.data,model.numSlicePoints,numSlices,3);</command>
<command batch="357" error="true">% COMPUTE MAGNITUDE</command>
<command batch="357" error="true">tmpData(:,point1:point2,1) = sqrt(sum(tmpData(:,point1:point2,1:2).^2,3));</command>
<command batch="357" error="true">tmpData(:,point1:point2,1) = bsxfun(@plus,tmpData(:,point1:point2,1:2), model.cirReduction);</command>
<command batch="357" error="true">% COMPUTE X AND Y CORDINATES</command>
<command batch="357" error="true">sinTheta = cosd(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="357" error="true">cosTheta = sind(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="357" error="true">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2,1),cosTheta(point1:point2));</command>
<command batch="357" error="true">tmpData(:,point1:point2,2) = bsxfun(@times,tmpData(:,point1:point2,1),sinTheta(point1:point2));</command>
<command batch="357" error="true" execution_time="63">model.data = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command batch="358" error="true">tmpData(:,point1:point2,1) = sqrt(sum(tmpData(:,point1:point2,1:2).^2,3));</command>
<command batch="358" error="true" execution_time="31">tmpData(:,point1:point2,1) = bsxfun(@plus,tmpData(:,point1:point2,1:2), model.cirReduction);</command>
<command execution_time="16">tmpData = reshape(model.data,model.numSlicePoints,numSlices,3);</command>
<command execution_time="16">tmpData(:,point1:point2,1) = sqrt(sum(tmpData(:,point1:point2,1:2).^2,3));</command>
<command execution_time="32">size(tmpData)</command>
<command execution_time="16">tmpData(:,point1:point2,1) = bsxfun(@plus,tmpData(:,point1:point2,1), model.cirReduction);</command>
<command batch="359">sinTheta = cosd(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="359">cosTheta = sind(0:model.angleStep:model.angleStep*numSlices);</command>
<command batch="359">tmpData(:,point1:point2,1) = bsxfun(@times,tmpData(:,point1:point2,1),cosTheta(point1:point2));</command>
<command batch="359">tmpData(:,point1:point2,2) = bsxfun(@times,tmpData(:,point1:point2,1),sinTheta(point1:point2));</command>
<command batch="359" execution_time="31">model.data = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="62">figure; plot(model.data(:,3),model.data(:,1))</command>
</session>
<session>
<command time_stamp="1511acc2f3b">%-- 11/18/2015 8:32 AM --%</command>
<command execution_time="63">foo = bsxfun(@times,ones(5,5),1:5)</command>
<command batch="360" error="true">tmpData = reshape(test(1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="360" error="true">tmpData = bsxfun(@times,tmpData,model.guiPerRed);</command>
<command batch="360" error="true" execution_time="31">model.data(:,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command batch="361" error="true">tmpData = reshape(test(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="361" error="true">tmpData = bsxfun(@times,tmpData,model.guiPerRed);</command>
<command batch="361" error="true" execution_time="31">model.data(:,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,3);</command>
<command batch="362">tmpData = reshape(test(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="362">tmpData = bsxfun(@times,tmpData,model.guiPerRed);</command>
<command batch="362" execution_time="16">model.data(:,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,2);</command>
<command batch="363">tmpData = reshape(test(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="363">tmpData = bsxfun(@times,tmpData,model.guiPerRed);</command>
<command batch="363" execution_time="31">test(:,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,2);</command>
<command execution_time="16">mean(model.data(:,1:2)-test(:,1:2),1)</command>
<command batch="364">prompt = {'Enter matrix size:','Enter colormap name:'};</command>
<command batch="364">dlg_title = 'Input';</command>
<command batch="364">num_lines = 1;</command>
<command batch="364">defaultans = {'20','hsv'};</command>
<command batch="364" execution_time="12207">answer = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command execution_time="31">answer</command>
<command batch="365">prompt = {'Distal end cap diameters (mm):',...</command>
<command batch="365">'Distal end cap height (mm):',...</command>
<command batch="365">'Circumferenical reduction landmark spacing (mm):',...</command>
<command batch="365">'Circumferencial reduction increment (%):'};</command>
<command batch="365">dlg_title = 'Inner mold template';</command>
<command batch="365">num_lines = 2;</command>
<command batch="365">defaultans = {'32 39.5 45','25','50','1'};</command>
<command batch="365" execution_time="50242">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command execution_time="15">answerInnerMold</command>
<command error="true" execution_time="1531">anserInnerMold(1)</command>
<command execution_time="16">answerInnerMold(1)</command>
<command execution_time="15">ans</command>
<command execution_time="16">answerInnerMold(2)</command>
<command error="true" execution_time="341">char2str(answerInnerMold(1))</command>
<command execution_time="16">answerInnerMold(1)</command>
<command execution_time="32">ans(1)</command>
<command execution_time="15">char(ans)</command>
<command execution_time="31">ans(1)</command>
<command error="true" execution_time="31">ans(2)</command>
<command error="true" execution_time="16">ans(1,2)</command>
<command execution_time="32">size(ans)</command>
<command error="true" execution_time="637">foo = char(answerOuterMold(1));</command>
<command execution_time="15">foo = char(answerInnerMold(1));</command>
<command execution_time="15">foo</command>
<command execution_time="31">foo(1)</command>
<command execution_time="15">foo(2)</command>
<command execution_time="15">size(foo)</command>
<command execution_time="16">foo(1:10)</command>
<command execution_time="15">foo(2:10)</command>
<command execution_time="109">test = str2num(foo)</command>
<command execution_time="16">foo</command>
<command batch="366">jDesktop = com.mathworks.mde.desk.MLDesktop.getInstance;</command>
<command batch="366">jCmdWin = jDesktop.getClient('Command Window');</command>
<command batch="366">jTextArea = jCmdWin.getComponent(0).getViewport.getView;</command>
<command batch="366" execution_time="94">cwText = char(jTextArea.getText);</command>
<command execution_time="31" repeat="2">cwText</command>
<command execution_time="16">clear cmd</command>
<command batch="367">jDesktop = com.mathworks.mde.desk.MLDesktop.getInstance;</command>
<command batch="367">jCmdWin = jDesktop.getClient('Command Window');</command>
<command batch="367">jTextArea = jCmdWin.getComponent(0).getViewport.getView;</command>
<command batch="367" execution_time="31">cwText = char(jTextArea.getText);</command>
<command execution_time="16">cwText</command>
<command batch="368">% Create the figure</command>
<command batch="368">mFigure = figure()</command>
<command batch="368">% Create a uicontrol of type "text"</command>
<command batch="368">mTextBox = uicontrol('style','text')</command>
<command batch="368" execution_time="171">set(mTextBox,'String','Hello World')</command>
<command batch="369">prompt = {'Distal end cap diameters (mm):',...</command>
<command batch="369">'Distal end cap height (mm):',...</command>
<command batch="369">'Circumferenical reduction landmark spacing (mm):',...</command>
<command batch="369">'Circumferencial reduction increment (%):'};</command>
<command batch="369">dlg_title = 'Inner mold template';</command>
<command batch="369">num_lines = 2;</command>
<command batch="369">defaultans = {'32 39.5 45','25','50','1'};</command>
<command batch="369" execution_time="13784">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command execution_time="20">answerInnerMold</command>
<command execution_time="21">foo = char(answerInnerMold(1))</command>
<command execution_time="21">whos foo</command>
<command execution_time="20">foo(1,1:10)</command>
<command execution_time="18">foo(2,1:10)</command>
<command batch="370" error="true">prompt = {'Create macro:'};</command>
<command batch="370" error="true">dlg_title = '';</command>
<command batch="370" error="true">num_lines = 2;</command>
<command batch="370" error="true">string = {'hello',...</command>
<command batch="370" error="true">'test',...</command>
<command batch="370" error="true">'cow',...</command>
<command batch="370" error="true">'bird'};</command>
<command batch="370" error="true">defaultans = {string};</command>
<command batch="370" error="true" execution_time="124">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command execution_time="20">string</command>
<command execution_time="17">string = sprintf('test \n hello');</command>
<command execution_time="20">string</command>
<command execution_time="19">string = sprintf('test\n hello');</command>
<command execution_time="19">string</command>
<command execution_time="16">string = sprintf('test\nhello');</command>
<command execution_time="20">string</command>
<command batch="371">prompt = {'Create macro:'};</command>
<command batch="371">dlg_title = '';</command>
<command batch="371">num_lines = 2;</command>
<command batch="371">string = sprintf('line1\nline2\nline3');</command>
<command batch="371">defaultans = {string};</command>
<command batch="371" execution_time="8391">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command batch="372">prompt = {'Create macro:'};</command>
<command batch="372">dlg_title = '';</command>
<command batch="372">num_lines = 100;</command>
<command batch="372">string = sprintf('line1\nline2\nline3');</command>
<command batch="372">defaultans = {string};</command>
<command batch="372">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
</session>
<session>
<command time_stamp="1511b480b04">%-- 11/18/2015 10:48 AM --%</command>
<command batch="373">prompt = {'Create macro:'};</command>
<command batch="373">dlg_title = '';</command>
<command batch="373">num_lines = 10;</command>
<command batch="373">string = sprintf('line1\nline2\nline3');</command>
<command batch="373">defaultans = {string};</command>
<command batch="373" execution_time="19842">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command batch="374">prompt = {'Create macro:'};</command>
<command batch="374">dlg_title = '';</command>
<command batch="374">num_lines = 20;</command>
<command batch="374">string = sprintf('line1\nline2\nline3');</command>
<command batch="374">defaultans = {string};</command>
<command batch="374" execution_time="50969">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command batch="375">% Create the figure</command>
<command batch="375">mFigure = figure()</command>
<command batch="375">% Create a uicontrol of type "text"</command>
<command batch="375">mTextBox = uicontrol('style','text')</command>
<command batch="375" execution_time="125">set(mTextBox,'String','Hello World')</command>
<command execution_time="31">foo = 'test'; foo2 = 'test2';</command>
<command error="true" execution_time="31">f = cat(1,foo,foo2)</command>
<command execution_time="31">strcat(foo,foo2)</command>
<command execution_time="15">foo = 'test\n'; foo2 = 'test2';</command>
<command execution_time="31">strcat(foo,foo2)</command>
<command execution_time="31">sprintf(ans)</command>
<command batch="376">l1 = 'Description {command}\n';</command>
<command batch="376">l2 = 'Circumferencial % reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="376">l3 = 'Landmark circumferenical reduction (%) {%- [0 1 2 3]}\n';</command>
<command batch="376">l2 = 'Circumferencial % increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="376">l3 = 'Landmark circumferenical reduction (%) {%- [100 101 102 103]}\n';</command>
<command batch="376">l4 = 'Extend (mm) {E [3]}\n';</command>
<command batch="376">l5 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="376" execution_time="78">string = sprintf(strcat(l1,l2,l3,l4,l5));</command>
<command execution_time="31">string</command>
<command execution_time="46">sprintf('%')</command>
<command batch="377">l1 = 'Description {command}\n';</command>
<command batch="377">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="377">l3 = 'Landmark circumferenical reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="377">l2 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="377">l3 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="377">l4 = 'Extend (mm) {E [3]}\n';</command>
<command batch="377">l5 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="377" execution_time="78">string = sprintf(strcat(l1,l2,l3,l4,l5));</command>
<command execution_time="16">string</command>
<command batch="378">l1 = 'Description {command}\n';</command>
<command batch="378">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="378">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="378">l3 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="378">l4 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="378">l5 = 'Extend (mm) {E [3]}\n';</command>
<command batch="378">l6 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="378" execution_time="93">string = sprintf(strcat(l1,l2,l3,l4,l5,l6));</command>
<command execution_time="16">string</command>
<command batch="379">l1 = 'Description {command}\n';</command>
<command batch="379">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="379">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="379">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="379">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="379">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="379">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="379" execution_time="93">string = sprintf(strcat(l1,l2,l3,l4,l5,l6,l7));</command>
<command execution_time="15">string</command>
<command batch="380">prompt = {'Commands'};</command>
<command batch="380">dlg_title = '';</command>
<command batch="380">num_lines = 20;</command>
<command batch="380">l1 = 'Description {command}\n';</command>
<command batch="380">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="380">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="380">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="380">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="380">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="380">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="380">string = sprintf(strcat(l1,l2,l3,l4,l5,l6,l7));</command>
<command batch="380">defaultans = {string};</command>
<command batch="380" execution_time="20921">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command batch="381">prompt = {'Commands'};</command>
<command batch="381">dlg_title = '';</command>
<command batch="381">num_lines = 20;</command>
<command batch="381">l1 = 'Description {command}\n';</command>
<command batch="381">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="381">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="381">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="381">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="381">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="381">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="381">string = sprintf(strcat(l1,l2,l3,l4,l5,l6,l7));</command>
<command batch="381">defaultans = {string};</command>
<command batch="381" execution_time="18581">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans, 'on');</command>
<command batch="382">prompt = {'Commands'};</command>
<command batch="382">dlg_title = '';</command>
<command batch="382">num_lines = 20;</command>
<command batch="382">l1 = 'Description {command}\n';</command>
<command batch="382">space = '\n';</command>
<command batch="382">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="382">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="382">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="382">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="382">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="382">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="382">string = sprintf(strcat(l1,space,space,l2,l3,l4,l5,l6,l7));</command>
<command batch="382">defaultans = {string};</command>
<command batch="382" execution_time="21499">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans, 'on');</command>
<command batch="383">prompt = {'Command window'};</command>
<command batch="383">dlg_title = '';</command>
<command batch="383">num_lines = 20;</command>
<command batch="383">string = sprintf('line1\nline2\nline3');</command>
<command batch="383">defaultans = {string};</command>
<command batch="383">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans);</command>
<command batch="383">prompt = {'Commands'};</command>
<command batch="383">dlg_title = '';</command>
<command batch="383">num_lines = 20;</command>
<command batch="383">l1 = 'Description {command}\n';</command>
<command batch="383">space = '\n';</command>
<command batch="383">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="383">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="383">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="383">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="383">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="383" execution_time="24638">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="384">prompt = {'Commandwindow'};</command>
<command batch="384">dlg_title = '';</command>
<command batch="384">num_lines = 20;</command>
<command batch="384">l1 = 'Description {command}\n';</command>
<command batch="384">space = '\n';</command>
<command batch="384">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="384">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="384">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="384">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="384">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="384">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="384">start = '------------Type your code below-----------------';</command>
<command batch="384">string = sprintf(strcat(l1,space,space,l2,l3,l4,l5,l6,l7,start));</command>
<command batch="384">defaultans = {string};</command>
<command batch="384" execution_time="22338">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans, 'on');</command>
<command execution_time="25130" repeat="2">RandDCode</command>
<command execution_time="16">r</command>
<command error="true" execution_time="735">size(buil_data_flag2)</command>
<command execution_time="31">size(build_data_flag2)</command>
<command execution_time="16">23490/90</command>
<command execution_time="31">build_data_flag2(1,:)</command>
<command execution_time="31">build_data_flag2(1:5,:)</command>
<command execution_time="16">gcode_lines</command>
<command error="true" execution_time="441">build_data_flag2(gcod_lines,:)</command>
<command execution_time="25">build_data_flag2(gcode_lines,:)</command>
<command execution_time="31785">RandDCode</command>
<command execution_time="31">size(test)</command>
<command execution_time="16">shit = build_data_flag2;</command>
<command execution_time="16">size(shit)</command>
<command execution_time="15">shitr = shit(:,2);</command>
<command execution_time="31">testr = test(:,2);</command>
<command execution_time="405">figure; plot(shitr-testr)</command>
<command execution_time="78">figure; plot(shitr(1:end-1)-testr(1:end-1))</command>
<command execution_time="15">shit = build_data_flag2;</command>
<command execution_time="15">size(shit)</command>
<command execution_time="31">shitr = shit(:,2);</command>
<command execution_time="78">figure; plot(shitr-testr)</command>
<command execution_time="16">shitrr = reshape(shitr,90,23490/90);</command>
<command execution_time="205">figure; plot(shitrr)</command>
<command execution_time="78">figure; plot(shitrr(1,:))</command>
<command execution_time="63">hold on; plot(shitrr(10,:))</command>
<command execution_time="15">hold on; plot(shitrr(90,:))</command>
<command execution_time="32">hold on; plot(shitrr(45,:))</command>
<command execution_time="32">testrr = reshape(testr,90,23490/90);</command>
<command execution_time="78">figure; plot(shitrr(1,:)-testrr(1,:))</command>
<command execution_time="16">size(testrr)</command>
<command execution_time="15">sqrt(14.5-7.5)</command>
<command execution_time="15">x = linspace(0,2.6458,261);</command>
<command execution_time="16">size(x)</command>
<command error="true" execution_time="157">figure; plot(x^7.5)</command>
<command execution_time="78">figure; plot(x.^2+7.5)</command>
<command execution_time="31">hold on; plot(x.^2+7.5)</command>
<command execution_time="16">(14.5-7.5)^2/3</command>
<command execution_time="15">x = linspace(0,ans,261);</command>
<command execution_time="78">figure; plot(x.^1.5+7.5)</command>
<command execution_time="31">1.5</command>
<command execution_time="16">3/2</command>
<command execution_time="16">(14.5-7.5).^(2/3)</command>
<command execution_time="16">x = linspace(0,ans,261);</command>
<command execution_time="79">figure; plot(x.^1.5+7.5)</command>
<command execution_time="15">(14.5-7.5).^(1/2.5)</command>
<command execution_time="16">x = linspace(0,ans,261);</command>
<command execution_time="78">figure; plot(x.^2.5+7.5)</command>
<command execution_time="16">hold on; plot(x.^2.5+7.5)</command>
<command execution_time="16">(14.5-8).^(1/2.5)</command>
<command execution_time="15">x = linspace(0,ans,261);</command>
<command execution_time="15">hold on; plot(x.^2.5+8)</command>
<command execution_time="109">figure; plot(log10(1:10))</command>
<command execution_time="78">figure; plot(log10(1:100))</command>
<command error="true" execution_time="125">figure; plot(1/log10(1:100))</command>
<command execution_time="78">figure; plot(1./log10(1:100))</command>
<command execution_time="16">log10(0)</command>
<command execution_time="15">log10(1)</command>
<command error="true" execution_time="15">10^(1/(14.5-7.5)</command>
<command execution_time="16">10^(1/(14.5-7.5))</command>
<command execution_time="15">x = linspace(0,ans,261);</command>
<command execution_time="31">x = linspace(1,ans,261);</command>
<command error="true" execution_time="63">figure; plot(1/log10(x)+7.5)</command>
<command execution_time="78">figure; plot(1./log10(x)+7.5)</command>
<command execution_time="78">figure; plot((1./log10(x))+7.5)</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="385">numSlices = length(model.sliceHeights);</command>
<command batch="385">% LINER THICKNESS PROFILE INLINE FUNCTIONS</command>
<command batch="385">z = @(x) (x-1.3e2)./75;</command>
<command batch="385">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.54.*z+8.8;</command>
<command batch="385" execution_time="78">model.guiPerRed = linerThicknessProfile(model.sliceHeights);</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="386">z = @(x) (x-1.3e2)./75;</command>
<command batch="386">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.54.*z+8.8;</command>
<command batch="386" execution_time="32">model.guiPerRed = linerThicknessProfile(z(model.sliceHeights));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="387">% LINER THICKNESS PROFILE INLINE FUNCTIONS</command>
<command batch="387">z = @(x) (x-1.3e2)./75;</command>
<command batch="387">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.54.*z+8.8;</command>
<command batch="387" execution_time="46">model.guiPerRed = linerThicknessProfile(z(model.sliceHeights-min(model.sliceHeights)));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="388">test = 1:261;</command>
<command batch="388">z = @(x) (x-1.3e2)./75;</command>
<command batch="388">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.54.*z+8.8;</command>
<command batch="388" execution_time="47">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="94">figure; plot(model.guiPerRed)</command>
<command execution_time="31">test</command>
<command batch="389">test = 1:261;</command>
<command batch="389">z = @(x) (x-1.3e2)./75;</command>
<command batch="389">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.54.*z+8.8;</command>
<command batch="389" execution_time="47">model.guiPerRed = linerThicknessProfile(test);</command>
<command execution_time="80">figure; plot(model.guiPerRed)</command>
<command batch="390">test = 1:261;</command>
<command batch="390">z = @(x) (x)./75;</command>
<command batch="390">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.54.*z+8.8;</command>
<command batch="390" execution_time="47">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="391">test = 1:261;</command>
<command batch="391">z = @(x) (x-1.3e2)./75;</command>
<command batch="391">linerThicknessProfile = @(z) 0.0012.*z.^6+0.13.*z.^5+0.29.*z.^4+0.15.*z.^3-0.079.*z.^2-0.54.*z+8.8;</command>
<command batch="391">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="391" execution_time="78">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="93">figure; plot(model.guiPerRed)</command>
<command batch="392">test = 1:261;</command>
<command batch="392">z = @(x) (x-131)./75.49;</command>
<command batch="392">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+8.82;</command>
<command batch="392">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="392" execution_time="63">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="93">figure; plot(model.guiPerRed)</command>
<command batch="393">test = 1:261;</command>
<command batch="393">z = @(x) (x-131)./75.49;</command>
<command batch="393">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+7.5;</command>
<command batch="393">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="393" execution_time="62">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="394">test = 0:261;</command>
<command batch="394">z = @(x) (x-131)./75.49;</command>
<command batch="394">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+7.5;</command>
<command batch="394">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="394" execution_time="78">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="94">figure; plot(model.guiPerRed)</command>
<command execution_time="32">test(1)</command>
<command batch="395">test = 0:261;</command>
<command batch="395">z = @(x) (x-131)./76;</command>
<command batch="395">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+8.82;</command>
<command batch="395">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="395" execution_time="63">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="396">test = 0:261;</command>
<command batch="396">z = @(x) (x-131)./80;</command>
<command batch="396">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+8.82;</command>
<command batch="396">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="396" execution_time="78">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="93">figure; plot(model.guiPerRed)</command>
<command batch="397">test = 0:261;</command>
<command batch="397">z = @(x) (x)./75.49;</command>
<command batch="397">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+8.82;</command>
<command batch="397">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="397" execution_time="78">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="398">test = 0:261;</command>
<command batch="398">z = @(x) (x-131)./75.49;</command>
<command batch="398">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2-0.538.*z+8.82;</command>
<command batch="398">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="398" execution_time="62">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="399">test = 0:261;</command>
<command batch="399">z = @(x) (x-131)./75.49;</command>
<command batch="399">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="399">% linerThicknessProfile = @(z) 6.6e-15.*z.^6+4.7e-11.*z.^5-2.4e-8.*z.^4+4.3e-6.*z.^3-0.00038.*z+8.8;</command>
<command batch="399" execution_time="78">model.guiPerRed = linerThicknessProfile(z(test));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="400">z = @(x) (x-131)./75.49;</command>
<command batch="400">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="400" execution_time="47">model.guiPerRed = linerThicknessProfile(z(model.sliceHeights-min(model.sliceHeights)));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="401">z = @(x) (x-131)./75.49;</command>
<command batch="401">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="401" execution_time="46">model.guiPerRed = linerThicknessProfile(z(model.sliceHeights));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command execution_time="31">size(model.sliceHeights)</command>
<command error="true" execution_time="330">foo = decimate(sin2(0:.1:360),2.5);</command>
<command error="true" execution_time="187">foo = decimate(sind(0:.1:360),2.5);</command>
<command execution_time="1029">foo = decimate(sind(0:.1:360),2);</command>
<command execution_time="15">numSlices</command>
<command execution_time="32">262/109</command>
<command execution_time="31">262/110</command>
<command execution_time="15">109/2</command>
<command execution_time="31">109*2</command>
<command execution_time="16">209*3</command>
<command batch="402">numSlices = length(model.sliceHeights);</command>
<command batch="402">%******************LINER THICKNESS PROFILE INLINE FUNCTIONS****************</command>
<command batch="402">tmp = 0:261;</command>
<command batch="402">z = @(x) (x-131)./75.49;</command>
<command batch="402">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+...</command>
<command batch="402">0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="402">%**************************************************************************</command>
<command batch="402" execution_time="125">model.guiPerRed = linerThicknessProfile(z(tmp));</command>
<command execution_time="16">model.guiPerRed</command>
<command execution_time="31">model.guiPerRed = interp1(tmp,model.guiPerRed,1:numSlices);</command>
<command execution_time="16">size(model.guiPerRed)</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="403">tmp = 0:261;</command>
<command batch="403">z = @(x) (x-131)./75.49;</command>
<command batch="403">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+...</command>
<command batch="403">0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="403">%**************************************************************************</command>
<command batch="403" execution_time="94">model.guiPerRed = linerThicknessProfile(z(tmp));</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command batch="404">tmp = 0:261;</command>
<command batch="404">z = @(x) (x-131)./75.49;</command>
<command batch="404">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+...</command>
<command batch="404">0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="404">%**************************************************************************</command>
<command batch="404" execution_time="78">model.guiPerRed = linerThicknessProfile(z(tmp));</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command batch="405">x1 = linspace(0,261,numSlices);</command>
<command batch="405" execution_time="31">model.guiPerRed = interp1(tmp,model.guiPerRed,x1);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command execution_time="31">sqrt(2^2+3^2)</command>
<command execution_time="15">ans * .9</command>
<command execution_time="15">sqrt((.9*2)^2+(.9*3)^2)</command>
<command execution_time="31">1*(.9-1)</command>
<command execution_time="16">1 + ans</command>
<command execution_time="15">1*.9</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">test = model.data;</command>
<command execution_time="31">size(tmpData)</command>
<command execution_time="16" repeat="2">size(model.guiPerRed)</command>
<command batch="406">tmp = 0:261;</command>
<command batch="406">z = @(x) (x-131)./75.49;</command>
<command batch="406">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+...</command>
<command batch="406">0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="406">%**************************************************************************</command>
<command batch="406">x1 = linspace(0,261,numSlices);</command>
<command batch="406">model.guiPerRed = linerThicknessProfile(z(tmp));</command>
<command batch="406">model.guiPerRed = interp1(tmp,model.guiPerRed,x1); % downsample-ish</command>
<command batch="406">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="406">model.guiPerRed = bsxfun(@plus,tmpData,model.guiPerRed)./tmpData;</command>
<command batch="406" execution_time="62">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command execution_time="16">size(model.guiPerRed)</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="15">test = model.data;</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="16">foo = test(:,1:2) - model.data(:,1:2);</command>
<command execution_time="32">mean(foo-model.guiPerRed,1)</command>
<command execution_time="31">foo = model.data(:,1:2)-test(:,1:2);</command>
<command execution_time="32">mean(foo-model.guiPerRed,1)</command>
<command execution_time="1388">foo = model.data(:,1:2)/test(:,1:2);</command>
<command execution_time="312">foo = model.data(:,1:2)./test(:,1:2);</command>
<command execution_time="16">mean(foo-model.guiPerRed,1)</command>
<command execution_time="62">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">hold on; plot(test(:,3),test(:,1))</command>
<command error="true" execution_time="31">test = mode.data;</command>
<command execution_time="15">test = model.data;</command>
<command execution_time="187">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">plot(test(:,3),test(:,1))</command>
<command execution_time="33">hold on; plot(test(:,3),test(:,1))</command>
<command execution_time="16">plot(test(:,3),test(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">hold on; plot(test(:,3),test(:,1))</command>
<command execution_time="15">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">test = model.data;</command>
<command execution_time="94">figure; plot(test(:,3),test(:,1))</command>
<command execution_time="31">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">foo = model.data(:,1:2)./test(:,1:2);</command>
<command execution_time="15">mean(foo-model.guiPerRed,1)</command>
<command execution_time="78">figure; plot(model.guiPerRed(:,1))</command>
<command execution_time="78">figure; plot(model.guiPerRed(:,2))</command>
<command execution_time="32">(2+1)/1</command>
<command execution_time="15">(2-1)/-1</command>
<command execution_time="78">figure; plot((2+(-10:10))/(-10:10));</command>
<command execution_time="16">(2+(-10:10))/(-10:10)</command>
<command execution_time="78">figure; plot((2+(-10:10))./(-10:10));</command>
<command execution_time="78">figure; plot(-10:10,(2+(-10:10))./(-10:10));</command>
<command execution_time="78">figure; plot(-10:10,abs((2+(-10:10))./(-10:10)));</command>
<command execution_time="15">sqrt((.1*2)^2+(.1*-1)^2)</command>
<command execution_time="16">sqrt(2^2+(-1)^2)</command>
<command execution_time="31">ans * .5</command>
<command execution_time="15">2.2361*.1</command>
<command execution_time="16">test = model.data;</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">hold on; plot(test(:,3),test(:,1))</command>
<command execution_time="62">figure; plot(model.guiPerRed(:,1))</command>
<command execution_time="78">figure; plot(sqrt(sum(model.guiPerRed.^2,2)))</command>
<command batch="407">tmp = 0:261;</command>
<command batch="407">z = @(x) (x-131)./75.49;</command>
<command batch="407">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+...</command>
<command batch="407">0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="407">%**************************************************************************</command>
<command batch="407">x1 = linspace(0,261,numSlices);</command>
<command batch="407">model.guiPerRed = linerThicknessProfile(z(tmp));</command>
<command batch="407">model.guiPerRed = interp1(tmp,model.guiPerRed,x1); % downsample-ish</command>
<command batch="407">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="407">model.guiPerRed = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed); % unit vector</command>
<command batch="407" execution_time="78">model.guiPerRed = 1+(model.guiPerRed./tmpData);</command>
<command error="true" execution_time="140">figure; plot(model.guiPerRed)</command>
<command error="true" execution_time="78">figure; plot(sqrt(sum(model.guiPerRed.^2,2)))</command>
<command batch="408">numSlices = length(model.sliceHeights);</command>
<command batch="408">%******************LINER THICKNESS PROFILE INLINE FUNCTIONS****************</command>
<command batch="408">tmp = 0:261;</command>
<command batch="408">z = @(x) (x-131)./75.49;</command>
<command batch="408">linerThicknessProfile = @(z) 0.0012223.*z.^6+0.1277.*z.^5+0.2887.*z.^4+...</command>
<command batch="408">0.1493.*z.^3-0.07867.*z.^2+0.538.*z+8.82;</command>
<command batch="408">%**************************************************************************</command>
<command batch="408">x1 = linspace(0,261,numSlices);</command>
<command batch="408">model.guiPerRed = linerThicknessProfile(z(tmp));</command>
<command batch="408" execution_time="78">model.guiPerRed = interp1(tmp,model.guiPerRed,x1); % downsample-ish</command>
<command execution_time="78">figure; plot(model.guiPerRed)</command>
<command execution_time="31">49.26-57.21</command>
<command execution_time="32">81.9-65.22</command>
<command batch="409" error="true">tmpGuiPerRed = ones(20+model.numSlicePoints,numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="409" error="true">tmpGuiPerRed(angleIdx+11,point1:point2) = bsxfun(@plus,tmpGuiPerRed(angleIdx,:), model.guiPerRed);</command>
<command batch="409" error="true">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="409" error="true" execution_time="94">model.guiPerRed = model.guiPerRed(11:model.numSlicePoints,:);</command>
<command batch="410" error="true">tmpGuiPerRed = ones(model.numSlicePoints,20+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="410" error="true">tmpGuiPerRed(angleIdx,(point1:point2)+11) = bsxfun(@plus,tmpGuiPerRed(angleIdx,:), model.guiPerRed);</command>
<command batch="410" error="true">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="410" error="true" execution_time="62">model.guiPerRed = model.guiPerRed(:,11:numSlices);</command>
<command execution_time="15">size(tmpGuiPerRed)</command>
<command batch="411" error="true">tmpGuiPerRed = ones(model.numSlicePoints,20+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="411" error="true">tmpGuiPerRed(angleIdx,(point1:point2)+11) = bsxfun(@plus,tmpGuiPerRed(angleIdx,11:numslices), model.guiPerRed);</command>
<command batch="411" error="true">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="411" error="true" execution_time="546">model.guiPerRed = model.guiPerRed(:,11:numSlices);</command>
<command batch="412" error="true">tmpGuiPerRed = ones(model.numSlicePoints,20+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="412" error="true">tmpGuiPerRed(angleIdx,(point1:point2)+11) = bsxfun(@plus,tmpGuiPerRed(angleIdx,11:numSlices), model.guiPerRed);</command>
<command batch="412" error="true">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="412" error="true" execution_time="31">model.guiPerRed = model.guiPerRed(:,11:numSlices);</command>
<command execution_time="16">size(tmpGuiPerRed(angleIdx,11:numSlices))</command>
<command execution_time="15">size(model.guiPerRed)</command>
<command batch="413">tmpGuiPerRed = ones(model.numSlicePoints,20+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="413">tmpGuiPerRed(angleIdx,(point1:point2)+11) = bsxfun(@plus,tmpGuiPerRed(angleIdx,(point1:point2)+11), model.guiPerRed);</command>
<command batch="413">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="413" execution_time="1077">model.guiPerRed = model.guiPerRed(:,11:numSlices);</command>
<command execution_time="140">figure; imagesc(model.guiPerRed)</command>
<command execution_time="31">20/2+1</command>
<command batch="414">pad = 30;</command>
<command batch="414">tmpGuiPerRed = ones(model.numSlicePoints,pad+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="414">tmpGuiPerRed(angleIdx,(point1:point2)+(pad/2+1)) = bsxfun(@plus,...</command>
<command batch="414">tmpGuiPerRed(angleIdx,(point1:point2)+(pad/2+1)), model.guiPerRed);</command>
<command batch="414">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="414" execution_time="93">model.guiPerRed = model.guiPerRed(:,(pad/2+1):numSlices);</command>
<command execution_time="93">figure; imagesc(model.guiPerRed)</command>
<command batch="415" error="true">% MAKE KEYS</command>
<command batch="415" error="true">pad = 50;</command>
<command batch="415" error="true">tmpGuiPerRed = ones(model.numSlicePoints,pad+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="415" error="true">tmpGuiPerRed(angleIdx,(point1:point2)+(pad/2+1)) = bsxfun(@plus,...</command>
<command batch="415" error="true">tmpGuiPerRed(angleIdx,(point1:point2)+(pad/2+1)), model.guiPerRed);</command>
<command batch="415" error="true">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="415" error="true" execution_time="63">model.guiPerRed = model.guiPerRed(:,(pad/2+1):numSlices);</command>
<command batch="416">numSlices = length(model.sliceHeights);</command>
<command batch="416">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="416">%*******************Remove hard coded angles*******************************</command>
<command batch="416">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="416">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="416">%**************************************************************************</command>
<command batch="416">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="416">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="416">n = point2 + 1 - point1;</command>
<command batch="416">y = linspace(1,300,n);</command>
<command batch="416">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="416">% MAKE KEYS</command>
<command batch="416">pad = 50;</command>
<command batch="416">tmpGuiPerRed = ones(model.numSlicePoints,pad+numSlices); % add padding (i.e., 20) for convolution</command>
<command batch="416">tmpGuiPerRed(angleIdx,(point1:point2)+(pad/2+1)) = bsxfun(@plus,...</command>
<command batch="416">tmpGuiPerRed(angleIdx,(point1:point2)+(pad/2+1)), model.guiPerRed);</command>
<command batch="416">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="416" execution_time="140">model.guiPerRed = model.guiPerRed(:,(pad/2+1):numSlices);</command>
<command execution_time="94">figure; imagesc(model.guiPerRed)</command>
<command execution_time="16">size(model.guiPerRed)</command>
<command execution_time="16">length(pad/2+1:numSlices)</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="16">27540/90</command>
<command execution_time="31">numSlices</command>
<command execution_time="15">size(model.guiPerRed)</command>
<command execution_time="983">main</command>
<command batch="417">prompt = {'Command window'};</command>
<command batch="417">dlg_title = '';</command>
<command batch="417">num_lines = 20;</command>
<command batch="417">l1 = 'Description {command}\n';</command>
<command batch="417">space = '\n';</command>
<command batch="417">l2 = 'Circumferencial percent reduction landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="417">l3 = 'Landmark circumferencial reduction (percent) {P- [0 1 2 3]}\n';</command>
<command batch="417">l4 = 'Circumferencial percent increase landmark heights (mm) {L [0 5 10 20]}\n';</command>
<command batch="417">l5 = 'Landmark circumferenical reduction (percent) {P+ [100 101 102 103]}\n';</command>
<command batch="417">l6 = 'Extend (mm) {E [3]}\n';</command>
<command batch="417">l7 = 'Extend between heights (mm) {EH [4 5]}\n';</command>
<command batch="417">start = '------------Type your code below-----------------';</command>
<command batch="417">string = sprintf(strcat(l1,space,space,l2,l3,l4,l5,l6,l7,start));</command>
<command batch="417">defaultans = {string};</command>
<command batch="417" execution_time="223823">answerInnerMold = inputdlg(prompt,dlg_title,num_lines,defaultans, 'on');</command>
<command error="true" execution_time="16">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command batch="418" error="true">numSlices = length(model.sliceHeights);</command>
<command batch="418" error="true">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="418" error="true">%*******************Remove hard coded angles*******************************</command>
<command batch="418" error="true">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="418" error="true">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="418" error="true">%**************************************************************************</command>
<command batch="418" error="true">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="418" error="true">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="418" error="true">n = point2 + 1 - point1;</command>
<command batch="418" error="true">y = linspace(1,300,n);</command>
<command batch="418" error="true">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="418" error="true">% MAKE KEYS</command>
<command batch="418" error="true">pad = 50; % add padding (i.e., 20) for convolution</command>
<command batch="418" error="true">tmpGuiPerRed = ones(pad+model.numSlicePoints,numSlices);</command>
<command batch="418" error="true">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)) = bsxfun(@plus,...</command>
<command batch="418" error="true">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)), model.guiPerRed);</command>
<command batch="418" error="true">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="418" error="true">model.guiPerRed = model.guiPerRed((pad/2+1):model.numSlicePoints,:);</command>
<command batch="418" error="true" execution_time="210">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command execution_time="31">model.numSlicePoints</command>
<command error="true" execution_time="31">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command batch="419">numSlices = length(model.sliceHeights);</command>
<command batch="419">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="419">%*******************Remove hard coded angles*******************************</command>
<command batch="419">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="419">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="419">%**************************************************************************</command>
<command batch="419">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="419">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="419">n = point2 + 1 - point1;</command>
<command batch="419">y = linspace(1,300,n);</command>
<command batch="419">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="419">% MAKE KEYS</command>
<command batch="419">pad = 50; % add padding (i.e., 20) for convolution</command>
<command batch="419">tmpGuiPerRed = ones(pad+model.numSlicePoints,numSlices);</command>
<command batch="419">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)) = bsxfun(@plus,...</command>
<command batch="419">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)), model.guiPerRed);</command>
<command batch="419" execution_time="172">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command execution_time="15">(pad/2+1)</command>
<command execution_time="16">model.guiPerRed = model.guiPerRed((pad/2+1):(pad/2+1)+model.numSlicePoints,:);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command batch="420">numSlices = length(model.sliceHeights);</command>
<command batch="420">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="420">%*******************Remove hard coded angles*******************************</command>
<command batch="420">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="420">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="420">%**************************************************************************</command>
<command batch="420">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="420">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="420">n = point2 + 1 - point1;</command>
<command batch="420">y = linspace(1,300,n);</command>
<command batch="420">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="420">% MAKE KEYS</command>
<command batch="420">pad = 50; % add padding (i.e., 20) for convolution</command>
<command batch="420">tmpGuiPerRed = ones(pad+model.numSlicePoints,numSlices);</command>
<command batch="420">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)) = bsxfun(@plus,...</command>
<command batch="420">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)), model.guiPerRed);</command>
<command batch="420">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="420" execution_time="187">model.guiPerRed = model.guiPerRed((pad/2+1):(pad/2)+model.numSlicePoints,:);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="15">numSlices</command>
<command batch="421">numSlices = length(model.sliceHeights);</command>
<command batch="421">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="421">%*******************Remove hard coded angles*******************************</command>
<command batch="421">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="421">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="421">%**************************************************************************</command>
<command batch="421">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="421">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="421">n = point2 + 1 - point1;</command>
<command batch="421">y = linspace(1,300,n);</command>
<command batch="421">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="421">% MAKE KEYS</command>
<command batch="421">pad = 50; % add padding (i.e., 20) for convolution</command>
<command batch="421">tmpGuiPerRed = ones(pad+model.numSlicePoints,numSlices);</command>
<command batch="421">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)) = bsxfun(@plus,...</command>
<command batch="421">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)), model.guiPerRed);</command>
<command batch="421">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="421" execution_time="157">model.guiPerRed = model.guiPerRed((pad/2+1):(pad/2+1)+model.numSlicePoints,:);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="96">figure; imagesc(model.guiPerRed)</command>
<command error="true" execution_time="16">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="31">numSlices</command>
<command batch="422">numSlices = length(model.sliceHeights);</command>
<command batch="422">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="422">%*******************Remove hard coded angles*******************************</command>
<command batch="422">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="422">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="422">%**************************************************************************</command>
<command batch="422">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="422">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="422">n = point2 + 1 - point1;</command>
<command batch="422">y = linspace(1,300,n);</command>
<command batch="422">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="422">% MAKE KEYS</command>
<command batch="422">pad = 50; % add padding (i.e., 20) for convolution</command>
<command batch="422">tmpGuiPerRed = ones(pad+model.numSlicePoints,numSlices);</command>
<command batch="422">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)) = bsxfun(@plus,...</command>
<command batch="422">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)), model.guiPerRed);</command>
<command batch="422">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="422" execution_time="172">model.guiPerRed = model.guiPerRed((pad/2+1):(pad/2)+model.numSlicePoints,:);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command batch="423">numSlices = length(model.sliceHeights);</command>
<command batch="423">slicePerStep = model.data(end,end)/numSlices; % unit per step</command>
<command batch="423">%*******************Remove hard coded angles*******************************</command>
<command batch="423">angleIdx = [1, round(model.numSlicePoints*.25),...</command>
<command batch="423">round(model.numSlicePoints*.75), model.numSlicePoints];</command>
<command batch="423">%**************************************************************************</command>
<command batch="423">point1 = round(model.guiExtendPoint1(3) / slicePerStep); % step</command>
<command batch="423">point2 = round(model.data(end,end) / slicePerStep); % step</command>
<command batch="423">n = point2 + 1 - point1;</command>
<command batch="423">y = linspace(1,300,n);</command>
<command batch="423">model.guiPerRed = model.guiMoldKeysOffSet/log10(300)*log10(y);</command>
<command batch="423">% MAKE KEYS</command>
<command batch="423">pad = 50; % add padding (i.e., 20) for convolution</command>
<command batch="423">tmpGuiPerRed = ones(pad+model.numSlicePoints,numSlices);</command>
<command batch="423">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)) = bsxfun(@plus,...</command>
<command batch="423">tmpGuiPerRed(angleIdx+(pad/2+1),(point1:point2)), model.guiPerRed);</command>
<command batch="423">model.guiPerRed = imgaussfilt(tmpGuiPerRed,.5);</command>
<command batch="423" execution_time="171">model.guiPerRed = model.guiPerRed((pad/2+1)+1:(pad/2)+1+model.numSlicePoints,:);</command>
<command execution_time="94">figure; imagesc(model.guiPerRed)</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command error="true" execution_time="31">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command execution_time="16">model.numSlicePoints</command>
<command execution_time="31">numSlices</command>
<command error="true" execution_time="32">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices);</command>
<command execution_time="16">size(model.guiPerRed)</command>
<command execution_time="15">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,1);</command>
<command execution_time="94" repeat="2">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="218">initGL(model)</command>
<command execution_time="345">main</command>
<command execution_time="234" repeat="4">initGL(model)</command>
</session>
<session>
<command time_stamp="1511d3f4933">%-- 11/18/2015 7:57 PM --%</command>
<command error="true" execution_time="140">open angularAlign</command>
<command execution_time="546">open template</command>
<command error="true" execution_time="47">open templateLine</command>
<command execution_time="250">open templateLiner</command>
<command batch="424">[n e f] = createIcosahedron;</command>
<command batch="424" execution_time="2745">drawMesh(n, f);</command>
<command execution_time="312">open drawMesh</command>
<command execution_time="15">n</command>
<command execution_time="16">f</command>
<command error="true" execution_time="156">figure; patch('Faces',f,'Vertrices',n,'FaceColor','blue');</command>
<command execution_time="94">figure; patch('Faces',f,'Vertices',n,'FaceColor','blue');</command>
<command execution_time="62">c = colormap(hot);</command>
<command error="true" execution_time="234">figure; patch('Faces',f,'Vertices',n,'FaceColor',c);</command>
<command execution_time="16">cmap = colormap(hot);</command>
<command execution_time="31">size(cmap)</command>
<command error="true" execution_time="1225">c = [1:lenght(n)];</command>
<command execution_time="15">c = [1:length(n)];</command>
<command error="true" execution_time="94">figure; patch('Faces',f,'Vertices',n,'FaceColor',c);</command>
<command execution_time="31">size(c)</command>
<command error="true" execution_time="78">figure; patch('Faces',f,'Vertices',n,'FaceColor',c');</command>
<command error="true" execution_time="124">figure; patch(f,n,c');</command>
<command error="true" execution_time="63">g = colormap(jet(128)); h = patch(fvc)</command>
<command execution_time="16">c = colormap(hot);</command>
<command error="true" execution_time="78">figure; patch('Faces',f,'Vertices',n,'FaceColor',c');</command>
<command execution_time="31">c</command>
<command error="true" execution_time="176">fvc.f=f; fvc.v=v; fnc.facevertescdata = linspace(0,1,size(f,1));</command>
<command execution_time="31">fvc.f=f; fvc.v=n; fnc.facevertescdata = linspace(0,1,size(f,1));</command>
<command error="true" execution_time="31">g = colormap(jet(128)); h = patch(fvc) shading flat</command>
<command error="true" execution_time="32">g = colormap(jet(128)); h = patch(fvc)</command>
<command execution_time="15">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = linspace(0,1,size(f,1));</command>
<command error="true" execution_time="47">g = colormap(jet(128)); h = patch(fvc)</command>
<command execution_time="31">f</command>
<command execution_time="15">fvc.faces</command>
<command execution_time="15">whos fvc</command>
<command execution_time="31">fvc</command>
<command execution_time="15">fvc.f =[]</command>
<command execution_time="16">clear fvc</command>
<command error="true" execution_time="262">fvc</command>
<command execution_time="16">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = linspace(0,1,size(f,1));</command>
<command execution_time="78">g = colormap(jet(128)); h = patch(fvc)</command>
<command execution_time="31">fnc.facevertexcdata</command>
<command execution_time="16">colormap(hot)</command>
<command execution_time="62">shading flat</command>
<command execution_time="31">size(fnc.facevertexcdata)</command>
<command execution_time="16">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = linspace(0,1,size(f,1))';</command>
<command execution_time="32">g = colormap(jet(128)); h = patch(fvc)</command>
<command execution_time="15">g = colormap(jet(20)); h = patch(fvc)</command>
<command execution_time="32">h = patch(fvc);</command>
<command error="true" execution_time="31">fvc.g = colormap(jet(20)); h = patch(fvc)</command>
<command error="true" execution_time="16">fvc.g = colormap(jet(20)); h = patch(fvc,g)</command>
<command error="true" execution_time="31">fvc.CDataMapping = colormap(jet(20)); h = patch(fvc)</command>
<command execution_time="32">clear fvc</command>
<command execution_time="16">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = linspace(0,1,size(f,1))';</command>
<command error="true" execution_time="94">fvc.CDataMapping = colormap(jet(20)); h = patch(fvc)</command>
<command error="true" execution_time="31">h = patch(fvc)</command>
<command error="true" execution_time="116">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = 1:lenght(f)';</command>
<command execution_time="31">clear fvc</command>
<command execution_time="15">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = 1:length(f)';</command>
<command execution_time="31">g = colormap(jet(20)); h = patch(fvc)</command>
<command execution_time="31">fnc.facevertexcdata</command>
<command execution_time="15">set(h,'CData',colormap(hot))</command>
<command error="true" execution_time="140">set(h,'FaceVertexCData',1:length(f))</command>
<command error="true" execution_time="31">set(h,'FaceVertexCData',1:length(f)')</command>
<command execution_time="31">set(h,'FaceVertexCData',(1:length(f))')</command>
<command execution_time="16">length(1:length(f))</command>
<command execution_time="31">length(f)</command>
<command execution_time="31">cdata = 1:length(f);</command>
<command execution_time="31">cdata'</command>
<command error="true" execution_time="46">set(h,'FaceVertexCData',cdata)</command>
<command execution_time="31">set(h,'FaceVertexCData',cdata')</command>
<command execution_time="31">h</command>
</session>
<session>
<command time_stamp="1511fdaabd9">%-- 11/19/2015 8:06 AM --%</command>
<command execution_time="187">[n e f] = createIcosahedron;</command>
<command execution_time="16">fvc.faces=f; fvc.vertices=n; fnc.facevertexcdata = 1:size(f,1);</command>
<command execution_time="1950">patch(fvc)</command>
<command execution_time="78">colormap(hot)</command>
<command execution_time="31">fvc.cdata = colormap(hot);</command>
<command execution_time="31">patch(fvc)</command>
<command batch="425">sceneX = [-5 5 5 -5 5 -5];</command>
<command batch="425">sceneY = [5 5 -5 5 -5 -5];</command>
<command batch="425">sceneZ = [0 0 0 0 0 0];</command>
<command batch="425">scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="425">nPoints = size(scene.Vertices,1);</command>
<command batch="425">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="425">scene.FaceColor = 'Flat' ;</command>
<command batch="425">scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="425">patch(scene)</command>
<command batch="425">objectX = [-1 -1  1 -1  1  1 -1 -1  0 -1  0  1  0  1  1 -1  0  1];</command>
<command batch="425">objectY = [-1  1  1 -1  1 -1 -1  1  0  1  0  1  0  1 -1 -1  0 -1];</command>
<command batch="425">objectZ = [ 1  1  1  1  1  1  1  1  3  1  3  1  3  1  1  1  3  1];</command>
<command batch="425">object.Vertices = [objectX.',objectY.',objectZ.'];</command>
<command batch="425">nPoints = size(object.Vertices,1);</command>
<command batch="425">object.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="425">object.FaceColor = 'Flat' ;</command>
<command batch="425">object.FaceVertexCData = repmat( [0.3 0.3 0.7] , size(object.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="425">hold on</command>
<command batch="425">patch(object)</command>
<command batch="425">%%</command>
<command batch="425">newScene.Vertices  = [scene.Vertices ; object.Vertices];</command>
<command batch="425">newScene.Faces     = [scene.Faces    ; object.Faces + numel(scene.Faces)];</command>
<command batch="425">newScene.FaceVertexCData = [scene.FaceVertexCData ; object.FaceVertexCData ] ;</command>
<command batch="425">newScene.FaceColor = 'Flat' ;</command>
<command batch="425" execution_time="250">patch(newScene)</command>
<command batch="426" error="true">[n e f] = createIcosahedron;</command>
<command batch="426" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="426" error="true">scene.Vertics = n;</command>
<command batch="426" error="true">nPoints = size(scene.Vertices,1);</command>
<command batch="426" error="true">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="426" error="true">scene.FaceColor = 'Flat' ;</command>
<command batch="426" error="true">scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="426" error="true" execution_time="140">patch(scene)</command>
<command batch="427" error="true">[n e f] = createIcosahedron;</command>
<command batch="427" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="427" error="true">scene.Vertices = n;</command>
<command batch="427" error="true">nPoints = size(scene.Vertices,1);</command>
<command batch="427" error="true">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="427" error="true">scene.FaceColor = 'Flat' ;</command>
<command batch="427" error="true">scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="427" error="true" execution_time="109">patch(scene)</command>
<command batch="428" repeat="2">clear scene</command>
<command batch="428">[n e f] = createIcosahedron;</command>
<command batch="428">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="428">scene.Vertices = n;</command>
<command batch="428">nPoints = size(scene.Vertices,1);</command>
<command batch="428">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="428">scene.FaceColor = 'Flat' ;</command>
<command batch="428">scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="428" execution_time="156">patch(scene)</command>
<command batch="429">clear scene</command>
<command batch="429">[n e f] = createIcosahedron;</command>
<command batch="429">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="429">scene.Vertices = n;</command>
<command batch="429">% nPoints = size(scene.Vertices,1);</command>
<command batch="429">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="429">scene.Faces = f;</command>
<command batch="429">scene.FaceColor = 'Flat' ;</command>
<command batch="429">scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="429" execution_time="78">patch(scene)</command>
<command execution_time="31">size(scene.Faces,1)</command>
<command execution_time="16">scene.FaceVertexCData</command>
<command batch="430">clear scene</command>
<command batch="430">[n e f] = createIcosahedron;</command>
<command batch="430">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="430">scene.Vertices = n;</command>
<command batch="430">% nPoints = size(scene.Vertices,1);</command>
<command batch="430">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="430">scene.Faces = f;</command>
<command batch="430">scene.FaceColor = 'Flat' ;</command>
<command batch="430">cmap = colormap(hot);</command>
<command batch="430">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="430">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="430" execution_time="109">patch(scene)</command>
<command execution_time="640">open initGL</command>
<command batch="431">clear scene</command>
<command batch="431">[n e f] = createIcosahedron;</command>
<command batch="431">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="431">scene.Vertices = n;</command>
<command batch="431">nPoints = size(scene.Vertices,1);</command>
<command batch="431">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="431">scene.Faces = f;</command>
<command batch="431">scene.FaceColor = 'Flat' ;</command>
<command batch="431">scene.FaceAlpha = .5;</command>
<command batch="431">% scene.Lighting = 'flat';</command>
<command batch="431">cmap = colormap(hot);</command>
<command batch="431">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="431">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="431" execution_time="140">patch(scene)</command>
<command batch="432" repeat="2">clear scene</command>
<command batch="432">[n e f] = createIcosahedron;</command>
<command batch="432">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="432">scene.Vertices = n;</command>
<command batch="432">nPoints = size(scene.Vertices,1);</command>
<command batch="432">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="432">scene.Faces = f;</command>
<command batch="432">scene.FaceColor = 'Flat' ;</command>
<command batch="432">scene.FaceAlpha = .1;</command>
<command batch="432">% scene.Lighting = 'flat';</command>
<command batch="432">cmap = colormap(hot);</command>
<command batch="432">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="432">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="432" execution_time="265">patch(scene)</command>
<command batch="433">clear scene</command>
<command batch="433">[n e f] = createIcosahedron;</command>
<command batch="433">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="433">scene.Vertices = n;</command>
<command batch="433">nPoints = size(scene.Vertices,1);</command>
<command batch="433">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="433">scene.Faces = f;</command>
<command batch="433">scene.FaceColor = 'Flat' ;</command>
<command batch="433">scene.FaceAlpha = .5;</command>
<command batch="433">% scene.Lighting = 'flat';</command>
<command batch="433">cmap = colormap(hot);</command>
<command batch="433">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="433">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="433" execution_time="125">figure(1); patch(scene)</command>
<command batch="434" error="true">clear scene</command>
<command batch="434" error="true">[n e f] = createIcosahedron;</command>
<command batch="434" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="434" error="true">scene.Vertices = n;</command>
<command batch="434" error="true">nPoints = size(scene.Vertices,1);</command>
<command batch="434" error="true">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="434" error="true">scene.Faces = f;</command>
<command batch="434" error="true">scene.FaceColor = 'Flat' ;</command>
<command batch="434" error="true">% scene.FaceAlpha = .5;</command>
<command batch="434" error="true">scene.Lighting = 'flat';</command>
<command batch="434" error="true">cmap = colormap(hot);</command>
<command batch="434" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="434" error="true">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="434" error="true" execution_time="188">figure(1); patch(scene)</command>
<command batch="435">clear scene</command>
<command batch="435">[n e f] = createIcosahedron;</command>
<command batch="435">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="435">scene.Vertices = n;</command>
<command batch="435">nPoints = size(scene.Vertices,1);</command>
<command batch="435">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="435">scene.Faces = f;</command>
<command batch="435">scene.FaceColor = 'Flat' ;</command>
<command batch="435">% scene.FaceAlpha = .5;</command>
<command batch="435">scene.FaceLighting = 'flat';</command>
<command batch="435">cmap = colormap(hot);</command>
<command batch="435">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="435">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="435" execution_time="141">figure(1); patch(scene)</command>
<command batch="436">clear scene</command>
<command batch="436">[n e f] = createIcosahedron;</command>
<command batch="436">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="436">scene.Vertices = n;</command>
<command batch="436">nPoints = size(scene.Vertices,1);</command>
<command batch="436">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="436">scene.Faces = f;</command>
<command batch="436">scene.FaceColor = 'Flat' ;</command>
<command batch="436">% scene.FaceAlpha = .5;</command>
<command batch="436">scene.FaceLighting = 'gouraud';</command>
<command batch="436">cmap = colormap(hot);</command>
<command batch="436">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="436">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="436" execution_time="124">figure(1); patch(scene)</command>
<command batch="437">clear scene</command>
<command batch="437">[n e f] = createIcosahedron;</command>
<command batch="437">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="437">scene.Vertices = n;</command>
<command batch="437">nPoints = size(scene.Vertices,1);</command>
<command batch="437">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="437">scene.Faces = f;</command>
<command batch="437">scene.FaceColor = 'Flat' ;</command>
<command batch="437">% scene.FaceAlpha = .5;</command>
<command batch="437">% scene.FaceLighting = 'gouraud';</command>
<command batch="437">scene.BackFaceLighting = 'lit';</command>
<command batch="437">cmap = colormap(hot);</command>
<command batch="437">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="437">scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="437" execution_time="141">figure(1); patch(scene)</command>
<command error="true" execution_time="31">set(gca,'colormap','hot');</command>
<command batch="438" error="true">clear scene</command>
<command batch="438" error="true">[n e f] = createIcosahedron;</command>
<command batch="438" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="438" error="true">scene.Vertices = n;</command>
<command batch="438" error="true">nPoints = size(scene.Vertices,1);</command>
<command batch="438" error="true">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="438" error="true">scene.Faces = f;</command>
<command batch="438" error="true">scene.FaceColor = 'Flat' ;</command>
<command batch="438" error="true">% scene.FaceAlpha = .5;</command>
<command batch="438" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="438" error="true">scene.BackFaceLighting = 'lit';</command>
<command batch="438" error="true">cmap = colormap(hot);</command>
<command batch="438" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="438" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="438" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="438" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="438" error="true">h=figure(1); patch(scene)</command>
<command batch="438" error="true" execution_time="380">set(h,'colormap','hot');</command>
<command batch="439" error="true">clear scene</command>
<command batch="439" error="true">[n e f] = createIcosahedron;</command>
<command batch="439" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="439" error="true">scene.Vertices = n;</command>
<command batch="439" error="true">nPoints = size(scene.Vertices,1);</command>
<command batch="439" error="true">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="439" error="true">scene.Faces = f;</command>
<command batch="439" error="true">scene.FaceColor = 'Flat' ;</command>
<command batch="439" error="true">% scene.FaceAlpha = .5;</command>
<command batch="439" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="439" error="true">scene.BackFaceLighting = 'lit';</command>
<command batch="439" error="true">cmap = colormap(hot);</command>
<command batch="439" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="439" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="439" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="439" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="439" error="true">h=figure(1); patch(scene);</command>
<command batch="439" error="true">cmap = colormap(hot);</command>
<command batch="439" error="true" execution_time="244">set(h,'colormap',cmap;</command>
<command batch="440">clear scene</command>
<command batch="440">[n e f] = createIcosahedron;</command>
<command batch="440">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="440">scene.Vertices = n;</command>
<command batch="440">nPoints = size(scene.Vertices,1);</command>
<command batch="440">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="440">scene.Faces = f;</command>
<command batch="440">scene.FaceColor = 'Flat' ;</command>
<command batch="440">% scene.FaceAlpha = .5;</command>
<command batch="440">% scene.FaceLighting = 'gouraud';</command>
<command batch="440">scene.BackFaceLighting = 'lit';</command>
<command batch="440">cmap = colormap(hot);</command>
<command batch="440">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="440">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="440">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="440">scene.CDataMapping = 'scaled';</command>
<command batch="440">h=figure(1); patch(scene);</command>
<command batch="440">cmap = colormap(hot);</command>
<command batch="440" execution_time="202">set(h,'colormap',cmap);</command>
<command batch="441">clear scene</command>
<command batch="441">[n e f] = createIcosahedron;</command>
<command batch="441">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="441">scene.Vertices = n;</command>
<command batch="441">nPoints = size(scene.Vertices,1);</command>
<command batch="441">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="441">scene.Faces = f;</command>
<command batch="441">scene.FaceColor = 'Flat' ;</command>
<command batch="441">% scene.FaceAlpha = .5;</command>
<command batch="441">% scene.FaceLighting = 'gouraud';</command>
<command batch="441">% scene.BackFaceLighting = 'lit';</command>
<command batch="441">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="441">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="441">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="441">scene.CDataMapping = 'scaled';</command>
<command batch="441">h=figure(1); patch(scene);</command>
<command batch="441">cmap = colormap(hot);</command>
<command batch="441" execution_time="187">set(h,'colormap',cmap);</command>
<command batch="442">clear scene</command>
<command batch="442">[n e f] = createIcosahedron;</command>
<command batch="442">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="442">scene.Vertices = n;</command>
<command batch="442">nPoints = size(scene.Vertices,1);</command>
<command batch="442">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="442">scene.Faces = f;</command>
<command batch="442">% scene.FaceColor = 'Flat' ;</command>
<command batch="442">% scene.FaceAlpha = .5;</command>
<command batch="442">% scene.FaceLighting = 'gouraud';</command>
<command batch="442">% scene.BackFaceLighting = 'lit';</command>
<command batch="442">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="442">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="442">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="442">scene.CDataMapping = 'scaled';</command>
<command batch="442">h=figure(1); patch(scene);</command>
<command batch="442">cmap = colormap(hot);</command>
<command batch="442" execution_time="172">set(h,'colormap',cmap);</command>
<command batch="443" repeat="2">clear scene</command>
<command batch="443">[n e f] = createIcosahedron;</command>
<command batch="443">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="443">scene.Vertices = n;</command>
<command batch="443">nPoints = size(scene.Vertices,1);</command>
<command batch="443">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="443">scene.Faces = f;</command>
<command batch="443">scene.FaceColor = 'interp' ;</command>
<command batch="443">% scene.FaceAlpha = .5;</command>
<command batch="443">% scene.FaceLighting = 'gouraud';</command>
<command batch="443">% scene.BackFaceLighting = 'lit';</command>
<command batch="443">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="443">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="443">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="443">scene.CDataMapping = 'scaled';</command>
<command batch="443">h=figure(1); patch(scene);</command>
<command batch="443">cmap = colormap(hot);</command>
<command batch="443" execution_time="280">set(h,'colormap',cmap);</command>
<command batch="444">clear scene</command>
<command batch="444">[n e f] = createIcosahedron;</command>
<command batch="444">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="444">scene.Vertices = n;</command>
<command batch="444">nPoints = size(scene.Vertices,1);</command>
<command batch="444">scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="444">scene.Faces = f;</command>
<command batch="444">scene.FaceColor = 'Flat' ;</command>
<command batch="444">% scene.FaceAlpha = .5;</command>
<command batch="444">% scene.FaceLighting = 'gouraud';</command>
<command batch="444">% scene.BackFaceLighting = 'lit';</command>
<command batch="444">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="444">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="444">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="444">scene.CDataMapping = 'scaled';</command>
<command batch="444">h=figure(1); patch(scene);</command>
<command batch="444">cmap = colormap(hot);</command>
<command batch="444" execution_time="234">set(h,'colormap',cmap);</command>
<command execution_time="31">scene.Vertices</command>
<command execution_time="32">scene.Faces</command>
<command execution_time="140">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="94">load('innerMold.mat')</command>
<command execution_time="499">initGL(model)</command>
<command execution_time="31">model</command>
<command batch="445" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="445" error="true">load('innerMold.mat');</command>
<command batch="445" error="true">n = 1;</command>
<command batch="445" error="true">while n &lt;= model.numSlicePoints*length(model.sliceHeights);</command>
<command batch="445" error="true">n</command>
<command batch="445" error="true">f(n,:) = [n, n+1, n+model.numSlicePoints, 2+n+model.numSlicePoints];</command>
<command batch="445" error="true">n = n+1;</command>
<command batch="445" error="true" execution_time="156">end</command>
<command error="true" execution_time="31">f(n,:) = [n, n+1, n+model.numSlicePoints, 2+n+model.numSlicePoints];</command>
<command execution_time="16">[n, n+1, n+model.numSlicePoints, 2+n+model.numSlicePoints];</command>
<command execution_time="15">ans</command>
<command execution_time="16">clear f</command>
<command batch="446">n = 1;</command>
<command batch="446">while n &lt;= model.numSlicePoints*length(model.sliceHeights);</command>
<command batch="446">n</command>
<command batch="446">f(n,:) = [n, n+1, n+model.numSlicePoints, 2+n+model.numSlicePoints];</command>
<command batch="446">n = n+1;</command>
<command batch="446" execution_time="1814">end</command>
<command execution_time="32">size(f)</command>
<command batch="447">n = model.data;</command>
<command batch="447">clear scene</command>
<command batch="447">% [n e f] = createIcosahedron;</command>
<command batch="447">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="447">scene.Vertices = n;</command>
<command batch="447">% nPoints = size(scene.Vertices,1);</command>
<command batch="447">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="447">scene.Faces = f;</command>
<command batch="447">scene.FaceColor = 'Flat' ;</command>
<command batch="447">% scene.FaceAlpha = .5;</command>
<command batch="447">% scene.FaceLighting = 'gouraud';</command>
<command batch="447">% scene.BackFaceLighting = 'lit';</command>
<command batch="447">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="447">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="447">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="447">scene.CDataMapping = 'scaled';</command>
<command batch="447">h=figure(1); patch(scene);</command>
<command batch="447">cmap = colormap(hot);</command>
<command batch="447" execution_time="234">set(h,'colormap',cmap);</command>
<command execution_time="31">size(scene.Vertices)</command>
<command execution_time="16">size(scene.Faces)</command>
<command batch="448">n = 1;</command>
<command batch="448">while n &lt;= model.numSlicePoints*length(model.sliceHeights);</command>
<command batch="448">n</command>
<command batch="448">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="448">n = n+1;</command>
<command batch="448" execution_time="1378">end</command>
<command batch="449">n = model.data;</command>
<command batch="449">clear scene</command>
<command batch="449">% [n e f] = createIcosahedron;</command>
<command batch="449">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="449">scene.Vertices = n;</command>
<command batch="449">% nPoints = size(scene.Vertices,1);</command>
<command batch="449">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="449">scene.Faces = f;</command>
<command batch="449">scene.FaceColor = 'Flat' ;</command>
<command batch="449">% scene.FaceAlpha = .5;</command>
<command batch="449">% scene.FaceLighting = 'gouraud';</command>
<command batch="449">% scene.BackFaceLighting = 'lit';</command>
<command batch="449">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="449">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="449">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="449">scene.CDataMapping = 'scaled';</command>
<command batch="449">h=figure(1); patch(scene);</command>
<command batch="449">cmap = colormap(hot);</command>
<command batch="449" execution_time="203">set(h,'colormap',cmap);</command>
<command error="true" execution_time="31">f(1,:0</command>
<command execution_time="31">f(1,:)</command>
<command execution_time="16">max(max(f))</command>
<command error="true" execution_time="1255">size(v)</command>
<command execution_time="16">size(model.data)</command>
<command execution_time="16">9901-1-model.numSlicePoints</command>
<command batch="450">clear all; close all;</command>
<command batch="450">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="450">load('innerMold.mat');</command>
<command batch="450">n = 1;</command>
<command batch="450">while n &lt; model.numSlicePoints*length(model.sliceHeights);</command>
<command batch="450">n</command>
<command batch="450">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="450">n = n+1;</command>
<command batch="450">end</command>
<command batch="450">n = model.data;</command>
<command batch="450">clear scene</command>
<command batch="450">% [n e f] = createIcosahedron;</command>
<command batch="450">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="450">scene.Vertices = n;</command>
<command batch="450">% nPoints = size(scene.Vertices,1);</command>
<command batch="450">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="450">scene.Faces = f;</command>
<command batch="450">scene.FaceColor = 'Flat' ;</command>
<command batch="450">% scene.FaceAlpha = .5;</command>
<command batch="450">% scene.FaceLighting = 'gouraud';</command>
<command batch="450">% scene.BackFaceLighting = 'lit';</command>
<command batch="450">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="450">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="450">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="450">scene.CDataMapping = 'scaled';</command>
<command batch="450">h=figure(1); patch(scene);</command>
<command batch="450">cmap = colormap(hot);</command>
<command batch="450" execution_time="2312">set(h,'colormap',cmap);</command>
<command execution_time="31">max(max(f))</command>
<command execution_time="16">size(model.data)</command>
<command error="true" execution_time="31">f = (1:9810,:);</command>
<command error="true" execution_time="31">f = f(1:9810,:);</command>
<command batch="451">% sceneZ = [0 0 0 0 0 0];</command>
<command batch="451">clear all; close all;</command>
<command batch="451">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="451">load('innerMold.mat');</command>
<command batch="451">n = 1;</command>
<command batch="451">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="451">n</command>
<command batch="451">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="451">n = n+1;</command>
<command batch="451" execution_time="2039">end</command>
<command execution_time="31">max(max(f))</command>
<command execution_time="31">size(model.data)</command>
<command batch="452">n = model.data;</command>
<command batch="452">clear scene</command>
<command batch="452">% [n e f] = createIcosahedron;</command>
<command batch="452">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="452">scene.Vertices = n;</command>
<command batch="452">% nPoints = size(scene.Vertices,1);</command>
<command batch="452">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="452">scene.Faces = f;</command>
<command batch="452">scene.FaceColor = 'Flat' ;</command>
<command batch="452">% scene.FaceAlpha = .5;</command>
<command batch="452">% scene.FaceLighting = 'gouraud';</command>
<command batch="452">% scene.BackFaceLighting = 'lit';</command>
<command batch="452">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="452">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="452">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="452">scene.CDataMapping = 'scaled';</command>
<command batch="452">h=figure(1); patch(scene);</command>
<command batch="452">cmap = colormap(hot);</command>
<command batch="452" execution_time="171">set(h,'colormap',cmap);</command>
<command batch="453" repeat="2">clear scene</command>
<command batch="453">% [n e f] = createIcosahedron;</command>
<command batch="453">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="453">scene.Vertices = n;</command>
<command batch="453">% nPoints = size(scene.Vertices,1);</command>
<command batch="453">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="453">scene.Faces = f;</command>
<command batch="453">scene.FaceColor = 'Flat';</command>
<command batch="453">scene.LineWidth = 0.01;</command>
<command batch="453">% scene.FaceAlpha = .5;</command>
<command batch="453">% scene.FaceLighting = 'gouraud';</command>
<command batch="453">% scene.BackFaceLighting = 'lit';</command>
<command batch="453">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="453">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="453">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="453">scene.CDataMapping = 'scaled';</command>
<command batch="453">h=figure(1); patch(scene);</command>
<command batch="453">cmap = colormap(hot);</command>
<command batch="453" execution_time="203">set(h,'colormap',cmap);</command>
<command batch="454" repeat="2">clear scene</command>
<command batch="454">% [n e f] = createIcosahedron;</command>
<command batch="454">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="454">scene.Vertices = n;</command>
<command batch="454">% nPoints = size(scene.Vertices,1);</command>
<command batch="454">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="454">scene.Faces = f;</command>
<command batch="454">scene.FaceColor = 'Flat';</command>
<command batch="454">scene.EdgeColor = 'none';</command>
<command batch="454">% scene.FaceAlpha = .5;</command>
<command batch="454">% scene.FaceLighting = 'gouraud';</command>
<command batch="454">% scene.BackFaceLighting = 'lit';</command>
<command batch="454">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="454">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="454">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="454">scene.CDataMapping = 'scaled';</command>
<command batch="454">h=figure(1); patch(scene);</command>
<command batch="454">cmap = colormap(hot);</command>
<command batch="454" execution_time="203">set(h,'colormap',cmap);</command>
<command batch="455" error="true">% ROTATE OBJECT</command>
<command batch="455" error="true">newRotationMatrix = rotx(45);</command>
<command batch="455" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="455" error="true">scene.Vertics(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="455" error="true">end</command>
<command batch="455" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="455" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="455" error="true">scene.Faces = f;</command>
<command batch="455" error="true">scene.FaceColor = 'Flat';</command>
<command batch="455" error="true">scene.EdgeColor = 'none';</command>
<command batch="455" error="true">% scene.FaceAlpha = .5;</command>
<command batch="455" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="455" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="455" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="455" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="455" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="455" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="455" error="true">h=figure(1); patch(scene);</command>
<command batch="455" error="true">cmap = colormap(hot);</command>
<command batch="455" error="true" execution_time="460">set(h,'colormap',cmap);</command>
<command batch="456">newRotationMatrix = rotx(45);</command>
<command batch="456">for idx = 1:size(scene.Vertices,1)</command>
<command batch="456">scene.Vertics(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="456" execution_time="172">end</command>
<command batch="457" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="457" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="457" error="true">scene.Faces = f;</command>
<command batch="457" error="true">scene.FaceColor = 'Flat';</command>
<command batch="457" error="true">scene.EdgeColor = 'none';</command>
<command batch="457" error="true">% scene.FaceAlpha = .5;</command>
<command batch="457" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="457" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="457" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="457" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="457" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="457" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="457" error="true">h=figure(1); patch(scene);</command>
<command batch="457" error="true">cmap = colormap(hot);</command>
<command batch="457" error="true" execution_time="147">set(h,'colormap',cmap);</command>
<command batch="458">clear all; close all;</command>
<command batch="458">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="458">load('innerMold.mat');</command>
<command batch="458">n = 1;</command>
<command batch="458">% mesh</command>
<command batch="458">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="458">n</command>
<command batch="458">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="458">n = n+1;</command>
<command batch="458">end</command>
<command batch="458">n = model.data;</command>
<command batch="458">clear scene</command>
<command batch="458">% [n e f] = createIcosahedron;</command>
<command batch="458">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="458">scene.Vertices = n;</command>
<command batch="458">% ROTATE OBJECT</command>
<command batch="458">newRotationMatrix = rotx(45);</command>
<command batch="458">for idx = 1:size(scene.Vertices,1)</command>
<command batch="458">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="458">end</command>
<command batch="458">% nPoints = size(scene.Vertices,1);</command>
<command batch="458">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="458">scene.Faces = f;</command>
<command batch="458">scene.FaceColor = 'Flat';</command>
<command batch="458">scene.EdgeColor = 'none';</command>
<command batch="458">% scene.FaceAlpha = .5;</command>
<command batch="458">% scene.FaceLighting = 'gouraud';</command>
<command batch="458">% scene.BackFaceLighting = 'lit';</command>
<command batch="458">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="458">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="458">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="458">scene.CDataMapping = 'scaled';</command>
<command batch="458">h=figure(1); patch(scene);</command>
<command batch="458">cmap = colormap(hot);</command>
<command batch="458" execution_time="2436">set(h,'colormap',cmap);</command>
<command execution_time="62">axis equal</command>
<command batch="459">R = rotx(45);</command>
<command batch="459">% ROTATE OBJECT</command>
<command batch="459">for idx = 1:90</command>
<command batch="459">newRotationmatrix = rotz(idx) * R;</command>
<command batch="459">for idx = 1:size(scene.Vertices,1)</command>
<command batch="459">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="459">end</command>
<command batch="459">h=figure(1); patch(scene);</command>
<command batch="459">cmap = colormap(hot);</command>
<command batch="459">set(h,'colormap',cmap);</command>
<command batch="459" execution_time="2449">end</command>
<command batch="460" error="true">for idx = 1:90</command>
<command batch="460" error="true">newRotationmatrix = rotz(idx) * R;</command>
<command batch="460" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="460" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="460" error="true">end</command>
<command batch="460" error="true">h=figure(1); patch(scene);</command>
<command batch="460" error="true">holdoff;</command>
<command batch="460" error="true">cmap = colormap(hot);</command>
<command batch="460" error="true">set(h,'colormap',cmap);</command>
<command batch="460" error="true" execution_time="250">end</command>
<command batch="461">R = rotx(45);</command>
<command batch="461">% ROTATE OBJECT</command>
<command batch="461">for idx = 1:90</command>
<command batch="461">newRotationmatrix = rotz(idx) * R;</command>
<command batch="461">for idx = 1:size(scene.Vertices,1)</command>
<command batch="461">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="461">end</command>
<command batch="461">h=figure(1); patch(scene);</command>
<command batch="461">hold off;</command>
<command batch="461">cmap = colormap(hot);</command>
<command batch="461">set(h,'colormap',cmap);</command>
<command batch="461" execution_time="2619">end</command>
<command batch="462">R = rotx(45);</command>
<command batch="462">% ROTATE OBJECT</command>
<command batch="462">for idx = 1:90</command>
<command batch="462">newRotationmatrix = rotz(idx) * R;</command>
<command batch="462">for idx = 1:size(scene.Vertices,1)</command>
<command batch="462">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="462">end</command>
<command batch="462">h=figure(1); patch(scene);</command>
<command batch="462">pause(0.01)</command>
<command batch="462">cmap = colormap(hot);</command>
<command batch="462">set(h,'colormap',cmap);</command>
<command batch="462" execution_time="7269">end</command>
<command batch="463">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="463">scene.CDataMapping = 'scaled';</command>
<command batch="463">R = rotx(45);</command>
<command batch="463">% ROTATE OBJECT</command>
<command batch="463">for idx = 1:90</command>
<command batch="463">newRotationmatrix = rotz(idx) * R;</command>
<command batch="463">for idx = 1:size(scene.Vertices,1)</command>
<command batch="463">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="463">end</command>
<command batch="463">h=figure(1); patch(scene);</command>
<command batch="463">pause(0.01)</command>
<command batch="463">hold off</command>
<command batch="463">cmap = colormap(hot);</command>
<command batch="463">set(h,'colormap',cmap);</command>
<command batch="463" execution_time="7553">end</command>
<command batch="464">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="464">scene.CDataMapping = 'scaled';</command>
<command batch="464">R = rotx(45);</command>
<command batch="464">h=figure(1);</command>
<command batch="464">% ROTATE OBJECT</command>
<command batch="464">for idx = 1:90</command>
<command batch="464">newRotationmatrix = rotz(idx) * R;</command>
<command batch="464">for idx = 1:size(scene.Vertices,1)</command>
<command batch="464">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="464">end</command>
<command batch="464">patch(scene);</command>
<command batch="464">pause(0.01)</command>
<command batch="464">hold off</command>
<command batch="464">cmap = colormap(hot);</command>
<command batch="464">set(h,'colormap',cmap);</command>
<command batch="464" execution_time="7318">end</command>
<command batch="465">R = rotx(45);</command>
<command batch="465">h=figure(1);</command>
<command batch="465">% ROTATE OBJECT</command>
<command batch="465">for idx = 1:90</command>
<command batch="465">newRotationmatrix = rotz(idx) * R;</command>
<command batch="465">for idx = 1:size(scene.Vertices,1)</command>
<command batch="465">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="465">end</command>
<command batch="465">patch(scene);</command>
<command batch="465">pause(1)</command>
<command batch="465">hold off</command>
<command batch="465">cmap = colormap(hot);</command>
<command batch="465">set(h,'colormap',cmap);</command>
<command batch="465" execution_time="47150">end</command>
<command execution_time="16">scene</command>
<command batch="466">R = rotx(45);</command>
<command batch="466">h=figure(1);</command>
<command batch="466">% ROTATE OBJECT</command>
<command batch="466">for idx = 1:90</command>
<command batch="466">newRotationmatrix = rotz(idx) * R;</command>
<command batch="466">for idx = 1:size(scene.Vertices,1)</command>
<command batch="466">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="466">end</command>
<command batch="466">patch(scene);</command>
<command batch="466">refresh</command>
<command batch="466">cmap = colormap(hot);</command>
<command batch="466">set(h,'colormap',cmap);</command>
<command batch="466" execution_time="2566">end</command>
<command execution_time="32">refresh</command>
<command execution_time="31">refresh(h)</command>
<command batch="467">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="467">scene.CDataMapping = 'scaled';</command>
<command batch="467">R = rotx(45);</command>
<command batch="467">h=figure(1);</command>
<command batch="467">% ROTATE OBJECT</command>
<command batch="467">for idx = 1:90</command>
<command batch="467">newRotationmatrix = rotz(idx) * R;</command>
<command batch="467">for idx = 1:size(scene.Vertices,1)</command>
<command batch="467">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="467">end</command>
<command batch="467">refresh</command>
<command batch="467">patch(scene);</command>
<command batch="467">cmap = colormap(hot);</command>
<command batch="467">set(h,'colormap',cmap);</command>
<command batch="467" execution_time="2575">end</command>
<command batch="468">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="468">scene.CDataMapping = 'scaled';</command>
<command batch="468">R = rotx(45);</command>
<command batch="468">h=figure(1);</command>
<command batch="468">% ROTATE OBJECT</command>
<command batch="468">for idx = 1:90</command>
<command batch="468">newRotationmatrix = rotz(idx) * R;</command>
<command batch="468">for idx = 1:size(scene.Vertices,1)</command>
<command batch="468">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="468">end</command>
<command batch="468">refresh</command>
<command batch="468">patch(scene,'EraseMode','xor');</command>
<command batch="468">cmap = colormap(hot);</command>
<command batch="468">set(h,'colormap',cmap);</command>
<command batch="468" execution_time="2770">end</command>
<command error="true" execution_time="32">scene.BeingDeleted</command>
<command batch="469" error="true">n = model.data;</command>
<command batch="469" error="true">clear scene</command>
<command batch="469" error="true">% [n e f] = createIcosahedron;</command>
<command batch="469" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="469" error="true">scene.Vertices = n;</command>
<command batch="469" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="469" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="469" error="true">scene.Faces = f;</command>
<command batch="469" error="true">scene.FaceColor = 'Flat';</command>
<command batch="469" error="true">scene.EdgeColor = 'none';</command>
<command batch="469" error="true">scene.BeingDelted = 'on';</command>
<command batch="469" error="true">% scene.FaceAlpha = .5;</command>
<command batch="469" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="469" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="469" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="469" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="469" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="469" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="469" error="true">R = rotx(45);</command>
<command batch="469" error="true">h=figure(1);</command>
<command batch="469" error="true">% ROTATE OBJECT</command>
<command batch="469" error="true">for idx = 1:90</command>
<command batch="469" error="true">newRotationmatrix = rotz(idx) * R;</command>
<command batch="469" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="469" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="469" error="true">end</command>
<command batch="469" error="true">refresh</command>
<command batch="469" error="true">patch(scene);</command>
<command batch="469" error="true">cmap = colormap(hot);</command>
<command batch="469" error="true">set(h,'colormap',cmap);</command>
<command batch="469" error="true" execution_time="258">end</command>
<command batch="470" error="true">n = model.data;</command>
<command batch="470" error="true">clear scene</command>
<command batch="470" error="true">% [n e f] = createIcosahedron;</command>
<command batch="470" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="470" error="true">scene.Vertices = n;</command>
<command batch="470" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="470" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="470" error="true">scene.Faces = f;</command>
<command batch="470" error="true">scene.FaceColor = 'Flat';</command>
<command batch="470" error="true">scene.EdgeColor = 'none';</command>
<command batch="470" error="true">scene.BeingDeleted = 'on';</command>
<command batch="470" error="true">% scene.FaceAlpha = .5;</command>
<command batch="470" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="470" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="470" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="470" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="470" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="470" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="470" error="true">R = rotx(45);</command>
<command batch="470" error="true">h=figure(1);</command>
<command batch="470" error="true">% ROTATE OBJECT</command>
<command batch="470" error="true">for idx = 1:90</command>
<command batch="470" error="true">newRotationmatrix = rotz(idx) * R;</command>
<command batch="470" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="470" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="470" error="true">end</command>
<command batch="470" error="true">refresh</command>
<command batch="470" error="true">patch(scene);</command>
<command batch="470" error="true">cmap = colormap(hot);</command>
<command batch="470" error="true">set(h,'colormap',cmap);</command>
<command batch="470" error="true" execution_time="315">end</command>
<command batch="471">p = patch('erasemode','xor');</command>
<command batch="471" execution_time="62">axis([-1 2 -1 2])</command>
<command execution_time="78">p = patch('erasemode','xor');</command>
<command execution_time="16">axis([-1 2 -1 2])</command>
<command batch="472">set(p,'faces',[1 3 2],'vertices',rand(3,2))</command>
<command batch="472" execution_time="78">set(p,'faces',[3 1 2],'vertices',rand(3,2))</command>
<command execution_time="16" repeat="2">set(p,'faces',[3 1 2],'vertices',rand(3,2))</command>
<command execution_time="172">h = animatedline;</command>
<command batch="473" error="true">for idx = 1:90</command>
<command batch="473" error="true">newRotationmatrix = rotz(idx) * R;</command>
<command batch="473" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="473" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="473" error="true">end</command>
<command batch="473" error="true">refresh</command>
<command batch="473" error="true">patch(scene);</command>
<command batch="473" error="true">cmap = colormap(hot);</command>
<command batch="473" error="true">set(h,'colormap',cmap);</command>
<command batch="473" error="true" execution_time="124">end</command>
<command batch="474" error="true">clear all; close all;</command>
<command batch="474" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="474" error="true">load('innerMold.mat');</command>
<command batch="474" error="true">n = 1;</command>
<command batch="474" error="true">% mesh</command>
<command batch="474" error="true">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="474" error="true">n</command>
<command batch="474" error="true">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="474" error="true">n = n+1;</command>
<command batch="474" error="true">end</command>
<command batch="474" error="true">n = model.data;</command>
<command batch="474" error="true">clear scene</command>
<command batch="474" error="true">% [n e f] = createIcosahedron;</command>
<command batch="474" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="474" error="true">scene.Vertices = n;</command>
<command batch="474" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="474" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="474" error="true">scene.Faces = f;</command>
<command batch="474" error="true">scene.FaceColor = 'Flat';</command>
<command batch="474" error="true">scene.EdgeColor = 'none';</command>
<command batch="474" error="true">% scene.FaceAlpha = .5;</command>
<command batch="474" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="474" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="474" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="474" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="474" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="474" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="474" error="true">R = rotx(45);</command>
<command batch="474" error="true">h = animatedline;</command>
<command batch="474" error="true">% ROTATE OBJECT</command>
<command batch="474" error="true">for idx = 1:90</command>
<command batch="474" error="true">newRotationmatrix = rotz(idx) * R;</command>
<command batch="474" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="474" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="474" error="true">end</command>
<command batch="474" error="true">refresh</command>
<command batch="474" error="true">patch(scene);</command>
<command batch="474" error="true">cmap = colormap(hot);</command>
<command batch="474" error="true">set(h,'colormap',cmap);</command>
<command batch="474" error="true" execution_time="2181">end</command>
<command batch="475" error="true">R = rotx(45);</command>
<command batch="475" error="true">h = animatedline;</command>
<command batch="475" error="true">% ROTATE OBJECT</command>
<command batch="475" error="true">for idx = 1:90</command>
<command batch="475" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="475" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="475" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="475" error="true">end</command>
<command batch="475" error="true">refresh</command>
<command batch="475" error="true">patch(scene);</command>
<command batch="475" error="true">cmap = colormap(hot);</command>
<command batch="475" error="true">set(h,'colormap',cmap);</command>
<command batch="475" error="true" execution_time="203">end</command>
<command batch="476" error="true">n = model.data;</command>
<command batch="476" error="true">clear scene</command>
<command batch="476" error="true">% [n e f] = createIcosahedron;</command>
<command batch="476" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="476" error="true">scene.Vertices = n;</command>
<command batch="476" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="476" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="476" error="true">scene.Faces = f;</command>
<command batch="476" error="true">scene.FaceColor = 'Flat';</command>
<command batch="476" error="true">scene.EdgeColor = 'none';</command>
<command batch="476" error="true">% scene.FaceAlpha = .5;</command>
<command batch="476" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="476" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="476" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="476" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="476" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="476" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="476" error="true">R = rotx(45);</command>
<command batch="476" error="true">h = animatedline;</command>
<command batch="476" error="true">% ROTATE OBJECT</command>
<command batch="476" error="true">for idx = 1:90</command>
<command batch="476" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="476" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="476" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="476" error="true">end</command>
<command batch="476" error="true">refresh</command>
<command batch="476" error="true">h1=patch(scene);</command>
<command batch="476" error="true">cmap = colormap(hot);</command>
<command batch="476" error="true">set(h1,'colormap',cmap);</command>
<command batch="476" error="true" execution_time="331">end</command>
<command batch="477">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="477">scene.CDataMapping = 'scaled';</command>
<command batch="477">R = rotx(45);</command>
<command batch="477">h = animatedline;</command>
<command batch="477">% ROTATE OBJECT</command>
<command batch="477">for idx = 1:90</command>
<command batch="477">newRotationMatrix = rotz(idx) * R;</command>
<command batch="477">for idx = 1:size(scene.Vertices,1)</command>
<command batch="477">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="477">end</command>
<command batch="477">refresh</command>
<command batch="477">patch(scene);</command>
<command batch="477">cmap = colormap(hot);</command>
<command batch="477">% set(h1,'colormap',cmap);</command>
<command batch="477" execution_time="2451">end</command>
<command batch="478" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="478" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="478" error="true">R = rotx(45);</command>
<command batch="478" error="true">fig = figure(1);</command>
<command batch="478" error="true">cmap = colormap(hot);</command>
<command batch="478" error="true">set(h,'colormap',cmap);</command>
<command batch="478" error="true">h = path(scene);</command>
<command batch="478" error="true">% ROTATE OBJECT</command>
<command batch="478" error="true">for idx = 1:90</command>
<command batch="478" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="478" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="478" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="478" error="true">end</command>
<command batch="478" error="true">h.Vertices = scene.Vertices;</command>
<command batch="478" error="true">drawnow expose</command>
<command batch="478" error="true" execution_time="187">end</command>
<command batch="479" error="true">clear all; close all;</command>
<command batch="479" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="479" error="true">load('innerMold.mat');</command>
<command batch="479" error="true">n = 1;</command>
<command batch="479" error="true">% mesh</command>
<command batch="479" error="true">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="479" error="true">n</command>
<command batch="479" error="true">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="479" error="true">n = n+1;</command>
<command batch="479" error="true">end</command>
<command batch="479" error="true">n = model.data;</command>
<command batch="479" error="true">clear scene</command>
<command batch="479" error="true">% [n e f] = createIcosahedron;</command>
<command batch="479" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="479" error="true">scene.Vertices = n;</command>
<command batch="479" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="479" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="479" error="true">scene.Faces = f;</command>
<command batch="479" error="true">scene.FaceColor = 'Flat';</command>
<command batch="479" error="true">scene.EdgeColor = 'none';</command>
<command batch="479" error="true">% scene.FaceAlpha = .5;</command>
<command batch="479" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="479" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="479" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="479" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="479" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="479" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="479" error="true">R = rotx(45);</command>
<command batch="479" error="true">fig = figure(1);</command>
<command batch="479" error="true">cmap = colormap(hot);</command>
<command batch="479" error="true">set(h,'colormap',cmap);</command>
<command batch="479" error="true">h = path(scene);</command>
<command batch="479" error="true">% ROTATE OBJECT</command>
<command batch="479" error="true">for idx = 1:90</command>
<command batch="479" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="479" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="479" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="479" error="true">end</command>
<command batch="479" error="true">h.Vertices = scene.Vertices;</command>
<command batch="479" error="true">drawnow expose</command>
<command batch="479" error="true" execution_time="2423">end</command>
<command batch="480" error="true">set(fig,'colormap',cmap);</command>
<command batch="480" error="true">h = path(scene);</command>
<command batch="480" error="true">% ROTATE OBJECT</command>
<command batch="480" error="true">for idx = 1:90</command>
<command batch="480" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="480" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="480" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="480" error="true">end</command>
<command batch="480" error="true">h.Vertices = scene.Vertices;</command>
<command batch="480" error="true">drawnow expose</command>
<command batch="480" error="true" execution_time="172">end</command>
<command batch="481" error="true" repeat="2">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="481" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="481" error="true">R = rotx(45);</command>
<command batch="481" error="true">fig = figure(1);</command>
<command batch="481" error="true">cmap = colormap(hot);</command>
<command batch="481" error="true">set(fig,'colormap',cmap);</command>
<command batch="481" error="true">h = path('erasemode','xor');</command>
<command batch="481" error="true">% ROTATE OBJECT</command>
<command batch="481" error="true">for idx = 1:90</command>
<command batch="481" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="481" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="481" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="481" error="true">end</command>
<command batch="481" error="true">set(h,'vertices',scene.Vertices);</command>
<command batch="481" error="true" execution_time="32">end</command>
<command batch="482" error="true" repeat="2">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="482" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="482" error="true">R = rotx(45);</command>
<command batch="482" error="true">fig = figure(1);</command>
<command batch="482" error="true">cmap = colormap(hot);</command>
<command batch="482" error="true">set(fig,'colormap',cmap);</command>
<command batch="482" error="true" execution_time="20">h = path('erasemode','xor');</command>
</session>
<session>
<command time_stamp="151209d96c7">%-- 11/19/2015 11:39 AM --%</command>
<command batch="483" error="true">clear all; close all;</command>
<command batch="483" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="483" error="true">load('innerMold.mat');</command>
<command batch="483" error="true">n = 1;</command>
<command batch="483" error="true">% mesh</command>
<command batch="483" error="true">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="483" error="true">n</command>
<command batch="483" error="true">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="483" error="true">n = n+1;</command>
<command batch="483" error="true">end</command>
<command batch="483" error="true">n = model.data;</command>
<command batch="483" error="true">clear scene</command>
<command batch="483" error="true">% [n e f] = createIcosahedron;</command>
<command batch="483" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="483" error="true">scene.Vertices = n;</command>
<command batch="483" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="483" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="483" error="true">scene.Faces = f;</command>
<command batch="483" error="true">scene.FaceColor = 'Flat';</command>
<command batch="483" error="true">scene.EdgeColor = 'none';</command>
<command batch="483" error="true">% scene.FaceAlpha = .5;</command>
<command batch="483" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="483" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="483" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="483" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="483" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="483" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="483" error="true">R = rotx(45);</command>
<command batch="483" error="true">fig = figure(1);</command>
<command batch="483" error="true">cmap = colormap(hot);</command>
<command batch="483" error="true">set(fig,'colormap',cmap);</command>
<command batch="483" error="true">h = path('erasemode','xor');</command>
<command batch="483" error="true">% ROTATE OBJECT</command>
<command batch="483" error="true">for idx = 1:90</command>
<command batch="483" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="483" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="483" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="483" error="true">end</command>
<command batch="483" error="true">set(h,'vertices',scene.Vertices);</command>
<command batch="483" error="true" execution_time="5444">end</command>
</session>
<session>
<command time_stamp="151209f8e73">%-- 11/19/2015 11:41 AM --%</command>
<command batch="484" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="484" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="484" error="true">scene.EraseMode = 'oxr';</command>
<command batch="484" error="true">R = rotx(45);</command>
<command batch="484" error="true">fig = figure(1);</command>
<command batch="484" error="true">cmap = colormap(hot);</command>
<command batch="484" error="true">set(fig,'colormap',cmap);</command>
<command batch="484" error="true">% ROTATE OBJECT</command>
<command batch="484" error="true">for idx = 1:90</command>
<command batch="484" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="484" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="484" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="484" error="true">end</command>
<command batch="484" error="true">path(scene);</command>
<command batch="484" error="true" execution_time="1401">end</command>
<command error="true" execution_time="592">patch(scene);</command>
<command batch="485" error="true">clear scene</command>
<command batch="485" error="true">% [n e f] = createIcosahedron;</command>
<command batch="485" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="485" error="true">scene.Vertices = n;</command>
<command batch="485" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="485" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="485" error="true">scene.Faces = f;</command>
<command batch="485" error="true">scene.FaceColor = 'Flat';</command>
<command batch="485" error="true">scene.EdgeColor = 'none';</command>
<command batch="485" error="true">% scene.FaceAlpha = .5;</command>
<command batch="485" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="485" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="485" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="485" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="485" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="485" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="485" error="true">scene.EraseMode = 'oxr';</command>
<command batch="485" error="true">R = rotx(45);</command>
<command batch="485" error="true">fig = figure(1);</command>
<command batch="485" error="true">cmap = colormap(hot);</command>
<command batch="485" error="true">set(fig,'colormap',cmap);</command>
<command batch="485" error="true">% ROTATE OBJECT</command>
<command batch="485" error="true">for idx = 1:90</command>
<command batch="485" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="485" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="485" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="485" error="true">end</command>
<command batch="485" error="true">patch(scene);</command>
<command batch="485" error="true" execution_time="827">end</command>
<command batch="486" error="true">n = model.data;</command>
<command batch="486" error="true">clear scene</command>
<command batch="486" error="true">% [n e f] = createIcosahedron;</command>
<command batch="486" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="486" error="true">scene.Vertices = n;</command>
<command batch="486" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="486" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="486" error="true">scene.Faces = f;</command>
<command batch="486" error="true">scene.FaceColor = 'Flat';</command>
<command batch="486" error="true">scene.EdgeColor = 'none';</command>
<command batch="486" error="true">% scene.FaceAlpha = .5;</command>
<command batch="486" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="486" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="486" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="486" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="486" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="486" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="486" error="true">scene.EraseMode = 'oxr';</command>
<command batch="486" error="true">R = rotx(45);</command>
<command batch="486" error="true">fig = figure(1);</command>
<command batch="486" error="true">cmap = colormap(hot);</command>
<command batch="486" error="true">set(fig,'colormap',cmap);</command>
<command batch="486" error="true">% ROTATE OBJECT</command>
<command batch="486" error="true">for idx = 1:90</command>
<command batch="486" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="486" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="486" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="486" error="true">end</command>
<command batch="486" error="true">patch(scene);</command>
<command batch="486" error="true" execution_time="661">end</command>
<command batch="487" error="true">clear all; close all;</command>
<command batch="487" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="487" error="true">load('innerMold.mat');</command>
<command batch="487" error="true">n = 1;</command>
<command batch="487" error="true">% mesh</command>
<command batch="487" error="true">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="487" error="true">n</command>
<command batch="487" error="true">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="487" error="true">n = n+1;</command>
<command batch="487" error="true">end</command>
<command batch="487" error="true">n = model.data;</command>
<command batch="487" error="true">clear scene</command>
<command batch="487" error="true">% [n e f] = createIcosahedron;</command>
<command batch="487" error="true">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="487" error="true">scene.Vertices = n;</command>
<command batch="487" error="true">% nPoints = size(scene.Vertices,1);</command>
<command batch="487" error="true">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="487" error="true">scene.Faces = f;</command>
<command batch="487" error="true">scene.FaceColor = 'Flat';</command>
<command batch="487" error="true">scene.EdgeColor = 'none';</command>
<command batch="487" error="true">% scene.FaceAlpha = .5;</command>
<command batch="487" error="true">% scene.FaceLighting = 'gouraud';</command>
<command batch="487" error="true">% scene.BackFaceLighting = 'lit';</command>
<command batch="487" error="true">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="487" error="true">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="487" error="true">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="487" error="true">scene.CDataMapping = 'scaled';</command>
<command batch="487" error="true">scene.EraseMode = 'oxr';</command>
<command batch="487" error="true">R = rotx(45);</command>
<command batch="487" error="true">fig = figure(1);</command>
<command batch="487" error="true">cmap = colormap(hot);</command>
<command batch="487" error="true">set(fig,'colormap',cmap);</command>
<command batch="487" error="true">% ROTATE OBJECT</command>
<command batch="487" error="true">for idx = 1:90</command>
<command batch="487" error="true">newRotationMatrix = rotz(idx) * R;</command>
<command batch="487" error="true">for idx = 1:size(scene.Vertices,1)</command>
<command batch="487" error="true">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="487" error="true">end</command>
<command batch="487" error="true">patch(scene);</command>
<command batch="487" error="true" execution_time="2581">end</command>
<command batch="488">clear scene</command>
<command batch="488">% [n e f] = createIcosahedron;</command>
<command batch="488">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="488">scene.Vertices = n;</command>
<command batch="488">% nPoints = size(scene.Vertices,1);</command>
<command batch="488">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="488">scene.Faces = f;</command>
<command batch="488">scene.FaceColor = 'Flat';</command>
<command batch="488">scene.EdgeColor = 'none';</command>
<command batch="488">% scene.FaceAlpha = .5;</command>
<command batch="488">% scene.FaceLighting = 'gouraud';</command>
<command batch="488">% scene.BackFaceLighting = 'lit';</command>
<command batch="488">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="488">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="488">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="488">scene.CDataMapping = 'scaled';</command>
<command batch="488">scene.EraseMode = 'xor';</command>
<command batch="488">R = rotx(45);</command>
<command batch="488">fig = figure(1);</command>
<command batch="488">cmap = colormap(hot);</command>
<command batch="488">set(fig,'colormap',cmap);</command>
<command batch="488">% ROTATE OBJECT</command>
<command batch="488">for idx = 1:90</command>
<command batch="488">newRotationMatrix = rotz(idx) * R;</command>
<command batch="488">for idx = 1:size(scene.Vertices,1)</command>
<command batch="488">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="488">end</command>
<command batch="488">patch(scene);</command>
<command batch="488" execution_time="2910">end</command>
<command batch="489" error="true">figure('units','normalized',...</command>
<command batch="489" error="true">'position',[0.1, 0.1, 0.7, 0.7],...</command>
<command batch="489" error="true">'menubar','none');</command>
<command batch="489" error="true">axes('units','normalized',...</command>
<command batch="489" error="true">'position',[0.5, 0.5, 0.4, 0.4])</command>
<command batch="489" error="true">x1 = 3;</command>
<command batch="489" error="true">x2 = 5;</command>
<command batch="489" error="true">y1 = 2;</command>
<command batch="489" error="true">y2 = 3;</command>
<command batch="489" error="true">p1 = patch([x1,x1,x2,x2],[y1,y2,y2,y1],[1,0,0]);</command>
<command batch="489" error="true">axis([0 6 0 6])</command>
<command batch="489" error="true">while true</command>
<command batch="489" error="true">xold = get(p1,'xdata');</command>
<command batch="489" error="true">set(p1,'xdata',xold + 0.01)</command>
<command batch="489" error="true">yold = get(p1,'ydata');</command>
<command batch="489" error="true">set(p1,'ydata',yold + 0.01)</command>
<command batch="489" error="true">drawnow</command>
<command batch="489" error="true" execution_time="9474">end</command>
<command batch="490">clear all; close all;</command>
<command batch="490">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="490">load('innerMold.mat');</command>
<command batch="490">n = 1;</command>
<command batch="490">% mesh</command>
<command batch="490">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="490">n</command>
<command batch="490">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="490">n = n+1;</command>
<command batch="490">end</command>
<command batch="490">n = model.data;</command>
<command batch="490">clear scene</command>
<command batch="490">% [n e f] = createIcosahedron;</command>
<command batch="490">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="490">scene.Vertices = n;</command>
<command batch="490">% nPoints = size(scene.Vertices,1);</command>
<command batch="490">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="490">scene.Faces = f;</command>
<command batch="490">scene.FaceColor = 'Flat';</command>
<command batch="490">scene.EdgeColor = 'none';</command>
<command batch="490">% scene.FaceAlpha = .5;</command>
<command batch="490">% scene.FaceLighting = 'gouraud';</command>
<command batch="490">% scene.BackFaceLighting = 'lit';</command>
<command batch="490">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="490">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="490">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="490">scene.CDataMapping = 'scaled';</command>
<command batch="490">scene.EraseMode = 'xor';</command>
<command batch="490">R = rotx(45);</command>
<command batch="490">fig = figure(1);</command>
<command batch="490">cmap = colormap(hot);</command>
<command batch="490">set(fig,'colormap',cmap);</command>
<command batch="490">p1 = patch(scene);</command>
<command batch="490">% ROTATE OBJECT</command>
<command batch="490">for idx = 1:90</command>
<command batch="490">newRotationMatrix = rotz(idx) * R;</command>
<command batch="490">for idx = 1:size(scene.Vertices,1)</command>
<command batch="490">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="490">end</command>
<command batch="490">set(p1,'vertices',scene.Vertices);</command>
<command batch="490">drawnow</command>
<command batch="490" execution_time="9264">end</command>
<command execution_time="437">open initGl</command>
<command batch="491" error="true">fig = figure(1);</command>
<command batch="491" error="true">cmap = colormap(hot);</command>
<command batch="491" error="true">set(fig,'colormap',cmap);</command>
<command batch="491" error="true">% DRAW SCENE</command>
<command batch="491" error="true">axes1 = axes('Parent',fig,...</command>
<command batch="491" error="true">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="491" error="true">'ZColor',[0 0 0],...</command>
<command batch="491" error="true">'YColor',[0 0 0],...</command>
<command batch="491" error="true">'XColor',[0 0 0],...</command>
<command batch="491" error="true">'GridAlpha',1,...</command>
<command batch="491" error="true">'GridColor',[0 0 0]);</command>
<command batch="491" error="true">box(axes1,'on');</command>
<command batch="491" error="true">grid(axes1,'on');</command>
<command batch="491" error="true">hold(axes1,'on');</command>
<command batch="491" error="true" execution_time="848">xlim([object.minX, object.maxX]); ylim([object.minY, object.maxY]);</command>
<command batch="492">fig = figure(1);</command>
<command batch="492">cmap = colormap(hot);</command>
<command batch="492">set(fig,'colormap',cmap);</command>
<command batch="492">% DRAW SCENE</command>
<command batch="492">axes1 = axes('Parent',fig,...</command>
<command batch="492">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="492">'ZColor',[0 0 0],...</command>
<command batch="492">'YColor',[0 0 0],...</command>
<command batch="492">'XColor',[0 0 0],...</command>
<command batch="492">'GridAlpha',1,...</command>
<command batch="492">'GridColor',[0 0 0]);</command>
<command batch="492">box(axes1,'on');</command>
<command batch="492">grid(axes1,'on');</command>
<command batch="492" execution_time="140">hold(axes1,'on');</command>
<command batch="493">scene.Vertices = n;</command>
<command batch="493">% nPoints = size(scene.Vertices,1);</command>
<command batch="493">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="493">scene.Faces = f;</command>
<command batch="493">scene.FaceColor = 'Flat';</command>
<command batch="493">scene.EdgeColor = 'none';</command>
<command batch="493">% scene.FaceAlpha = .5;</command>
<command batch="493">% scene.FaceLighting = 'gouraud';</command>
<command batch="493">% scene.BackFaceLighting = 'lit';</command>
<command batch="493">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="493">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="493">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="493">scene.CDataMapping = 'scaled';</command>
<command batch="493">scene.EraseMode = 'xor';</command>
<command batch="493">R = rotx(45);</command>
<command batch="493">fig = figure(1);</command>
<command batch="493">cmap = colormap(hot);</command>
<command batch="493">set(fig,'colormap',cmap);</command>
<command batch="493">% DRAW SCENE</command>
<command batch="493">axes1 = axes('Parent',fig,...</command>
<command batch="493">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="493">'ZColor',[0 0 0],...</command>
<command batch="493">'YColor',[0 0 0],...</command>
<command batch="493">'XColor',[0 0 0],...</command>
<command batch="493">'GridAlpha',1,...</command>
<command batch="493">'GridColor',[0 0 0]);</command>
<command batch="493">box(axes1,'on');</command>
<command batch="493">grid(axes1,'on');</command>
<command batch="493">hold(axes1,'on');</command>
<command batch="493">% xlim([object.minX, object.maxX]); ylim([object.minY, object.maxY]);</command>
<command batch="493">p1 = patch(scene);</command>
<command batch="493">% ROTATE OBJECT</command>
<command batch="493">for idx = 1:90</command>
<command batch="493">newRotationMatrix = rotz(idx) * R;</command>
<command batch="493">for idx = 1:size(scene.Vertices,1)</command>
<command batch="493">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="493">end</command>
<command batch="493">set(p1,'vertices',scene.Vertices);</command>
<command batch="493">drawnow</command>
<command batch="493" execution_time="7362">end</command>
<command execution_time="140">figure; h2 = patch()</command>
<command execution_time="31">whos f</command>
<command batch="494" error="true">ft = bsxfun(@add, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="494" error="true">0:length(model.numSlicePoints*(length(model.sliceHeights)-1))-1);</command>
<command batch="494" error="true" execution_time="47">ft = bsxfun(@add,ft,[0,1,model.numSlicePOints,1+model.numSlicePOints);</command>
<command batch="495" error="true">ft = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="495" error="true">0:length(model.numSlicePoints*(length(model.sliceHeights)-1))-1);</command>
<command batch="495" error="true" execution_time="46">ft = bsxfun(@plus,ft,[0,1,model.numSlicePOints,1+model.numSlicePOints);</command>
<command error="true" execution_time="31">ft = bsxfun(@plus,ft,[0,1,model.numSlicePOints,1+model.numSlicePOints]);</command>
<command execution_time="16">ft = bsxfun(@plus,ft,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command execution_time="16">size(ft)</command>
<command execution_time="31">size(f)</command>
<command execution_time="16">size(model.data)</command>
<command error="true" execution_time="78">figure; imagesc(f(1:end-1,:)-ft)</command>
<command execution_time="297">figure; imagesc(f-ft(1:end-1,:))</command>
<command batch="496">ft = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="496" execution_time="15">0:length(model.numSlicePoints*(length(model.sliceHeights)-1))-1);</command>
<command execution_time="78">figure; imagesc(ft)</command>
<command error="true" execution_time="16">size(model.numSlicePoints*(length(model.sliceHeights)-1),4))</command>
<command error="true" execution_time="20">size(model.numSlicePoints*(length(model.sliceHeights)-1),4)))</command>
<command error="true" execution_time="31">size(model.numSlicePoints*(length(model.sliceHeights)-1),4))</command>
<command execution_time="16">size(model.numSlicePoints*(length(model.sliceHeights)-1),4)</command>
<command batch="497" error="true">ft = bsxfun(@plus, ones(1:model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="497" error="true" execution_time="78">0:length(model.numSlicePoints*(length(model.sliceHeights)-1))-1);</command>
<command error="true" execution_time="31">size(ones(1:model.numSlicePoints*(length(model.sliceHeights)-1))</command>
<command error="true" execution_time="60">size(ones(1:model.numSlicePoints*(length(model.sliceHeights)-1)))</command>
<command execution_time="40">model.numSlicePoints*length(model.sliceHeights)</command>
<command execution_time="15">foo = ones(9810,4);</command>
<command execution_time="15">size(foo)</command>
<command execution_time="15" repeat="2">size(ones(model.numSlicePoints*(length(model.sliceHeights)-1),4))</command>
<command execution_time="32">size(0:length(model.numSlicePoints*(length(model.sliceHeights)-1))-1)</command>
<command execution_time="32">length(model.numSlicePoints*(length(model.sliceHeights)-1))</command>
<command batch="498" error="true">ft = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="498" error="true" execution_time="78">0:model.numSlicePoints*(length(model.sliceHeights)-1)-1);</command>
<command batch="499" error="true">ft = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="499" error="true" execution_time="31">0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1));</command>
<command execution_time="31">size(ones(model.numSlicePoints*(length(model.sliceHeights)-1),4))</command>
<command execution_time="31">size(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))</command>
<command batch="500">ft = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="500" execution_time="31">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))');</command>
<command execution_time="78">figure; imagesc(ft)</command>
<command error="true" execution_time="47">ft = bsxfun(@plus,ft,[0,1,model.numSlicePOints,1+model.numSlicePoints]);</command>
<command execution_time="16">ft = bsxfun(@plus,ft,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command execution_time="63">figure; imagesc(ft)</command>
<command batch="501" error="true">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="501" error="true">n</command>
<command batch="501" error="true">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="501" error="true">n = n+1;</command>
<command batch="501" error="true" execution_time="250">end</command>
<command batch="502">n = 1;</command>
<command batch="502">% mesh</command>
<command batch="502">ft = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="502">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))');</command>
<command batch="502">ft = bsxfun(@plus,ft,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command batch="502">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1);</command>
<command batch="502">n;</command>
<command batch="502">f(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="502">n = n+1;</command>
<command batch="502" execution_time="218">end</command>
<command execution_time="32">size(f)</command>
<command execution_time="16">size(ft)</command>
<command error="true" execution_time="78">figure; imagesc(f-ft(1:9719))</command>
<command execution_time="78">figure; imagesc(f-ft(1:9719,:))</command>
<command batch="503">n = model.data;</command>
<command batch="503">clear scene</command>
<command batch="503">% [n e f] = createIcosahedron;</command>
<command batch="503">% scene.Vertices = [sceneX.',sceneY.',sceneZ.'];</command>
<command batch="503">scene.Vertices = n;</command>
<command batch="503">% nPoints = size(scene.Vertices,1);</command>
<command batch="503">% scene.Faces = reshape(1:nPoints,3,nPoints/3).';</command>
<command batch="503">scene.Faces = f;</command>
<command batch="503">scene.FaceColor = 'Flat';</command>
<command batch="503">scene.EdgeColor = 'none';</command>
<command batch="503">% scene.FaceAlpha = .5;</command>
<command batch="503">% scene.FaceLighting = 'gouraud';</command>
<command batch="503">% scene.BackFaceLighting = 'lit';</command>
<command batch="503">% scene.FaceVertexCData = repmat( [0.7 0.7 0.7] , size(scene.Faces,1) , 1 ) ; %// assign the same color for each face</command>
<command batch="503">% scene.FaceVertexCData = cmap(1:size(scene.Faces,1),:);</command>
<command batch="503">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="503">scene.CDataMapping = 'scaled';</command>
<command batch="503">scene.EraseMode = 'xor';</command>
<command batch="503">R = rotx(45);</command>
<command batch="503">fig = figure(1);</command>
<command batch="503">cmap = colormap(hot);</command>
<command batch="503">set(fig,'colormap',cmap);</command>
<command batch="503">% DRAW SCENE</command>
<command batch="503">axes1 = axes('Parent',fig,...</command>
<command batch="503">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="503">'ZColor',[0 0 0],...</command>
<command batch="503">'YColor',[0 0 0],...</command>
<command batch="503">'XColor',[0 0 0],...</command>
<command batch="503">'GridAlpha',1,...</command>
<command batch="503">'GridColor',[0 0 0]);</command>
<command batch="503">box(axes1,'on');</command>
<command batch="503">grid(axes1,'on');</command>
<command batch="503">hold(axes1,'on');</command>
<command batch="503">% xlim([object.minX, object.maxX]); ylim([object.minY, object.maxY]);</command>
<command batch="503">p1 = patch(scene);</command>
<command batch="503">% ROTATE OBJECT</command>
<command batch="503">for idx = 1:90</command>
<command batch="503">newRotationMatrix = rotz(idx) * R;</command>
<command batch="503">for idx = 1:size(scene.Vertices,1)</command>
<command batch="503">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="503">end</command>
<command batch="503">set(p1,'vertices',scene.Vertices);</command>
<command batch="503">drawnow</command>
<command batch="503" execution_time="7334">end</command>
<command execution_time="327">clear all; close all;</command>
<command batch="504">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="504" execution_time="31">load('innerMold.mat');</command>
<command execution_time="312" repeat="3">initGL(model)</command>
<command execution_time="16">max(max(object.faces))</command>
<command execution_time="16">size(object.data)</command>
<command execution_time="406" repeat="4">initGL(model)</command>
<command error="true" execution_time="292">oject.handlePatch</command>
<command execution_time="31">object.handlePatch</command>
<command execution_time="440">initGL(model)</command>
<command batch="505">xlim([object.minX, object.maxX]); ylim([object.minY, object.maxY]);</command>
<command batch="505">set(object.handlePatch,'vertices',object.data,'faces',object.faces(1:end-1));</command>
<command batch="505" execution_time="3249">drawnow;</command>
<command error="true" execution_time="226">size(model.data)</command>
<command execution_time="15">size(object.data)</command>
<command error="true" execution_time="32">size(object.FaceVertexCData)</command>
<command execution_time="31">clear all</command>
<command execution_time="32">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="31">load('innerMold.mat');</command>
<command execution_time="250" repeat="2">initGL(model)</command>
<command execution_time="78">figure;</command>
<command execution_time="63">h = figure;</command>
<command error="true" execution_time="32">set(h,'vertices',object.data,'faces',object.faces(1:end-1));</command>
<command error="true" execution_time="327">patc('vertices',object.data,'faces',object.faces(1:end-1));</command>
<command execution_time="31" repeat="3">patch('vertices',object.data,'faces',object.faces(1:end-1));</command>
</session>
<session>
<command time_stamp="1512122bc71">%-- 11/19/2015 2:05 PM --%</command>
<command execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="15">load('innerMold.mat');</command>
<command error="true" execution_time="437">initGL(model)</command>
<command batch="506" error="true">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="506" error="true">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="506" error="true">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="506" error="true">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="506" error="true" execution_time="2582">set(object.handlePatch,'CDataMapping','scaled');</command>
<command execution_time="312" repeat="2">initGL(model)</command>
<command execution_time="16">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command execution_time="31">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command batch="507">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="507">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="507">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="507" execution_time="31">set(object.handlePatch,'CDataMapping','scaled');</command>
<command batch="508">% SET UI CALLBACKS</command>
<command batch="508">set(hObject,'WindowButtonDownFcn',{@handleMouseDown});</command>
<command batch="508">set(hObject,'KeyPressFcn',{@handleKeyDown});</command>
<command batch="508">set(hObject,'KeyReleaseFcn',{@handleKeyUp});</command>
<command batch="508">% SET HOME</command>
<command batch="508">object.numSliceHeights = size(model.data,1);</command>
<command batch="508">object.newRotationMatrix = eye(3,3);</command>
<command batch="508">object.homeData = object.data;</command>
<command batch="508">% SAVE DATA</command>
<command batch="508" execution_time="93">guidata(hObject,object);</command>
<command batch="509">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command batch="509">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="509">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="509">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="509" execution_time="47">set(object.handlePatch,'CDataMapping','scaled');</command>
<command batch="510">% SET UI CALLBACKS</command>
<command batch="510">set(hObject,'WindowButtonDownFcn',{@handleMouseDown});</command>
<command batch="510">set(hObject,'KeyPressFcn',{@handleKeyDown});</command>
<command batch="510">set(hObject,'KeyReleaseFcn',{@handleKeyUp});</command>
<command batch="510">% SET HOME</command>
<command batch="510">object.numSliceHeights = size(model.data,1);</command>
<command batch="510">object.newRotationMatrix = eye(3,3);</command>
<command batch="510">object.homeData = object.data;</command>
<command batch="510">% SAVE DATA</command>
<command batch="510">guidata(hObject,object);</command>
<command batch="510" execution_time="3416">tick(hObject);</command>
</session>
<session>
<command time_stamp="151212eb402">%-- 11/19/2015 2:18 PM --%</command>
<command execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="31">load('innerMold.mat')</command>
<command execution_time="328" repeat="3">initGL(model)</command>
<command execution_time="63">figure;</command>
<command batch="511">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command batch="511">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="511">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="511">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="511" execution_time="47">set(object.handlePatch,'CDataMapping','scaled');</command>
<command execution_time="421">initGL(model)</command>
<command execution_time="63">figure;</command>
<command batch="512">% INITIALIZE PATCH</command>
<command batch="512">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command batch="512">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="512">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="512">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="512" execution_time="63">set(object.handlePatch,'CDataMapping','scaled');</command>
<command batch="513">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command batch="513">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="513">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="513">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="513" execution_time="46">set(object.handlePatch,'CDataMapping','scaled');</command>
<command execution_time="421" repeat="2">initGL(model)</command>
<command batch="514">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command batch="514">set(object.handlePatch,'FaceColor','Flat');</command>
<command batch="514">% set(object.handlePatch,'EdgeColor','none');</command>
<command batch="514">set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="514" execution_time="46">set(object.handlePatch,'CDataMapping','scaled');</command>
<command batch="515">axes1 = axes('Parent',hObject,...</command>
<command batch="515">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="515">'ZColor',[0 0 0],...</command>
<command batch="515">'YColor',[0 0 0],...</command>
<command batch="515">'XColor',[0 0 0],...</command>
<command batch="515">'GridAlpha',1,...</command>
<command batch="515">'GridColor',[0 0 0]);</command>
<command batch="515">box(axes1,'on');</command>
<command batch="515">grid(axes1,'on');</command>
<command batch="515" execution_time="63">hold(axes1,'on');</command>
<command execution_time="390" repeat="3">initGL(model)</command>
<command execution_time="63">figure;</command>
<command execution_time="31">object.handlePatch = patch('Faces',object.faces(1:end-1),'Vertices',object.data);</command>
<command execution_time="5234" repeat="3">meshTest</command>
<command execution_time="16">max(max(f))</command>
<command execution_time="16">size(model.data)</command>
<command execution_time="31">size(f)</command>
<command execution_time="16">9720+90</command>
<command batch="516">f = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1),4),...</command>
<command batch="516">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))');</command>
<command batch="516" execution_time="32">f = bsxfun(@plus,f,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command execution_time="16">max(max(f))</command>
<command execution_time="125">figure; imagesc(f)</command>
<command execution_time="32">9810-90</command>
<command execution_time="16">(model.numSlicePoints*(length(model.sliceHeights)-1)-1)</command>
<command batch="517">f = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-2),4),...</command>
<command batch="517">(0:(model.numSlicePoints*(length(model.sliceHeights)-2)-1))');</command>
<command batch="517" execution_time="16">f = bsxfun(@plus,f,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command execution_time="32">(model.numSlicePoints*(length(model.sliceHeights)-1)-1)</command>
<command execution_time="32">max(max(f))</command>
<command batch="518">n = 1;</command>
<command batch="518">while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1)</command>
<command batch="518">ft(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="518">n = n + 1;</command>
<command batch="518" execution_time="236">end</command>
<command execution_time="32">size(ft)</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="16">9810-9719</command>
<command execution_time="15">max(max(ft))</command>
<command execution_time="16">model.numSlicePoints*(length(model.sliceHeights)-1)</command>
<command execution_time="15">n</command>
<command execution_time="31">size(ones(model.numSlicePoints*(length(model.sliceHeights)-2),4))</command>
<command execution_time="16">size(ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4))</command>
<command batch="519" error="true">f = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="519" error="true">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))');</command>
<command batch="519" error="true" execution_time="47">f = bsxfun(@plus,f,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command batch="520" error="true">f = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="520" error="true" execution_time="31">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))');</command>
<command execution_time="31">size(ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4))</command>
<command execution_time="15">size((0:(model.numSlicePoints*(length(model.sliceHeights)-1)-1))')</command>
<command execution_time="31">size((0:(model.numSlicePoints*(length(model.sliceHeights)-1)-2))')</command>
<command batch="521">f = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="521">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-2))');</command>
<command batch="521" execution_time="31">f = bsxfun(@plus,f,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command execution_time="78">figure; imagesc(f-ft)</command>
<command batch="522">% MESH</command>
<command batch="522">f = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="522">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-2))');</command>
<command batch="522">f = bsxfun(@plus,f,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command batch="522">% n = 1;</command>
<command batch="522">% while n &lt; model.numSlicePoints*(length(model.sliceHeights)-1)</command>
<command batch="522">%     ft(n,:) = [n, n+1, n+model.numSlicePoints, 1+n+model.numSlicePoints];</command>
<command batch="522">%     n = n + 1;</command>
<command batch="522">% end</command>
<command batch="522">n = model.data;</command>
<command batch="522">clear scene</command>
<command batch="522">scene.Vertices = n;</command>
<command batch="522">scene.Faces = f;</command>
<command batch="522">scene.FaceColor = 'Flat';</command>
<command batch="522">scene.EdgeColor = 'none';</command>
<command batch="522">% scene.FaceAlpha = .5;</command>
<command batch="522">% scene.FaceLighting = 'gouraud';</command>
<command batch="522">% scene.BackFaceLighting = 'lit';</command>
<command batch="522">scene.CData = 1:size(scene.Faces,1);</command>
<command batch="522">scene.CDataMapping = 'scaled';</command>
<command batch="522">R = rotx(45);</command>
<command batch="522">fig = figure(1);</command>
<command batch="522">cmap = colormap(hot);</command>
<command batch="522">set(fig,'colormap',cmap);</command>
<command batch="522">% INITIALIZE CANVAS</command>
<command batch="522">axes1 = axes('Parent',fig,...</command>
<command batch="522">'Color',[0.247058823529412 0.247058823529412 0.247058823529412],...</command>
<command batch="522">'ZColor',[0 0 0],...</command>
<command batch="522">'YColor',[0 0 0],...</command>
<command batch="522">'XColor',[0 0 0],...</command>
<command batch="522">'GridAlpha',1,...</command>
<command batch="522">'GridColor',[0 0 0]);</command>
<command batch="522">box(axes1,'on');</command>
<command batch="522">grid(axes1,'on');</command>
<command batch="522">hold(axes1,'on');</command>
<command batch="522">p1 = patch(scene);</command>
<command batch="522">% ROTATE OBJECT</command>
<command batch="522">for idx = 1:90</command>
<command batch="522">newRotationMatrix = rotz(idx) * R;</command>
<command batch="522">for idx = 1:size(scene.Vertices,1)</command>
<command batch="522">scene.Vertices(idx,:) = scene.Vertices(idx,:) * newRotationMatrix;</command>
<command batch="522">end</command>
<command batch="522">set(p1,'vertices',scene.Vertices);</command>
<command batch="522">drawnow</command>
<command batch="522" execution_time="7366">end</command>
<command execution_time="7787" repeat="6">meshTest</command>
<command execution_time="46">clear all; close all;</command>
<command execution_time="32">load('innerMold.mat')</command>
<command execution_time="156" repeat="6">initGL(model)</command>
<command execution_time="140">clear all; close all;</command>
<command execution_time="110">load('innerMold2.mat')</command>
<command execution_time="203" repeat="4">initGL(model)</command>
<command execution_time="31">load('innerMold.mat')</command>
<command execution_time="298" repeat="5">initGL(model)</command>
<command execution_time="16">light('Position',[1 1 1],'Style','local')</command>
<command execution_time="31">light('Position',[0 0 0],'Style','local')</command>
<command execution_time="31">light('Position',[0 500 0],'Style','local')</command>
<command execution_time="265">initGL(model)</command>
<command execution_time="16">light('Position',[1 1 1],'Style','local')</command>
<command execution_time="281" repeat="5">initGL(model)</command>
<command execution_time="7194">meshTest</command>
<command execution_time="16">p1 = patch('Faces',f,'Vertices',model.data);</command>
<command batch="523">set(p1,'FaceColor','Flat');</command>
<command batch="523">set(p1,'EdgeColor','none');</command>
<command batch="523">set(p1,'CData',1:size(model.data,1));</command>
<command batch="523" execution_time="31">set(p1,'CDataMapping','scaled');</command>
<command execution_time="1031" repeat="3">meshTest</command>
<command execution_time="16">size(f)</command>
<command execution_time="16">size(model.data)</command>
<command error="true" execution_time="536">numSliceHeights</command>
<command error="true" execution_time="345">numSlices</command>
<command execution_time="20">model</command>
<command execution_time="31">90*109</command>
<command execution_time="31">(90-1)*(109-1)</command>
<command execution_time="16">size(model.numSlicePoints*(length(model.sliceHeights)-1)-1)</command>
<command execution_time="16">model.numSlicePoints*(length(model.sliceHeights)-1)-1</command>
<command batch="524">numSlices = length(model.sliceHeights);</command>
<command batch="524" execution_time="16">numFaces = (model.numSlicePoints-1)*(numSlices-1);</command>
<command execution_time="16">numFaces</command>
<command batch="525">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="525" execution_time="31">f = bsxfun(@plus,f,[0,1,model.numSlicePoints,1+model.numSlicePoints]);</command>
<command execution_time="16">size(f)</command>
<command execution_time="1029">meshTest</command>
<command execution_time="16">size(f)</command>
<command execution_time="1014" repeat="4">meshTest</command>
<command execution_time="15">tmpData = reshape(model.data,model.numSlicePoints,numSlices,3);</command>
<command batch="526" error="true">tmpData = reshape(model.data,model.numSlicePoints,numSlices,2);</command>
<command batch="526" error="true" execution_time="78">slope = (diff(tmpData,1) + diff(tmpData,2))/2; % local average slope</command>
<command batch="527" error="true">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="527" error="true" execution_time="32">slope = (diff(tmpData,1) + diff(tmpData,2))/2; % local average slope</command>
<command error="true" execution_time="32">slope = (diff(tmpData,1) + diff(tmpData,2))./2; % local average slope</command>
<command error="true" execution_time="16">foo = (diff(tmpData,1) + diff(tmpData,2));</command>
<command execution_time="16">size(diff(tmpData,1))</command>
<command execution_time="32">size(tmpData)</command>
<command error="true" execution_time="332">size(difff(tmpData,2))</command>
<command execution_time="15">size(diff(tmpData,2))</command>
<command error="true" execution_time="31">foo = (diff(tmpData,1,1) + diff(tmpData,1,2));</command>
<command error="true" execution_time="32">foo = (diff(tmpData) + diff(tmpData,1,2));</command>
<command execution_time="15">size(diff(tmpData))</command>
<command execution_time="16">size(diff(tmpData,1,2))</command>
<command error="true" execution_time="297">slope</command>
<command batch="528">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="528">d1 = diff(tmpData,1);</command>
<command batch="528" execution_time="31">d2 = diff(tmpData,1,2);</command>
<command execution_time="16">slope = (d1(:,1:numSlices-1,:) + d2(1:model.numSlicePoints-1,:,:))./2;</command>
<command execution_time="47">slope = sqrt(sum(slope.^2,3));</command>
<command execution_time="16">size(slope)</command>
<command execution_time="15">slope = reshape(slope,1,numFaces);</command>
<command execution_time="31">size(slope)</command>
<command execution_time="1029" repeat="2">meshTest</command>
<command execution_time="655">colorbar</command>
<command error="true" execution_time="140">figure; imagesc(d1)</command>
<command execution_time="125">figure; imagesc(d1(:,:,1))</command>
<command execution_time="94">figure; imagesc(d1(:,:,2))</command>
<command execution_time="31">size(d1)</command>
<command execution_time="78">figure; imagesc(d2(:,:,2))</command>
<command execution_time="78">figure; imagesc(d2(:,:,1))</command>
<command execution_time="1442">meshTest</command>
<command execution_time="109">figure; imagesc(d1(:,:,1))</command>
<command execution_time="78">figure; imagesc(d1(:,:,2))</command>
<command execution_time="78">figure; imagesc(d2(:,:,1))</command>
<command execution_time="1344">meshTest</command>
<command execution_time="94">figure; imagesc(d2(:,:,1))</command>
<command execution_time="31">size(d2)</command>
<command error="true" execution_time="31">slope = reshape(d2(1:89,:,1),numFaces);</command>
<command execution_time="16">size(d2(1:89,:,1))</command>
<command execution_time="15">prod(ans)</command>
<command execution_time="15">numFaces</command>
<command execution_time="15">slope = reshape(d2(1:89,:,1),1,numFaces);</command>
<command batch="529" repeat="2">p1 = patch('Faces',f,'Vertices',model.data);</command>
<command batch="529">set(p1,'FaceColor','Flat');</command>
<command batch="529">set(p1,'EdgeColor','none');</command>
<command batch="529">set(p1,'CData',slope);</command>
<command batch="529">% set(p1,'CData',1:size(f,1));</command>
<command batch="529" execution_time="62">set(p1,'CDataMapping','scaled');</command>
<command execution_time="15">slope = reshape(d1(:,1:108,1),1,numFaces);</command>
<command batch="530">p1 = patch('Faces',f,'Vertices',model.data);</command>
<command batch="530">set(p1,'FaceColor','Flat');</command>
<command batch="530">set(p1,'EdgeColor','none');</command>
<command batch="530">set(p1,'CData',slope);</command>
<command batch="530">% set(p1,'CData',1:size(f,1));</command>
<command batch="530" execution_time="47">set(p1,'CDataMapping','scaled');</command>
<command batch="531">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="531">d1 = abs(diff(tmpData,1));</command>
<command batch="531">d2 = abs(diff(tmpData,1,2));</command>
<command batch="531">% slope = (d1(:,1:numSlices-1,1) + d2(1:model.numSlicePoints-1,:,1))./2;</command>
<command batch="531">% slope = sqrt(sum(slope.^2,3));</command>
<command batch="531">slope = reshape(d2(1:89,:,1),1,numFaces);</command>
<command batch="531">% slope = reshape(d1(:,1:108,1),1,numFaces);</command>
<command batch="531">p1 = patch('Faces',f,'Vertices',model.data);</command>
<command batch="531">set(p1,'FaceColor','Flat');</command>
<command batch="531">set(p1,'EdgeColor','none');</command>
<command batch="531">set(p1,'CData',slope);</command>
<command batch="531">% set(p1,'CData',1:size(f,1));</command>
<command batch="531" execution_time="94">set(p1,'CDataMapping','scaled');</command>
<command execution_time="1157" repeat="4">meshTest</command>
<command execution_time="109">figure; imagesc(d2(:,:,1))</command>
<command execution_time="31">x = 1:10;</command>
<command execution_time="31">y = sqrt(5^2 - x.^2);</command>
<command execution_time="125">figure; plot(x,y)</command>
<command execution_time="15">x = -10:10;</command>
<command execution_time="16">y = sqrt(10^2 - x.^2);</command>
<command execution_time="15">plot(x,y)</command>
<command execution_time="78">axis equal</command>
<command execution_time="31">x = [-10:10,10:-10]</command>
<command error="true" execution_time="125">x = cat(-10:10,10:-10)</command>
<command error="true" execution_time="32">x = cat(1,-10:10,10:-10)</command>
<command execution_time="16">-10:10</command>
<command execution_time="16">[-10:10, 10:-10]</command>
<command execution_time="31">y2 = -y;</command>
<command execution_time="16">plot(x,y2)</command>
<command execution_time="16">axis equal</command>
<command execution_time="16">v = ones(20,3);</command>
<command error="true" execution_time="31">v = bsxfun(@add,v,0:19)</command>
<command error="true" execution_time="31">v = bsxfun(@add,v,(0:19)')</command>
<command execution_time="16">v = bsxfun(@plus,v,(0:19)')</command>
<command execution_time="31">v = ones(20,2);</command>
<command execution_time="15">v(:,1) = 5;</command>
<command execution_time="31">v</command>
<command execution_time="15">v = ones(359,2);</command>
<command execution_time="16">v(:,1) = 5;</command>
<command execution_time="16">v = bsxfun(@plus,v(:,2),(0:358)');</command>
<command execution_time="31">v</command>
<command execution_time="15">v = ones(359,2);</command>
<command execution_time="16">v(:,1) = 5;</command>
<command execution_time="16">v(:,2) = bsxfun(@plus,v(:,2),(0:358)');</command>
<command execution_time="31">v</command>
<command error="true" execution_time="589">[x y z] = pol2cat(v);</command>
<command error="true" execution_time="62">[x y z] = pol2cart(v);</command>
<command error="true" execution_time="46">[x y z] = pol2cart(v(:,1),v(:,2));</command>
<command error="true" execution_time="31">[x y z] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command execution_time="16">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command execution_time="78">figure; plot(x,y)</command>
<command execution_time="15">axis equal</command>
<command execution_time="16">v = cat(1,[x,y],[x,y]);</command>
<command execution_time="31">size(v)</command>
<command execution_time="32">359*2</command>
<command execution_time="78">figure; plot(x,y)</command>
<command execution_time="78">figure; plot(v)</command>
<command execution_time="62">figure; plot(v(:,1),v(:,2))</command>
<command execution_time="15">v(1:359,3) = 0; v(360:end,3) = 1;</command>
<command execution_time="31">v(1:50,:)</command>
<command execution_time="31">v(360:370,:)</command>
<command execution_time="31">size(v)</command>
<command execution_time="16">718/2</command>
<command execution_time="31">numFaces = (359-1)*(2-1)</command>
<command execution_time="16">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command execution_time="15">f = bsxfun(@plus,f,[0,1,359,1+359]);</command>
<command execution_time="15">size(f)</command>
<command execution_time="63">figure; patch('Faces',f,'Vertices',v);</command>
<command execution_time="31">r = rotx(45); for idx = 1:size(v,1); v(idx,:) * r; end;</command>
<command execution_time="10">patch('Faces',f,'Vertices',v);</command>
<command execution_time="78">figure; patch('Faces',f,'Vertices',v);</command>
<command execution_time="31">r = rotx(90); for idx = 1:size(v,1); v(idx,:) * r; end;</command>
<command execution_time="78">figure; patch('Faces',f,'Vertices',v);</command>
<command execution_time="31">v</command>
<command execution_time="16">r = rotz(90); for idx = 1:size(v,1); v(idx,:) * r; end;</command>
<command execution_time="78">figure; patch('Faces',f,'Vertices',v);</command>
<command execution_time="62">r = roty(90); for idx = 1:size(v,1); v(idx,:) * r; end;</command>
<command execution_time="78" repeat="2">figure; patch('Faces',f,'Vertices',v);</command>
<command execution_time="31">axis equal</command>
<command execution_time="62">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command execution_time="15">set(p1,'EdgeColor','none');</command>
<command execution_time="31">axis equal</command>
<command execution_time="78">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command execution_time="16">set(p1,'EdgeColor','none');</command>
<command error="true" execution_time="601">v2 = downsamp(v,2);</command>
<command execution_time="78">v2 = downsample(v,2);</command>
<command execution_time="16">size(v2)</command>
<command execution_time="15">f2 = downsample(f,2);</command>
<command execution_time="78">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command execution_time="15">set(p1,'EdgeColor','none');</command>
<command execution_time="32">f10 = downsample(f,5);</command>
<command execution_time="32">size(f10)</command>
<command execution_time="16">v10 = downsample(v,5);</command>
<command execution_time="63">figure; p1=patch('Faces',f10,'Vertices',v10);</command>
<command execution_time="62">figure; p1=patch('Faces',f2,'Vertices',v2);</command>
<command batch="532" error="true">numAngels = 359;</command>
<command batch="532" error="true">v = ones(numAngles,2);</command>
<command batch="532" error="true">v(:,1) = 5;</command>
<command batch="532" error="true">v(:,2) = bsxfun(@plus,v(:,2),(0:358)');</command>
<command batch="532" error="true">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="532" error="true">v = cat(1,[x,y],[x,y]);</command>
<command batch="532" error="true">numFaces = (numAngles-1)*(2-1);</command>
<command batch="532" error="true">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="532" error="true">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="532" error="true">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="532" error="true" execution_time="497">set(p1,'EdgeColor','none');</command>
<command batch="533">numAngles = 359;</command>
<command batch="533">v = ones(numAngles,2);</command>
<command batch="533">v(:,1) = 5;</command>
<command batch="533">v(:,2) = bsxfun(@plus,v(:,2),(0:358)');</command>
<command batch="533">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="533">v = cat(1,[x,y],[x,y]);</command>
<command batch="533">numFaces = (numAngles-1)*(2-1);</command>
<command batch="533">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="533">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="533">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="533" execution_time="141">set(p1,'EdgeColor','none');</command>
<command execution_time="47">size(v)</command>
<command execution_time="16">359*2</command>
<command batch="534">numAngles = 359;</command>
<command batch="534">v = ones(numAngles,2);</command>
<command batch="534">v(:,1) = 5;</command>
<command batch="534">v(:,2) = bsxfun(@plus,v(:,2),(0:358)');</command>
<command batch="534">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="534">v = cat(1,[x,y],[x,y]);</command>
<command batch="534">numFaces = (numAngles-1)*(2-1);</command>
<command batch="534">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="534">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="534">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="534" execution_time="141">set(p1,'EdgeColor','none');</command>
<command execution_time="31">v</command>
<command batch="535" error="true" repeat="2">numAngles = 359;</command>
<command batch="535" error="true">v = ones(numAngles,2);</command>
<command batch="535" error="true">v(:,1) = 5;</command>
<command batch="535" error="true">v(:,2) = bsxfun(@plus,v(:,2),(0:358)');</command>
<command batch="535" error="true">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="535" error="true">v = cat(1,[x,y],[x,y]);</command>
<command batch="535" error="true">v(1:numAngle,3) = 0; v(numAngle+1:end,3) = 1;</command>
<command batch="535" error="true">numFaces = (numAngles-1)*(2-1);</command>
<command batch="535" error="true">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="535" error="true">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="535" error="true">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="535" error="true" execution_time="527">set(p1,'EdgeColor','none');</command>
<command batch="536">numAngles = 359;</command>
<command batch="536">v = ones(numAngles,2);</command>
<command batch="536">v(:,1) = 5;</command>
<command batch="536">v(:,2) = bsxfun(@plus,v(:,2),(0:358)');</command>
<command batch="536">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="536">v = cat(1,[x,y],[x,y]);</command>
<command batch="536">v(1:numAngles,3) = 0; v(numAngles+1:end,3) = 1;</command>
<command batch="536">numFaces = (numAngles-1)*(2-1);</command>
<command batch="536">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="536">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="536">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="536" execution_time="156">set(p1,'EdgeColor','none');</command>
<command batch="537" error="true">numAngles = 90;</command>
<command batch="537" error="true">angles = linespace(0,360,numAngles);</command>
<command batch="537" error="true">v = ones(numAngles,2);</command>
<command batch="537" error="true">v(:,1) = 5;</command>
<command batch="537" error="true">v(:,2) = bsxfun(@plus,v(:,2),(angles)');</command>
<command batch="537" error="true">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="537" error="true">v = cat(1,[x,y],[x,y]);</command>
<command batch="537" error="true">v(1:numAngles,3) = 0; v(numAngles+1:end,3) = 1;</command>
<command batch="537" error="true">numFaces = (numAngles-1)*(2-1);</command>
<command batch="537" error="true">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="537" error="true">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="537" error="true">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="537" error="true" execution_time="920">set(p1,'EdgeColor','none');</command>
<command batch="538">numAngles = 90;</command>
<command batch="538">angles = linspace(0,360,numAngles);</command>
<command batch="538">v = ones(numAngles,2);</command>
<command batch="538">v(:,1) = 5;</command>
<command batch="538">v(:,2) = bsxfun(@plus,v(:,2),(angles)');</command>
<command batch="538">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="538">v = cat(1,[x,y],[x,y]);</command>
<command batch="538">v(1:numAngles,3) = 0; v(numAngles+1:end,3) = 1;</command>
<command batch="538">numFaces = (numAngles-1)*(2-1);</command>
<command batch="538">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="538">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="538">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="538" execution_time="156">set(p1,'EdgeColor','none');</command>
<command batch="539">numAngles = 20;</command>
<command batch="539">angles = linspace(0,360,numAngles);</command>
<command batch="539">v = ones(numAngles,2);</command>
<command batch="539">v(:,1) = 5;</command>
<command batch="539">v(:,2) = bsxfun(@plus,v(:,2),(angles)');</command>
<command batch="539">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="539">v = cat(1,[x,y],[x,y]);</command>
<command batch="539">v(1:numAngles,3) = 0; v(numAngles+1:end,3) = 1;</command>
<command batch="539">numFaces = (numAngles-1)*(2-1);</command>
<command batch="539">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="539">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="539">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command batch="539" execution_time="141">set(p1,'EdgeColor','none');</command>
<command execution_time="16">set(p1,'FaceColor','flat');</command>
<command batch="540">numAngles = 20;</command>
<command batch="540">angles = linspace(0,360,numAngles);</command>
<command batch="540">v = ones(numAngles,2);</command>
<command batch="540">v(:,1) = 5;</command>
<command batch="540">v(:,2) = bsxfun(@plus,v(:,2),(angles)');</command>
<command batch="540">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="540">v = cat(1,[x,y],[x,y]);</command>
<command batch="540">v(1:numAngles,3) = 0; v(numAngles+1:end,3) = 1;</command>
<command batch="540">numFaces = (numAngles-1)*(2-1);</command>
<command batch="540">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="540">f = bsxfun(@plus,f,[0,1,numAngles,1+numAngles]);</command>
<command batch="540" execution_time="156">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command execution_time="32">size(f)</command>
<command execution_time="16">f</command>
<command execution_time="31">v</command>
<command execution_time="78">v = [0 0; 0 1; 0 1; 1 1]; f = [1 2 3 4]; figure; patch('Faces',f,'Vertices',v)</command>
<command execution_time="62">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command execution_time="15">set(p1,'FaceColor','r');</command>
<command execution_time="62">v = [0 0; 1 0; 1 1; 0 1]; f = [1 2 3 4]; figure; patch('Faces',f,'Vertices',v)</command>
<command batch="541">numAngles = 20;</command>
<command batch="541">angles = linspace(0,360,numAngles);</command>
<command batch="541">v = ones(numAngles,2);</command>
<command batch="541">v(:,1) = 5;</command>
<command batch="541">v(:,2) = bsxfun(@plus,v(:,2),(angles)');</command>
<command batch="541">[x y] = pol2cart(v(:,2)*pi/180,v(:,1));</command>
<command batch="541">v = cat(1,[x,y],[x,y]);</command>
<command batch="541">v(1:numAngles,3) = 0; v(numAngles+1:end,3) = 1;</command>
<command batch="541">numFaces = (numAngles-1)*(2-1);</command>
<command batch="541">f = bsxfun(@plus, ones(numFaces,4),(0:numFaces-1)');</command>
<command batch="541">f = bsxfun(@plus,f,[0,1,1+numAngles,numAngles]);</command>
<command batch="541" execution_time="125">figure; p1=patch('Faces',f,'Vertices',v);</command>
<command execution_time="265">clear all; close all;</command>
<command execution_time="47">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="93">load('innerMoldTest.mat')</command>
<command execution_time="31">load('innerMold2.mat')</command>
<command execution_time="359">initGL(model)</command>
<command execution_time="15">load('innerMold.mat')</command>
<command execution_time="296">initGL(model)</command>
<command execution_time="1016">meshTest</command>
<command execution_time="320">initGL(model)</command>
<command execution_time="31">load('innerMold.mat')</command>
<command execution_time="250" repeat="25">initGL(model)</command>
<command execution_time="15">hold on; plot(0:200,'r')</command>
<command execution_time="16">hold on; plot(0:500,'r')</command>
<command execution_time="16" repeat="2">hold on; plot(0:300,'r')</command>
<command execution_time="15">hold on; plot(0:300,'b')</command>
<command execution_time="16">hold on; plot(0:500,'b')</command>
<command execution_time="15">hold on; plot(0:500,'g')</command>
<command execution_time="15">hold on; plot(400:500,'y')</command>
<command execution_time="16">hold on; plot(-800:500,'y')</command>
</session>
<session>
<command time_stamp="15125073d95">%-- 11/20/2015 8:13 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="16">load('innerMold.mat')</command>
<command execution_time="327" repeat="4">initGL(model)</command>
<command execution_time="15">size(object.data)</command>
<command execution_time="31">close all</command>
</session>
<session>
<command time_stamp="151251ff51a">%-- 11/20/2015 8:40 AM --%</command>
<command execution_time="500">figure; plot(1:10,1:10);</command>
<command error="true" execution_time="963">hole on; plot(10:1,10:1)</command>
<command execution_time="31" repeat="2">hold on; plot(10:1,10:1)</command>
<command error="true" execution_time="93">hold on; plot(1:10*20,1:10*2)</command>
<command execution_time="33">hold on; plot(1:10*20,1:10*20)</command>
<command error="true" execution_time="75">initGL(model)</command>
<command execution_time="31">close all</command>
<command execution_time="117">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="32">load('innerMold.mat')</command>
<command execution_time="394" repeat="2">initGL(model)</command>
<command execution_time="83">figure; plot(object.data(:,3,1),object.data(:,1,1),object.data(:,3,2),object.data(:,1,2))</command>
<command execution_time="82">figure;</command>
<command batch="542">object.handlePatch2 = patch('Faces',object.faces,'Vertices',object.data(:,:,2));</command>
<command batch="542">light('Position',[0 -300 0],'Style','infinite')</command>
<command batch="542">% [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="542">set(object.handlePatch2,'FaceColor',[255/255 85/255 0]);</command>
<command batch="542">set(object.handlePatch2,'FaceLighting','gouraud');</command>
<command batch="542">set(object.handlePatch2,'BackFaceLighting','lit');</command>
<command batch="542">set(object.handlePatch2,'EdgeColor','none');</command>
<command batch="542">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="542">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="542">set(object.handlePatch2,'FaceAlpha',1);</command>
<command batch="542" execution_time="168">set(object.handlePatch2,'EdgeAlpha',1);</command>
<command execution_time="77">figure;</command>
<command batch="543" error="true">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="543" error="true">light('Position',[0 -300 0],'Style','infinite')</command>
<command batch="543" error="true">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="543" error="true">% [0 0 0] - model black</command>
<command batch="543" error="true">set(object.handlePatch,'FaceColor',[0 106/255 255/255]);</command>
<command batch="543" error="true">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command batch="543" error="true">set(object.handlePatch,'BackFaceLighting','lit');</command>
<command batch="543" error="true">set(object.handlePatch,'EdgeColor','none');</command>
<command batch="543" error="true">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="543" error="true">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="543" error="true">set(object.handlePatch,'FaceAlpha',.5);</command>
<command batch="543" error="true">set(object.handlePatch,'EdgeAlpha',.5);</command>
<command batch="543" error="true">% set(object.handlePatch,'EdgeLighting','flat');</command>
<command batch="543" error="true">% set(object.handlePatch,'CData',1:size(object.data,1));</command>
<command batch="543" error="true" execution_time="148">% set(object.handlePatch,'CDataMapping','scaled');</command>
<command execution_time="339">initGL(model)</command>
<command execution_time="77">figure;</command>
<command batch="544">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="544">light('Position',[0 -300 0],'Style','infinite')</command>
<command batch="544">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="544">% [0 0 0] - model black</command>
<command batch="544">set(object.handlePatch,'FaceColor',[0 106/255 255/255]);</command>
<command batch="544">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command batch="544">set(object.handlePatch,'BackFaceLighting','lit');</command>
<command batch="544">set(object.handlePatch,'EdgeColor','none');</command>
<command batch="544">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="544">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="544">set(object.handlePatch,'FaceAlpha',.5);</command>
<command batch="544" execution_time="331">set(object.handlePatch,'EdgeAlpha',.5);</command>
<command execution_time="78">axis equal</command>
<command execution_time="79">figure;</command>
<command batch="545">object.data(:,1:2,2) = object.data(:,1:2) *.8;</command>
<command batch="545">object.data(:,3,2) = object.data(:,3,1);</command>
<command batch="545">object.handlePatch2 = patch('Faces',object.faces,'Vertices',object.data(:,:,2));</command>
<command batch="545">light('Position',[0 -300 0],'Style','infinite')</command>
<command batch="545">% [0.870588235294118 0.623529411764706 0.0431372549019608]</command>
<command batch="545">set(object.handlePatch2,'FaceColor',[255/255 85/255 0]);</command>
<command batch="545">set(object.handlePatch2,'FaceLighting','gouraud');</command>
<command batch="545">set(object.handlePatch2,'BackFaceLighting','lit');</command>
<command batch="545">set(object.handlePatch2,'EdgeColor','none');</command>
<command batch="545">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="545">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="545">set(object.handlePatch2,'FaceAlpha',1);</command>
<command batch="545" execution_time="325">set(object.handlePatch2,'EdgeAlpha',1);</command>
<command execution_time="31">axis equal</command>
<command execution_time="25">165/205.1</command>
<command execution_time="23">object.data(end,end,1)</command>
<command execution_time="29">object.data(end,end,2)</command>
<command execution_time="83">figure; plot(object.data(:,3,1))</command>
<command execution_time="87">figure; plot(object.data(:,3,2))</command>
<command execution_time="432">initGL(model)</command>
<command execution_time="134">close all;</command>
<command execution_time="447" repeat="4">initGL(model)</command>
<command execution_time="16">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command execution_time="19">light('Position',[0 -300 0],'Style','infinite')</command>
<command execution_time="35">set(object.handlePatch,'FaceColor',[0 0 0]);</command>
<command execution_time="31">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command execution_time="33">set(object.handlePatch,'BackFaceLighting','lit');</command>
<command execution_time="15">set(object.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="546">set(object.handlePatch,'FaceAlpha',1);</command>
<command batch="546" execution_time="35">set(object.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="285" repeat="7">initGL(model)</command>
<command execution_time="90">figure;</command>
<command execution_time="16">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="547">light('Position',[0 0 300],'Style','infinite')</command>
<command batch="547">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="547">% [0 0 0] - model black</command>
<command batch="547">% [0 106/255 255/255] - assembly color</command>
<command batch="547">set(object.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="547">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command batch="547">% set(object.handlePatch,'BackFaceLighting','lit');</command>
<command batch="547">set(object.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="547">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="547">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="547">set(object.handlePatch,'FaceAlpha',1);</command>
<command batch="547" execution_time="149">set(object.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="47">campos('mode')</command>
<command error="true" execution_time="110">campos('CameraPosition')</command>
<command execution_time="16">get(gca,'CameraPosition')</command>
<command execution_time="31">campos([0 0 500])</command>
<command execution_time="16">campos([0 0 100])</command>
<command execution_time="15">campos([0 0 200])</command>
<command execution_time="16">axis equal</command>
<command execution_time="15">campos([0 0 190])</command>
<command execution_time="15">campos([0 0 50])</command>
<command execution_time="31">campos([100 0 0])</command>
<command execution_time="47">camup</command>
<command execution_time="15">campos('mode')</command>
<command execution_time="31">object.data(end,end)</command>
<command execution_time="15">campos([0 0 134.8653])</command>
<command execution_time="31">campos([0 0 134.8653+10])</command>
<command execution_time="15">campos([0 0 134.8653+20])</command>
<command execution_time="16">campos([0 0 134.8653+30])</command>
<command execution_time="16">campos([0 0 134.8653+50])</command>
<command execution_time="16">campos([0 0 134.8653+45])</command>
<command execution_time="15">campos([0 10 134.8653+45])</command>
<command execution_time="31">campos([0 -10 134.8653+45])</command>
<command execution_time="31">campos([0 -20 134.8653+45])</command>
<command execution_time="31">campos([-50 -50 134.8653+45])</command>
<command execution_time="32">campos([0 -50 134.8653+45])</command>
<command execution_time="32">campos([0 -50 134.8653+50])</command>
<command execution_time="16">campos([0 -50 134.8653+60])</command>
<command execution_time="15">campos([0 -50 134.8653+70])</command>
<command execution_time="31">campos([0 -50 134.8653+80])</command>
<command execution_time="16">campos([0 -50 134.8653+90])</command>
<command execution_time="15">campos([0 -50 134.8653+100])</command>
<command execution_time="31">134.8653+100</command>
<command execution_time="31">campos([0 50 134.8653+100])</command>
<command execution_time="15">campos([0 -50 134.8653+100])</command>
<command execution_time="31">axis equal</command>
<command execution_time="16">axis off</command>
<command execution_time="15">newpos = [0 -50 134.8653+100]*rotx(45)</command>
<command execution_time="16">campos(newpos)</command>
<command execution_time="16">campos([0 -50 134.8653+100])</command>
<command execution_time="15">get(gca,'CameraViewAngle')</command>
<command error="true" execution_time="332">canva(50)</command>
<command execution_time="62">camva(50)</command>
<command execution_time="15">camva(100)</command>
<command execution_time="15">camva(1)</command>
<command execution_time="16">camva(10)</command>
<command execution_time="16">camva(15)</command>
<command execution_time="31">camva(20)</command>
<command execution_time="16">camva(50)</command>
<command execution_time="15">camva(30)</command>
<command execution_time="31">get(gca,'CameraTarget')</command>
<command error="true" execution_time="346">rotat3d</command>
<command execution_time="78">rotate3d</command>
<command execution_time="16">campos([0 -50 134.8653+100])</command>
<command execution_time="15">get(gca,'View')</command>
<command execution_time="16">set(gca,'View',[0 90])</command>
<command execution_time="15">set(gca,'View',[0 0])</command>
<command execution_time="16">camva(30)</command>
<command execution_time="16">camva(100)</command>
<command execution_time="31">camva(.1)</command>
<command execution_time="15">camva(1)</command>
<command execution_time="15">camva(10)</command>
<command execution_time="16">camva(5)</command>
<command execution_time="16">campos</command>
<command execution_time="16">campos([0 -50 134.8653+100])</command>
<command execution_time="31">camva(50)</command>
<command execution_time="31">get(gca,'View')</command>
<command execution_time="31">set(gca,'View',[10 0])</command>
<command execution_time="15">campos([0 -50 134.8653+100])</command>
<command execution_time="15">newpos = [0 -50 134.8653+100]*rotz(45)</command>
<command execution_time="16">campos(newpos)</command>
<command execution_time="31">campos([0 -50 134.8653+100])</command>
<command execution_time="63">newpos = [0 -50 134.8653+100]*roty(45)</command>
<command execution_time="15">campos(newpos)</command>
<command execution_time="16">campos([0 -50 134.8653+100])</command>
<command execution_time="47">camtarget</command>
<command error="true" execution_time="335">camtarge([0 0 90.4603])</command>
<command execution_time="16">camtarget([0 0 90.4603])</command>
<command execution_time="31">axis on</command>
<command execution_time="16">campos</command>
<command execution_time="31">campos([0 -50 134.8653])</command>
<command execution_time="16">campos([0 0 134.8653])</command>
<command execution_time="32">camva</command>
<command execution_time="16">camva(100)</command>
<command execution_time="16">camva(500)</command>
<command execution_time="16">camva(400)</command>
<command execution_time="31">camva(300)</command>
<command execution_time="15">camva(50)</command>
<command execution_time="16">camva(80)</command>
<command execution_time="16">camva(90)</command>
<command execution_time="15">camva(100)</command>
<command execution_time="31">camva(200)</command>
<command execution_time="16">camva(150)</command>
<command execution_time="31">camva(120)</command>
<command execution_time="15">campos([0 -50 134.8653+10])</command>
<command execution_time="15">axis off</command>
<command execution_time="15">camva(90)</command>
<command execution_time="15">camtarget</command>
<command execution_time="31">camtarget([0 90.4603 90.4603])</command>
<command execution_time="16">campos([0 -50 134.8653+10])</command>
<command execution_time="76">figure;</command>
<command batch="548">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="548">light('Position',[0 0 300],'Style','infinite')</command>
<command batch="548">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="548">% [0 0 0] - model black</command>
<command batch="548">% [0 106/255 255/255] - assembly color</command>
<command batch="548">set(object.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="548">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command batch="548">% set(object.handlePatch,'BackFaceLighting','lit');</command>
<command batch="548">set(object.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="548">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="548">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="548">set(object.handlePatch,'FaceAlpha',1);</command>
<command batch="548" execution_time="352">set(object.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="22">axis equal</command>
<command execution_time="16">axis off</command>
<command execution_time="18">campos</command>
<command execution_time="27">camtarget</command>
<command execution_time="34">campos</command>
<command execution_time="16">pos = ans;</command>
<command execution_time="20">pos</command>
<command execution_time="16">campos([pos(1), pos(2), pos(3)-10])</command>
<command execution_time="25" repeat="2">campos([pos(1), pos(2), pos(3)-100])</command>
<command execution_time="20">campos([pos(1), pos(2), pos(3)-1000])</command>
<command execution_time="19">pos(1)</command>
<command execution_time="22">campos([pos(1) pos(2) pos(3)-100])</command>
<command error="true" execution_time="294">p(1)</command>
<command execution_time="16">pos(1)</command>
<command execution_time="22">pos(2)</command>
<command error="true" execution_time="301">camp([2.4 90.526 1000])</command>
<command execution_time="19">campos([2.4 90.526 1000])</command>
<command execution_time="36">camup</command>
<command execution_time="16" repeat="2">campos([2.4 90.526 2000])</command>
<command execution_time="15">campos([2.4 90.526 100])</command>
<command execution_time="15">campos([2.4 90.526 1000])</command>
<command execution_time="15">campos([2.4 90.526 2000])</command>
<command execution_time="15">campos([2.4 90.526 5000])</command>
<command execution_time="31">camup([1 0 0])</command>
<command execution_time="16">camup</command>
<command batch="549">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="549">light('Position',[0 0 300],'Style','infinite')</command>
<command batch="549">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="549">% [0 0 0] - model black</command>
<command batch="549">% [0 106/255 255/255] - assembly color</command>
<command batch="549">set(object.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="549">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command batch="549">% set(object.handlePatch,'BackFaceLighting','lit');</command>
<command batch="549">set(object.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="549">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="549">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="549">set(object.handlePatch,'FaceAlpha',1);</command>
<command batch="549" execution_time="156">set(object.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="78">figure;</command>
<command batch="550">object.handlePatch = patch('Faces',object.faces,'Vertices',object.data);</command>
<command batch="550">light('Position',[0 0 300],'Style','infinite')</command>
<command batch="550">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="550">% [0 0 0] - model black</command>
<command batch="550">% [0 106/255 255/255] - assembly color</command>
<command batch="550">set(object.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="550">set(object.handlePatch,'FaceLighting','gouraud');</command>
<command batch="550">% set(object.handlePatch,'BackFaceLighting','lit');</command>
<command batch="550">set(object.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="550">% set(object.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="550">% set(object.handlePatch,'LineStyle',':');</command>
<command batch="550">set(object.handlePatch,'FaceAlpha',1);</command>
<command batch="550" execution_time="312">set(object.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="16">axis equal</command>
<command execution_time="32">campos</command>
<command execution_time="16">campos([2.4 90.5 2000])</command>
<command execution_time="31">axis off</command>
<command execution_time="15">campos([2.4 90.5 1000])</command>
<command execution_time="31">campos([0 0 0])</command>
<command execution_time="16">campos([0 0 500])</command>
<command execution_time="16">campos([0 0 0])</command>
<command execution_time="15">campos([500 0 0])</command>
<command execution_time="16">campos([0 500 0])</command>
<command execution_time="16">campos([0 0 0])</command>
<command execution_time="31">campos([0 0 2000])</command>
<command execution_time="16">campos('mode')</command>
<command error="true" execution_time="388">projection</command>
<command execution_time="31">get(gca,'projection')</command>
<command execution_time="16">campos([0 -50 500])</command>
<command execution_time="16">campos([0 -50 600])</command>
<command execution_time="31">campos([0 -50 700])</command>
<command execution_time="16">campos([0 -50 500])</command>
<command execution_time="16">campos([0 -50 300])</command>
<command execution_time="31">campos([0 -50 200])</command>
<command execution_time="16">campos([0 -20 200])</command>
<command execution_time="15">campos([0 -1 200])</command>
<command execution_time="297" repeat="7">initGL(model)</command>
<command execution_time="390">open main</command>
<command execution_time="110">open templateLiner</command>
<command batch="551">d = dialog('Position',[300 300 250 150],'Name','Select One');</command>
<command batch="551">txt = uicontrol('Parent',d,...</command>
<command batch="551">'Style','edit',...</command>
<command batch="551">'Position',[20 80 210 40],...</command>
<command batch="551" execution_time="78">'String','Select a color');</command>
<command execution_time="93">open templateLiner</command>
<command execution_time="31">75/2</command>
<command execution_time="18">model</command>
<command error="true" execution_time="279">loc = find(model.data&lt;=model.cylAdapRad)+(model.cylAdapHeight/model.sliceSteps-1);</command>
<command execution_time="0">model.cylAdapHeight = 0;</command>
<command execution_time="15">model.cylAdapRad = 54/2;</command>
<command error="true" execution_time="264">loc = find(model.data&lt;=model.cylAdapRad)+(model.cylAdapHeight/model.sliceSteps-1);</command>
<command execution_time="15">loc = find(model.data&lt;=model.cylAdapRad)+(model.cylAdapHeight/model.sliceStep-1);</command>
<command execution_time="148">loc</command>
<command error="true" execution_time="42">model.data(loc) = model.cylAdapRad;</command>
<command execution_time="101">figure; plot(loc)</command>
<command execution_time="35">model.cylAdapHeight/model.sliceStep-1</command>
<command batch="552">loc = find(model.data&lt;=model.cylAdapRad)+(model.cylAdapHeight/model.sliceStep);</command>
<command batch="552" execution_time="23">model.data(loc) = model.cylAdapRad;</command>
<command error="true" execution_time="31">figure; plot(plot(:,3),plot(:,1))</command>
<command execution_time="65" repeat="2">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">model.cylAdapRad</command>
<command execution_time="16">tmpData = sqrt(sum(model.data(:,1:2).^2));</command>
<command execution_time="15">loc = find(tmpData&lt;=model.guiCylAdapRad)+(model.guiCylAdapHeight/model.sliceStep);</command>
<command error="true" execution_time="31">model.data(loc,1:2) = model.cylAdapRad;</command>
<command execution_time="31">model.data(loc,1:2) = model.guiCylAdapRad;</command>
<command batch="553" repeat="2">tmpData = sqrt(sum(model.data(:,1:2).^2));</command>
<command batch="553">loc = find(tmpData&lt;=model.guiCylAdapRad)-(model.guiCylAdapHeight/model.sliceStep);</command>
<command batch="553">model.data(loc,1:2) = (model.guiCylAdapRad./tmpData(loc,1:2)) ...</command>
<command batch="553" execution_time="29">.* model.data(loc,1:2);</command>
<command execution_time="101">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="79">figure; plot(model.data(:,1),model.data(:,3))</command>
<command execution_time="21">mean(sqrt(sum(model.data(loc,1:2).^2)) - model.guiCylAdapRad)</command>
<command execution_time="16">model.guiCylAdapRad</command>
<command execution_time="29">tmpData = sqrt(sum(model.data(:,1:2).^2));</command>
<command execution_time="34">size(model.data)</command>
<command execution_time="30">model.guiCylAdapHeight</command>
<command error="true" execution_time="16">loc(1:10)</command>
<command execution_time="50">loc</command>
<command execution_time="15">find(tmpData&lt;=model.guiCylAdapRad)</command>
<command execution_time="65">figure; plot(tmpData-model.guiCylAdapRad)</command>
<command execution_time="72">figure; plot(tmpData)</command>
<command error="true" execution_time="35">tmpData = sqrt(sum(model.data(:,1:2).^2),2);</command>
<command execution_time="16">tmpData = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command execution_time="87">figure; plot(tmpData)</command>
<command execution_time="32">size(tmpData)</command>
<command execution_time="77">figure; plot(tmpData-model.guiCylAdapHeight)</command>
<command execution_time="9">model.guiCylAdapHeight</command>
<command execution_time="78">figure; plot(tmpData-model.guiCylAdapRad)</command>
<command batch="554" error="true">tmpData = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command batch="554" error="true">loc = find(tmpData&lt;=model.guiCylAdapRad)-(model.guiCylAdapHeight/model.sliceStep);</command>
<command batch="554" error="true">model.data(loc,1:2) = (model.guiCylAdapRad./tmpData(loc,1:2)) ...</command>
<command batch="554" error="true" execution_time="45">.* model.data(loc,1:2);</command>
<command execution_time="32">size(loc)</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="22">max(loc)</command>
<command execution_time="65">figure; plot(loc)</command>
<command execution_time="32">size(tmpData)</command>
<command error="true" execution_time="18">tmpData(loc,1:2)</command>
<command batch="555" error="true">model.data(loc,1:2) = (model.guiCylAdapRad./tmpData(loc,1)) ...</command>
<command batch="555" error="true" execution_time="32">.* model.data(loc,1:2);</command>
<command batch="556">model.data(loc,1:2) = bsxfun(@times, model.data(loc,1:2),...</command>
<command batch="556" execution_time="20">(model.guiCylAdapRad./tmpData(loc,1)));</command>
<command execution_time="99">figure; plot(model.data(:,1),model.data(:,3))</command>
<command execution_time="25">model.guiCylAdapRad</command>
<command execution_time="32">mean(sqrt(sum(model.data(loc,1:2).^2,2)) - 27,2)</command>
<command execution_time="22">mean(sqrt(sum(model.data(loc,1:2).^2,2)) - 27,1)</command>
<command execution_time="72">figure; plot(sqrt(sum(model.data(loc,1:2).^2,2)) - 27)</command>
<command execution_time="31">size(loc)</command>
<command execution_time="35">loc(1)</command>
<command execution_time="15">loc(627)</command>
<command error="true" execution_time="333">fiugre; plot(model.data(:,1))</command>
<command execution_time="76">figure; plot(model.data(:,1))</command>
<command execution_time="15">hold on; plot(loc)</command>
<command execution_time="83">figure; plot(model.data(loc,1))</command>
<command execution_time="66">figure; plot(model.data(:,1))</command>
<command error="true" execution_time="74">figure; plot(model.undo(:,1))</command>
<command execution_time="15">model</command>
<command error="true" execution_time="83">figure; plot(model.undo(:,1))</command>
<command execution_time="102">figure; plot(model.data(:,1))</command>
<command execution_time="19">test= model.data;</command>
<command execution_time="18">hold on; plot(model.data(:,1))</command>
<command batch="557">tmpData = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command batch="557">loc = find(tmpData&lt;=model.guiCylAdapRad)-(model.guiCylAdapHeight/model.sliceStep);</command>
<command batch="557">model.data(loc,1:2) = bsxfun(@times, model.data(loc,1:2),...</command>
<command batch="557" execution_time="35">(model.guiCylAdapRad./tmpData(loc,1)));</command>
<command execution_time="16">hold on; plot(model.data(:,1))</command>
<command execution_time="16">model.data = test;</command>
<command batch="558">tmpData = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command batch="558" execution_time="19">loc = find(tmpData&lt;=model.guiCylAdapRad)-(model.guiCylAdapHeight/model.sliceStep);</command>
<command execution_time="34">model.data(loc(1:5),1:2)</command>
<command execution_time="19">model.guiCylAdapRad./tmpData(loc(1:5),1)</command>
<command execution_time="19">test = model.data;</command>
<command batch="559">model.data(loc,1:2) = bsxfun(@times, model.data(loc,1:2),...</command>
<command batch="559" execution_time="19">(model.guiCylAdapRad./tmpData(loc,1)));</command>
<command execution_time="31">model.data(loc(1:5),1:2)</command>
<command execution_time="31">13.1393*14.2995</command>
<command execution_time="39">13.1393*1.0883</command>
<command execution_time="24">14.3656*1.1369</command>
<command execution_time="12">21.0443*1.0883</command>
<command execution_time="18">sqrt(sum(model.data(loc(1:5)).^2))</command>
<command execution_time="16">sqrt(sum(model.data(loc(1:5)).^2,2))</command>
<command execution_time="31">model.guiCylAdapRad</command>
<command execution_time="35">model.data(loc(1:5),1:2)</command>
<command execution_time="24">test(loc(1:5),1:2)</command>
<command execution_time="28">sqrt(sum(test(loc(1),1:2).^2,2))</command>
<command execution_time="16">ans / model.guiCylAdapRad</command>
<command execution_time="16">1/ans</command>
<command execution_time="6">[ans*13.1393, ans*-21.0443];</command>
<command execution_time="32">sqrt(sum(ans.^2,2))</command>
<command execution_time="32">model.guiCylAdapRad</command>
<command execution_time="431">clear all; close all;</command>
<command execution_time="36">load('cylAdapTest.mat')</command>
<command error="true" execution_time="34">initGl(model)</command>
<command execution_time="250" repeat="5">initGL(model)</command>
<command execution_time="110">figure; plot(model.data(:,1))</command>
<command execution_time="300" repeat="8">initGL(model)</command>
</session>
<session>
<command time_stamp="1512f70d084">%-- 11/22/2015 8:45 AM --%</command>
<command batch="560" error="true">[mtree, container] = uitree('v0', 'Root','C:\', 'Parent',hPanel); % Parent is ignored</command>
<command batch="560" error="true" execution_time="2031">set(container, 'Parent', hPanel);  % fix the uitree Parent</command>
<command execution_time="325">hPanel = figure;</command>
<command batch="561">[mtree, container] = uitree('v0', 'Root','C:\', 'Parent',hPanel); % Parent is ignored</command>
<command batch="561" execution_time="587">set(container, 'Parent', hPanel);  % fix the uitree Parent</command>
<command execution_time="2687">plot(1:10)</command>
<command execution_time="569">uitree_demo</command>
<command error="true" execution_time="281">myslider</command>
</session>
<session>
<command time_stamp="151348e0532">%-- 11/23/2015 8:35 AM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="109">load('cylAdapTest.mat')</command>
<command execution_time="4193">initGL(model)</command>
<command execution_time="93">h = uicontrol('style','slider','units','pixel','position',[20 20 300 20]);</command>
<command batch="562">% UI SLIDER</command>
<command batch="562" execution_time="16">h = uicontrol('style','slider','units','pixel','position',[40 20 300 20]);</command>
<command execution_time="15">h = uicontrol('style','slider','units','pixel','position',[140 20 300 20]);</command>
<command execution_time="16">h = uicontrol('style','slider','units','pixel','position',[200 20 300 20]);</command>
<command execution_time="328">initGL(model)</command>
<command execution_time="16">h = uicontrol('style','slider','units','pixel','position',[200 20 300 20]);</command>
<command execution_time="344">initGL(model)</command>
<command batch="563">slideWin = figure;</command>
<command batch="563">h = uicontrol('style','slider','units','pixel','position',[200 20 300 20]);</command>
<command batch="563">% addlistener(h,'ActionEvent',@(hObject, event) makeplot(hObject, event,x,hplot));</command>
<command batch="563">% Add a text uicontrol to label the slider.</command>
<command batch="563">txt = uicontrol('Style','text',...</command>
<command batch="563">'Position',[200 45 120 20],...</command>
<command batch="563" execution_time="141">'String','Cylindrical Alingment');</command>
<command batch="564">hSlider = figure;</command>
<command batch="564">name = 'Cylindical Alingment';</command>
<command batch="564">set(hSlider,'MenuBar','none');</command>
<command batch="564">set(hSlider,'ToolBar','none');</command>
<command batch="564">% UI SLIDER</command>
<command batch="564">h = uicontrol('style','slider','units','pixel','position',[200 20 300 20]);</command>
<command batch="564">% addlistener(h,'ActionEvent',@(hObject, event) makeplot(hObject, event,x,hplot));</command>
<command batch="564">% Add a text uicontrol to label the slider.</command>
<command batch="564">txt = uicontrol('Style','text',...</command>
<command batch="564">'Position',[200 45 120 20],...</command>
<command batch="564" execution_time="172">'String',name);</command>
<command execution_time="15">get(gcf,'position')</command>
<command batch="565">hSlider = figure;</command>
<command batch="565">name = 'Cylindical Alingment';</command>
<command batch="565">set(hSlider,'MenuBar','none');</command>
<command batch="565">set(hSlider,'ToolBar','none');</command>
<command batch="565">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="565">% UI SLIDER</command>
<command batch="565">h = uicontrol('style','slider','units','pixel','position',[200 20 300 20]);</command>
<command batch="565">% addlistener(h,'ActionEvent',@(hObject, event) makeplot(hObject, event,x,hplot));</command>
<command batch="565">% Add a text uicontrol to label the slider.</command>
<command batch="565">txt = uicontrol('Style','text',...</command>
<command batch="565">'Position',[200 45 120 20],...</command>
<command batch="565" execution_time="190">'String',name);</command>
<command batch="566" error="true">hSlider = figure;</command>
<command batch="566" error="true">name = 'Cylindical Alingment';</command>
<command batch="566" error="true">set(hObject,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="566" error="true">set(hObject,'name','limbRevolution.CAD');</command>
<command batch="566" error="true">set(hObject,'NumberTitle','off');</command>
<command batch="566" error="true">set(hSlider,'MenuBar','none');</command>
<command batch="566" error="true">set(hSlider,'ToolBar','none');</command>
<command batch="566" error="true">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="566" error="true">% UI SLIDER</command>
<command batch="566" error="true">h = uicontrol('style','slider','units','pixel','position',[200 20 300 20]);</command>
<command batch="566" error="true">% addlistener(h,'ActionEvent',@(hObject, event) makeplot(hObject, event,x,hplot));</command>
<command batch="566" error="true">% Add a text uicontrol to label the slider.</command>
<command batch="566" error="true">txt = uicontrol('Style','text',...</command>
<command batch="566" error="true">'Position',[200 45 120 20],...</command>
<command batch="566" error="true" execution_time="1664">'String',name);</command>
<command batch="567" repeat="2">hSlider = figure;</command>
<command batch="567">name = 'Cylindical Alingment';</command>
<command batch="567">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="567">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="567">set(hSlider,'NumberTitle','off');</command>
<command batch="567">set(hSlider,'MenuBar','none');</command>
<command batch="567">set(hSlider,'ToolBar','none');</command>
<command batch="567" execution_time="172">set(hSlider,'Position',[2738 695 329 112]);</command>
<command execution_time="16">h = uicontrol('style','slider','units','pixel','position',[20 20 300 20]);</command>
<command batch="568">hSlider = figure;</command>
<command batch="568">name = 'Cylindical Alingment';</command>
<command batch="568">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="568">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="568">set(hSlider,'NumberTitle','off');</command>
<command batch="568">set(hSlider,'MenuBar','none');</command>
<command batch="568">set(hSlider,'ToolBar','none');</command>
<command batch="568">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="568">% UI SLIDER</command>
<command batch="568" execution_time="156">h = uicontrol('style','slider','units','pixel','position',[10 20 300 20]);</command>
<command batch="569">hSlider = figure;</command>
<command batch="569">name = 'Cylindical Alingment';</command>
<command batch="569">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="569">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="569">set(hSlider,'NumberTitle','off');</command>
<command batch="569">set(hSlider,'MenuBar','none');</command>
<command batch="569">set(hSlider,'ToolBar','none');</command>
<command batch="569">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="569">% UI SLIDER</command>
<command batch="569" execution_time="156">h = uicontrol('style','slider','units','pixel','position',[15 20 300 20]);</command>
<command batch="570" error="true">txt = uicontrol('Style','text',...</command>
<command batch="570" error="true">'Position',[200 45 120 20],...</command>
<command batch="570" error="true">'String',name,...</command>
<command batch="570" error="true" execution_time="124">'color','w');</command>
<command batch="571">txt = uicontrol('Style','text',...</command>
<command batch="571">'Position',[15 20 300 20],...</command>
<command batch="571" execution_time="31">'String',name);</command>
<command batch="572">txt = uicontrol('Style','text',...</command>
<command batch="572">'Position',[15 15 300 20],...</command>
<command batch="572" execution_time="32">'String',name);</command>
<command batch="573">txt = uicontrol('Style','text',...</command>
<command batch="573">'Position',[15 25 300 20],...</command>
<command batch="573" execution_time="31">'String',name);</command>
<command batch="574">txt = uicontrol('Style','text',...</command>
<command batch="574">'Position',[15 35 300 20],...</command>
<command batch="574" execution_time="47">'String',name);</command>
<command batch="575">hSlider = figure;</command>
<command batch="575">name = 'Cylindical Alingment';</command>
<command batch="575">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="575">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="575">set(hSlider,'NumberTitle','off');</command>
<command batch="575">set(hSlider,'MenuBar','none');</command>
<command batch="575">set(hSlider,'ToolBar','none');</command>
<command batch="575">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="575">% UI SLIDER</command>
<command batch="575">h = uicontrol('style','slider','units','pixel','position',[15 20 300 20]);</command>
<command batch="575">% addlistener(h,'ActionEvent',@(hObject, event) makeplot(hObject, event,x,hplot));</command>
<command batch="575">% Add a text uicontrol to label the slider.</command>
<command batch="575">txt = uicontrol('Style','text',...</command>
<command batch="575">'Position',[15 35 300 20],...</command>
<command batch="575" execution_time="188">'String',name);</command>
<command batch="576">hSlider = figure;</command>
<command batch="576">name = 'Cylindical Alingment';</command>
<command batch="576">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="576">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="576">set(hSlider,'NumberTitle','off');</command>
<command batch="576">set(hSlider,'MenuBar','none');</command>
<command batch="576">set(hSlider,'ToolBar','none');</command>
<command batch="576">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="576">% UI SLIDER</command>
<command batch="576">h = uicontrol('style','slider','units','pixel','position',[15 20 300 20]);</command>
<command batch="576">% addlistener(h,'ActionEvent',@(hObject, event) makeplot(hObject, event,x,hplot));</command>
<command batch="576">% Add a text uicontrol to label the slider.</command>
<command batch="576">txt = uicontrol('Style','text',...</command>
<command batch="576">'Position',[15 50 300 20],...</command>
<command batch="576" execution_time="188">'String',name);</command>
<command execution_time="344">initGL(model)</command>
<command error="true" execution_time="202">set(hSlider,'MenuBar','on');</command>
<command execution_time="31">set(hSlider,'MenuBar');</command>
<command execution_time="16">set(hSlider,'MenuBar','figur');</command>
<command execution_time="32" repeat="2">set(hSlider,'MenuBar','figure');</command>
<command execution_time="31">set(gcf,'MenuBar','figure');</command>
<command execution_time="343" repeat="2">initGL(model)</command>
<command error="true" execution_time="94" repeat="2">slider</command>
<command error="true" execution_time="109" repeat="2">myslider</command>
<command execution_time="78" repeat="5">slider</command>
<command execution_time="78">event</command>
<command error="true" execution_time="84">event.source</command>
<command execution_time="78">event.Source</command>
<command execution_time="343" repeat="3">slider</command>
<command error="true" execution_time="321">guiPos</command>
<command execution_time="78" repeat="2">slider</command>
<command error="true" execution_time="311">guiPos</command>
<command execution_time="78" repeat="4">slider</command>
<command error="true" execution_time="333">event</command>
<command error="true" execution_time="571">event = guidata(hObject)</command>
<command error="true" execution_time="78">event = guidata(hSlider)</command>
<command error="true" execution_time="31">event = guidata(h)</command>
<command execution_time="532">nesterFunctionExample</command>
<command execution_time="110">close all</command>
<command execution_time="31">handle</command>
<command execution_time="16">event</command>
<command execution_time="15">model.guiPos = handle.Value;</command>
<command execution_time="47">align();</command>
<command execution_time="16">disp(model.guiPos);</command>
<command execution_time="15">model</command>
<command batch="577">model.guiCylAdapRad = 54/2; % (mm)</command>
<command batch="577" execution_time="31">model.guiCylAdapHeight = 0; % (mm)</command>
<command execution_time="31" repeat="2">model</command>
<command execution_time="32">hObject</command>
<command execution_time="32" repeat="2">model</command>
<command execution_time="31">model = guidata(hObject)</command>
<command execution_time="31">model = guidata(hObject);</command>
<command execution_time="32">model</command>
<command error="true" execution_time="4216" repeat="2">templateLiner</command>
<command execution_time="16">hObject</command>
<command error="true" execution_time="31">model</command>
<command execution_time="16">model = guidata(hObject)</command>
<command error="true" execution_time="4733" repeat="3">templateLiner</command>
<command error="true" execution_time="32">initGL(model)</command>
<command error="true" execution_time="4525" repeat="3">templateLiner</command>
</session>
<session>
<command time_stamp="151353ebb73">%-- 11/23/2015 11:48 AM --%</command>
<command error="true" execution_time="5159" repeat="3">templateLiner</command>
<command execution_time="16">model = guidata(hObject)</command>
<command error="true" execution_time="4850">templateLiner</command>
<command execution_time="905">window</command>
<command execution_time="31">point1</command>
<command execution_time="16">point2</command>
<command execution_time="75">model.data(end,end)</command>
<command execution_time="31">model.data(1,3)</command>
<command error="true" execution_time="80">size(mode.data)</command>
<command execution_time="15">size(model.data)</command>
<command execution_time="188">figure; plot(model.data(:,3),model.data(:,1))</command>
<command error="true" execution_time="4662">templateLiner</command>
<command execution_time="16">point1</command>
<command execution_time="109">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="3827">templateLiner</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="4077">templateLiner</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command error="true" execution_time="4346" repeat="3">templateLiner</command>
<command error="true" execution_time="32">template</command>
<command execution_time="7169">templateLiner</command>
<command execution_time="15">model.zUndo</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="4734">templateLiner</command>
<command execution_time="32">min(model.data(:,3))</command>
<command execution_time="15">model.centroid</command>
<command execution_time="4197">templateLiner</command>
<command execution_time="16">min(model.data(:,3))</command>
<command execution_time="16">model.data(:,3) = model.data(:,3) - min(model.data(:,3));</command>
<command execution_time="31" repeat="2">min(model.data(:,3))</command>
<command execution_time="15">model = guidata(hObject);</command>
<command execution_time="31">min(model.data(:,3))</command>
<command execution_time="31">model.data(end,end)</command>
<command execution_time="16">model.data(1,3)</command>
<command execution_time="32">modelEndHeight</command>
<command error="true" execution_time="444">modelheight</command>
<command execution_time="16">modelHeight</command>
<command execution_time="15">point1</command>
<command execution_time="31">point2</command>
<command execution_time="5366" repeat="2">templateLiner</command>
<command execution_time="203">clear all; close all;</command>
<command execution_time="5263" repeat="5">templateLiner</command>
<command batch="578">model.handlePatch = patch('Faces',model.faces,'Vertices',model.sceneData);</command>
<command batch="578" execution_time="38">light('Position',[0 0 300],'Style','infinite')</command>
<command execution_time="24">model</command>
<command execution_time="141">clear all; close all</command>
<command error="true" execution_time="6035" repeat="3">templateLiner</command>
<command batch="579">hSlider = figure;</command>
<command batch="579">name = 'Angular Alingment';</command>
<command batch="579">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="579">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="579">set(hSlider,'NumberTitle','off');</command>
<command batch="579">set(hSlider,'MenuBar','none');</command>
<command batch="579">set(hSlider,'ToolBar','none');</command>
<command batch="579">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="579">% UI SLIDER</command>
<command batch="579">h = uicontrol('style','slider','units',...</command>
<command batch="579">'pixel','position',[15 20 300 20],...</command>
<command batch="579">'Callback',@sliderCallBack);</command>
<command batch="579">% SLIDER LABEL</command>
<command batch="579">txt = uicontrol('Style','text',...</command>
<command batch="579">'Position',[15 50 300 20],...</command>
<command batch="579" execution_time="180">'String',name);</command>
<command batch="580">btn = uicontrol('Style', 'pushbutton', 'String', 'Clear',...</command>
<command batch="580">'Position', [20 20 50 20],...</command>
<command batch="580" execution_time="34">'Callback', 'cla');</command>
<command batch="581">hSlider = figure;</command>
<command batch="581">name = 'Angular Alingment';</command>
<command batch="581">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="581">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="581">set(hSlider,'NumberTitle','off');</command>
<command batch="581">set(hSlider,'MenuBar','none');</command>
<command batch="581">set(hSlider,'ToolBar','none');</command>
<command batch="581">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="581">% UI SLIDER</command>
<command batch="581">hSli = uicontrol('style','slider','units',...</command>
<command batch="581">'pixel','position',[15 20 300 20],...</command>
<command batch="581">'Callback',@sliderCallBack);</command>
<command batch="581">% SLIDER LABEL</command>
<command batch="581">txt = uicontrol('Style','text',...</command>
<command batch="581">'Position',[15 50 300 20],...</command>
<command batch="581">'String',name);</command>
<command batch="581">% PUSH BUTTON</command>
<command batch="581">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="581">'String','Ok',...</command>
<command batch="581" execution_time="210">'position',[15 20 300 20]);</command>
<command batch="582">hSlider = figure;</command>
<command batch="582">name = 'Angular Alingment';</command>
<command batch="582">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="582">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="582">set(hSlider,'NumberTitle','off');</command>
<command batch="582">set(hSlider,'MenuBar','none');</command>
<command batch="582">set(hSlider,'ToolBar','none');</command>
<command batch="582">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="582">% UI SLIDER</command>
<command batch="582">hSli = uicontrol('style','slider','units',...</command>
<command batch="582">'pixel','position',[15 20 300 20],...</command>
<command batch="582">'Callback',@sliderCallBack);</command>
<command batch="582">% SLIDER LABEL</command>
<command batch="582">txt = uicontrol('Style','text',...</command>
<command batch="582">'Position',[15 50 300 20],...</command>
<command batch="582">'String',name);</command>
<command batch="582">% PUSH BUTTON</command>
<command batch="582">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="582">'String','Ok',...</command>
<command batch="582" execution_time="200">'position',[15 80 300 20]);</command>
<command batch="583">hSlider = figure;</command>
<command batch="583">name = 'Angular Alingment';</command>
<command batch="583">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="583">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="583">set(hSlider,'NumberTitle','off');</command>
<command batch="583">set(hSlider,'MenuBar','none');</command>
<command batch="583">set(hSlider,'ToolBar','none');</command>
<command batch="583">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="583">% UI SLIDER</command>
<command batch="583">hSli = uicontrol('style','slider','units',...</command>
<command batch="583">'pixel','position',[15 50 300 20],...</command>
<command batch="583">'Callback',@sliderCallBack);</command>
<command batch="583">% SLIDER LABEL</command>
<command batch="583">txt = uicontrol('Style','text',...</command>
<command batch="583">'Position',[15 80 300 20],...</command>
<command batch="583">'String',name);</command>
<command batch="583">% PUSH BUTTON</command>
<command batch="583">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="583">'String','Ok',...</command>
<command batch="583" execution_time="203">'position',[15 20 300 20]);</command>
<command batch="584">hSlider = figure;</command>
<command batch="584">name = 'Angular Alingment';</command>
<command batch="584">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="584">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="584">set(hSlider,'NumberTitle','off');</command>
<command batch="584">set(hSlider,'MenuBar','none');</command>
<command batch="584">set(hSlider,'ToolBar','none');</command>
<command batch="584">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="584">% UI SLIDER</command>
<command batch="584">hSli = uicontrol('style','slider','units',...</command>
<command batch="584">'pixel','position',[15 50 300 20],...</command>
<command batch="584">'Callback',@sliderCallBack);</command>
<command batch="584">% SLIDER LABEL</command>
<command batch="584">txt = uicontrol('Style','text',...</command>
<command batch="584">'Position',[15 80 150 20],...</command>
<command batch="584">'String',name);</command>
<command batch="584">% PUSH BUTTON</command>
<command batch="584">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="584">'String','Ok',...</command>
<command batch="584" execution_time="205">'position',[15 20 150 20]);</command>
<command batch="585">hSlider = figure;</command>
<command batch="585">name = 'Angular Alingment';</command>
<command batch="585">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="585">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="585">set(hSlider,'NumberTitle','off');</command>
<command batch="585">set(hSlider,'MenuBar','none');</command>
<command batch="585">set(hSlider,'ToolBar','none');</command>
<command batch="585">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="585">% UI SLIDER</command>
<command batch="585">hSli = uicontrol('style','slider','units',...</command>
<command batch="585">'pixel','position',[15 50 300 20],...</command>
<command batch="585">'Callback',@sliderCallBack);</command>
<command batch="585">% SLIDER LABEL</command>
<command batch="585">txt = uicontrol('Style','text',...</command>
<command batch="585">'Position',[75 80 150 20],...</command>
<command batch="585">'String',name);</command>
<command batch="585">% PUSH BUTTON</command>
<command batch="585">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="585">'String','Ok',...</command>
<command batch="585" execution_time="211">'position',[15 20 150 20]);</command>
<command batch="586">hSlider = figure;</command>
<command batch="586">name = 'Angular Alingment';</command>
<command batch="586">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="586">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="586">set(hSlider,'NumberTitle','off');</command>
<command batch="586">set(hSlider,'MenuBar','none');</command>
<command batch="586">set(hSlider,'ToolBar','none');</command>
<command batch="586">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="586">% UI SLIDER</command>
<command batch="586">hSli = uicontrol('style','slider','units',...</command>
<command batch="586">'pixel','position',[15 50 300 20],...</command>
<command batch="586">'Callback',@sliderCallBack);</command>
<command batch="586">% SLIDER LABEL</command>
<command batch="586">txt = uicontrol('Style','text',...</command>
<command batch="586">'Position',[85 80 150 20],...</command>
<command batch="586">'String',name);</command>
<command batch="586">% PUSH BUTTON</command>
<command batch="586">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="586">'String','Ok',...</command>
<command batch="586" execution_time="208">'position',[15 20 150 20]);</command>
<command batch="587">hSlider = figure;</command>
<command batch="587">name = 'Angular Alingment';</command>
<command batch="587">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="587">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="587">set(hSlider,'NumberTitle','off');</command>
<command batch="587">set(hSlider,'MenuBar','none');</command>
<command batch="587">set(hSlider,'ToolBar','none');</command>
<command batch="587">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="587">% UI SLIDER</command>
<command batch="587">hSli = uicontrol('style','slider','units',...</command>
<command batch="587">'pixel','position',[15 50 300 20],...</command>
<command batch="587">'Callback',@sliderCallBack);</command>
<command batch="587">% SLIDER LABEL</command>
<command batch="587">txt = uicontrol('Style','text',...</command>
<command batch="587">'Position',[95 80 150 20],...</command>
<command batch="587">'String',name);</command>
<command batch="587">% PUSH BUTTON</command>
<command batch="587">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="587">'String','Ok',...</command>
<command batch="587" execution_time="191">'position',[15 20 150 20]);</command>
<command batch="588">hSlider = figure;</command>
<command batch="588">name = 'Angular Alingment';</command>
<command batch="588">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="588">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="588">set(hSlider,'NumberTitle','off');</command>
<command batch="588">set(hSlider,'MenuBar','none');</command>
<command batch="588">set(hSlider,'ToolBar','none');</command>
<command batch="588">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="588">% UI SLIDER</command>
<command batch="588">hSli = uicontrol('style','slider','units',...</command>
<command batch="588">'pixel','position',[15 50 300 20],...</command>
<command batch="588">'Callback',@sliderCallBack);</command>
<command batch="588">% SLIDER LABEL</command>
<command batch="588">txt = uicontrol('Style','text',...</command>
<command batch="588">'Position',[95 80 150 20],...</command>
<command batch="588">'String',name);</command>
<command batch="588">% PUSH BUTTON (OK)</command>
<command batch="588">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="588">'String','Ok',...</command>
<command batch="588">'position',[15 20 150 20]);</command>
<command batch="588">% PUSH BUTTON (CANCEL)</command>
<command batch="588">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="588">'String','Cancel',...</command>
<command batch="588" execution_time="243">'position',[165 20 150 20]);</command>
<command batch="589">hSlider = figure;</command>
<command batch="589">name = 'Angular Alingment';</command>
<command batch="589">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="589">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="589">set(hSlider,'NumberTitle','off');</command>
<command batch="589">set(hSlider,'MenuBar','none');</command>
<command batch="589">set(hSlider,'ToolBar','none');</command>
<command batch="589">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="589">% UI SLIDER</command>
<command batch="589">hSli = uicontrol('style','slider','units',...</command>
<command batch="589">'pixel','position',[15 50 300 20],...</command>
<command batch="589">'Callback',@sliderCallBack);</command>
<command batch="589">% SLIDER LABEL</command>
<command batch="589">txt = uicontrol('Style','text',...</command>
<command batch="589">'Position',[95 60 150 20],...</command>
<command batch="589">'String',name);</command>
<command batch="589">% PUSH BUTTON (OK)</command>
<command batch="589">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="589">'String','Ok',...</command>
<command batch="589">'position',[15 20 150 20]);</command>
<command batch="589">% PUSH BUTTON (CANCEL)</command>
<command batch="589">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="589">'String','Cancel',...</command>
<command batch="589" execution_time="247">'position',[165 20 150 20]);</command>
<command batch="590">hSlider = figure;</command>
<command batch="590">name = 'Angular Alingment';</command>
<command batch="590">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="590">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="590">set(hSlider,'NumberTitle','off');</command>
<command batch="590">set(hSlider,'MenuBar','none');</command>
<command batch="590">set(hSlider,'ToolBar','none');</command>
<command batch="590">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="590">% UI SLIDER</command>
<command batch="590">hSli = uicontrol('style','slider','units',...</command>
<command batch="590">'pixel','position',[15 50 300 20],...</command>
<command batch="590">'Callback',@sliderCallBack);</command>
<command batch="590">% SLIDER LABEL</command>
<command batch="590">txt = uicontrol('Style','text',...</command>
<command batch="590">'Position',[95 80 100 20],...</command>
<command batch="590">'String',name);</command>
<command batch="590">% PUSH BUTTON (OK)</command>
<command batch="590">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="590">'String','Ok',...</command>
<command batch="590">'position',[15 20 150 20]);</command>
<command batch="590">% PUSH BUTTON (CANCEL)</command>
<command batch="590">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="590">'String','Cancel',...</command>
<command batch="590" execution_time="238">'position',[165 20 150 20]);</command>
<command batch="591">hSlider = figure;</command>
<command batch="591">name = 'Angular Alingment';</command>
<command batch="591">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="591">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="591">set(hSlider,'NumberTitle','off');</command>
<command batch="591">set(hSlider,'MenuBar','none');</command>
<command batch="591">set(hSlider,'ToolBar','none');</command>
<command batch="591">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="591">% UI SLIDER</command>
<command batch="591">hSli = uicontrol('style','slider','units',...</command>
<command batch="591">'pixel','position',[15 50 300 20],...</command>
<command batch="591">'Callback',@sliderCallBack);</command>
<command batch="591">% SLIDER LABEL</command>
<command batch="591">txt = uicontrol('Style','text',...</command>
<command batch="591">'Position',[110 80 100 20],...</command>
<command batch="591">'String',name);</command>
<command batch="591">% PUSH BUTTON (OK)</command>
<command batch="591">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="591">'String','Ok',...</command>
<command batch="591">'position',[15 20 150 20]);</command>
<command batch="591">% PUSH BUTTON (CANCEL)</command>
<command batch="591">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="591">'String','Cancel',...</command>
<command batch="591" execution_time="245">'position',[165 20 150 20]);</command>
<command batch="592">hSlider = figure;</command>
<command batch="592">name = 'Angular Alingment';</command>
<command batch="592">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="592">set(hSlider,'name','limbRevolution.CAD');</command>
<command batch="592">set(hSlider,'NumberTitle','off');</command>
<command batch="592">set(hSlider,'MenuBar','none');</command>
<command batch="592">set(hSlider,'ToolBar','none');</command>
<command batch="592">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="592">% UI SLIDER</command>
<command batch="592">hSli = uicontrol('style','slider','units',...</command>
<command batch="592">'pixel','position',[15 50 300 20],...</command>
<command batch="592">'Callback',@sliderCallBack);</command>
<command batch="592">% SLIDER LABEL</command>
<command batch="592">txt = uicontrol('Style','text',...</command>
<command batch="592">'Position',[110 80 110 20],...</command>
<command batch="592">'String',name);</command>
<command batch="592">% PUSH BUTTON (OK)</command>
<command batch="592">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="592">'String','Ok',...</command>
<command batch="592">'position',[15 20 150 20]);</command>
<command batch="592">% PUSH BUTTON (CANCEL)</command>
<command batch="592">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="592">'String','Cancel',...</command>
<command batch="592" execution_time="241">'position',[165 20 150 20]);</command>
<command batch="593">hSlider = figure;</command>
<command batch="593">name = 'Angular Alingment';</command>
<command batch="593">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="593">set(hSlider,'name','Angular alignment');</command>
<command batch="593">set(hSlider,'NumberTitle','off');</command>
<command batch="593">set(hSlider,'MenuBar','none');</command>
<command batch="593">set(hSlider,'ToolBar','none');</command>
<command batch="593">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="593">% UI SLIDER</command>
<command batch="593">hSli = uicontrol('style','slider','units',...</command>
<command batch="593">'pixel','position',[15 50 300 20],...</command>
<command batch="593">'Callback',@sliderCallBack);</command>
<command batch="593">% SLIDER LABEL</command>
<command batch="593">txt = uicontrol('Style','radiobutton',...</command>
<command batch="593">'Position',[110 80 110 20],...</command>
<command batch="593">'String',name);</command>
<command batch="593">% PUSH BUTTON (OK)</command>
<command batch="593">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="593">'String','Ok',...</command>
<command batch="593">'position',[15 20 150 20]);</command>
<command batch="593">% PUSH BUTTON (CANCEL)</command>
<command batch="593">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="593">'String','Cancel',...</command>
<command batch="593" execution_time="236">'position',[165 20 150 20]);</command>
<command batch="594">hSlider = figure;</command>
<command batch="594">name = 'Angular Alingment';</command>
<command batch="594">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="594">set(hSlider,'name','Angular alignment');</command>
<command batch="594">set(hSlider,'NumberTitle','off');</command>
<command batch="594">set(hSlider,'MenuBar','none');</command>
<command batch="594">set(hSlider,'ToolBar','none');</command>
<command batch="594">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="594">% UI SLIDER</command>
<command batch="594">hSli = uicontrol('style','slider','units',...</command>
<command batch="594">'pixel','position',[15 50 300 20],...</command>
<command batch="594">'Callback',@sliderCallBack);</command>
<command batch="594">% ML ALIGNMENT</command>
<command batch="594">txt = uicontrol('Style','radiobutton',...</command>
<command batch="594">'Position',[15 20 150 20],...</command>
<command batch="594">'String','ML');</command>
<command batch="594">% AP ALINGMENT</command>
<command batch="594">txt = uicontrol('Style','radiobutton',...</command>
<command batch="594">'Position',[15 20 150 20],...</command>
<command batch="594">'String','AP');</command>
<command batch="594">% PUSH BUTTON (OK)</command>
<command batch="594">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="594">'String','Ok',...</command>
<command batch="594">'position',[15 20 150 20]);</command>
<command batch="594">% PUSH BUTTON (CANCEL)</command>
<command batch="594">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="594">'String','Cancel',...</command>
<command batch="594" execution_time="297">'position',[165 20 150 20]);</command>
<command batch="595">hSlider = figure;</command>
<command batch="595">name = 'Angular Alingment';</command>
<command batch="595">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="595">set(hSlider,'name','Angular alignment');</command>
<command batch="595">set(hSlider,'NumberTitle','off');</command>
<command batch="595">set(hSlider,'MenuBar','none');</command>
<command batch="595">set(hSlider,'ToolBar','none');</command>
<command batch="595">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="595">% UI SLIDER</command>
<command batch="595">hSli = uicontrol('style','slider','units',...</command>
<command batch="595">'pixel','position',[15 50 300 20],...</command>
<command batch="595">'Callback',@sliderCallBack);</command>
<command batch="595">% ML ALIGNMENT</command>
<command batch="595">txt = uicontrol('Style','radiobutton',...</command>
<command batch="595">'Position',[15 80 150 20],...</command>
<command batch="595">'String','ML');</command>
<command batch="595">% AP ALINGMENT</command>
<command batch="595">txt = uicontrol('Style','radiobutton',...</command>
<command batch="595">'Position',[15 80 150 20],...</command>
<command batch="595">'String','AP');</command>
<command batch="595">% PUSH BUTTON (OK)</command>
<command batch="595">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="595">'String','Ok',...</command>
<command batch="595">'position',[15 20 150 20]);</command>
<command batch="595">% PUSH BUTTON (CANCEL)</command>
<command batch="595">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="595">'String','Cancel',...</command>
<command batch="595" execution_time="275">'position',[165 20 150 20]);</command>
<command batch="596">hSlider = figure;</command>
<command batch="596">name = 'Angular Alingment';</command>
<command batch="596">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="596">set(hSlider,'name','Angular alignment');</command>
<command batch="596">set(hSlider,'NumberTitle','off');</command>
<command batch="596">set(hSlider,'MenuBar','none');</command>
<command batch="596">set(hSlider,'ToolBar','none');</command>
<command batch="596">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="596">% UI SLIDER</command>
<command batch="596">hSli = uicontrol('style','slider','units',...</command>
<command batch="596">'pixel','position',[15 50 300 20],...</command>
<command batch="596">'Callback',@sliderCallBack);</command>
<command batch="596">% ML ALIGNMENT</command>
<command batch="596">txt = uicontrol('Style','radiobutton',...</command>
<command batch="596">'Position',[15 80 150 20],...</command>
<command batch="596">'String','ML');</command>
<command batch="596">% AP ALINGMENT</command>
<command batch="596">txt = uicontrol('Style','radiobutton',...</command>
<command batch="596">'Position',[165 80 150 20],...</command>
<command batch="596">'String','AP');</command>
<command batch="596">% PUSH BUTTON (OK)</command>
<command batch="596">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="596">'String','Ok',...</command>
<command batch="596">'position',[15 20 150 20]);</command>
<command batch="596">% PUSH BUTTON (CANCEL)</command>
<command batch="596">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="596">'String','Cancel',...</command>
<command batch="596" execution_time="272">'position',[165 20 150 20]);</command>
<command batch="597" error="true">function slider()</command>
<command batch="597" error="true">hSlider = figure;</command>
<command batch="597" error="true">name = 'Angular Alingment';</command>
<command batch="597" error="true">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="597" error="true">set(hSlider,'name','Angular alignment');</command>
<command batch="597" error="true">set(hSlider,'NumberTitle','off');</command>
<command batch="597" error="true">set(hSlider,'MenuBar','none');</command>
<command batch="597" error="true">set(hSlider,'ToolBar','none');</command>
<command batch="597" error="true">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="597" error="true">% UI SLIDER</command>
<command batch="597" error="true">hSli = uicontrol('style','slider','units',...</command>
<command batch="597" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="597" error="true">'Callback',@sliderCallBack);</command>
<command batch="597" error="true">% ML ALIGNMENT</command>
<command batch="597" error="true">hRadioML = uicontrol('Style','radiobutton',...</command>
<command batch="597" error="true">'Position',[15 80 150 20],...</command>
<command batch="597" error="true">'String','ML',...</command>
<command batch="597" error="true">'Callback',@mlAlignCallBack);</command>
<command batch="597" error="true">% AP ALINGMENT</command>
<command batch="597" error="true">hRadioAP = uicontrol('Style','radiobutton',...</command>
<command batch="597" error="true">'Position',[165 80 150 20],...</command>
<command batch="597" error="true">'String','AP',...</command>
<command batch="597" error="true">'Callback',@apAlignCallBack);</command>
<command batch="597" error="true">% PUSH BUTTON (OK)</command>
<command batch="597" error="true">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="597" error="true">'String','Ok',...</command>
<command batch="597" error="true">'position',[15 20 150 20],...</command>
<command batch="597" error="true">'Callback',@pushOKCallBack);</command>
<command batch="597" error="true">% PUSH BUTTON (CANCEL)</command>
<command batch="597" error="true">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="597" error="true">'String','Cancel',...</command>
<command batch="597" error="true">'position',[165 20 150 20],...</command>
<command batch="597" error="true">'Callback',@pushCancelCallBack);</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function sliderCallBack( handle, event )</command>
<command batch="597" error="true">model = guidata(hObject);</command>
<command batch="597" error="true">model.guiPos = handle.Value;</command>
<command batch="597" error="true">align();</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function apAlignCallBack( handle, event )</command>
<command batch="597" error="true">model = guidata(hObject);</command>
<command batch="597" error="true">model.guiPos = handle.Value;</command>
<command batch="597" error="true">alignProfile();</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function mlAlignCallBack( handle, event )</command>
<command batch="597" error="true">model = guidata(hObject);</command>
<command batch="597" error="true">model.guiPos = handle.Value;</command>
<command batch="597" error="true">alignProfile();</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function pushOKCallBack( handle, event )</command>
<command batch="597" error="true">model = guidata(hObject);</command>
<command batch="597" error="true">model.guiPos = handle.Value;</command>
<command batch="597" error="true">return</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function pushCancelCallBack( handle, event )</command>
<command batch="597" error="true">model = guidata(hObject);</command>
<command batch="597" error="true">model.guiPos = handle.Value;</command>
<command batch="597" error="true">return</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function alignProfile ()</command>
<command batch="597" error="true">if strncmp( 'AP');</command>
<command batch="597" error="true">model.sceneData = model.dataHome;</command>
<command batch="597" error="true">else</command>
<command batch="597" error="true">model.sceneData = model.dataHome;</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">function align()</command>
<command batch="597" error="true">% MANUALLY SET THE ANGULAR ALIGNMENT</command>
<command batch="597" error="true">disp(model.guiPos*90);</command>
<command batch="597" error="true">R = rotY(model.guiPost*90);</command>
<command batch="597" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="597" error="true">model.data(idx,:) = model.data(idx,:) * R;</command>
<command batch="597" error="true">end</command>
<command batch="597" error="true">% DRAW SCENE</command>
<command batch="597" error="true">hObject.sceneData = hObject.data;</command>
<command batch="597" error="true">set(hObject.handlePatch,'vertices',hObject.sceneData(:,:,1));</command>
<command batch="597" error="true">drawnow;</command>
<command batch="597" error="true">% SAVE MODEL FOR SCENE</command>
<command batch="597" error="true">model.homeData = model.data;</command>
<command batch="597" error="true">% SAVE MODEL</command>
<command batch="597" error="true">guidata(hObject,model);</command>
<command batch="597" error="true" execution_time="658">end</command>
<command execution_time="21">idx = 1; while idx ~= 100; idx = idx + 1; if idx == 10; break; end; end</command>
<command execution_time="25">idx</command>
<command error="true" execution_time="8732">templateLiner</command>
<command execution_time="26">handle</command>
<command error="true" execution_time="37">handle.string</command>
<command execution_time="24">handle.String</command>
<command error="true" execution_time="28">strncmp('AP',ans)</command>
<command execution_time="27">strcmp('AP',ans)</command>
<command execution_time="25">hObject</command>
<command error="true" execution_time="23970">templateLiner</command>
<command execution_time="25">handle</command>
<command execution_time="25">event</command>
<command execution_time="12804">templateLiner</command>
<command execution_time="24">handle</command>
<command error="true" execution_time="37">strcmp('AP',handle.string);</command>
<command execution_time="28">strcmp('AP',handle.String);</command>
<command execution_time="26">ans</command>
<command execution_time="24">hObject</command>
<command execution_time="23">model</command>
<command error="true" execution_time="35">model.sceneData = model.dataHome;</command>
<command execution_time="37174" repeat="7">templateLiner</command>
<command error="true" execution_time="53">handle</command>
<command execution_time="9202">templateLiner</command>
<command execution_time="24">handle</command>
<command execution_time="24">event</command>
<command error="true" execution_time="50">close(event.Source)</command>
<command error="true" execution_time="5416">model</command>
<command execution_time="10967" repeat="3">templateLiner</command>
<command execution_time="19">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="598">R = rotx(handle.Value*90);</command>
<command batch="598">for idx = 1:model.numSliceHeights</command>
<command batch="598">model.data(idx,:) = model.data(idx,:) * R;</command>
<command batch="598">end</command>
<command batch="598">% SAVE DATA</command>
<command batch="598">guidata(hObject,model);</command>
<command batch="598">% DRAW SCENE</command>
<command batch="598">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="598" execution_time="345">drawnow;</command>
<command execution_time="25">model</command>
<command execution_time="23">disp(handle.Value*90);</command>
<command execution_time="23">handle.Value</command>
<command batch="599">model = guidata(hObject);</command>
<command batch="599">disp(handle.Value*1000);</command>
<command batch="599">R = rotx(handle.Value*90);</command>
<command batch="599">for idx = 1:model.numSliceHeights</command>
<command batch="599">model.data(idx,:) = model.data(idx,:) * R;</command>
<command batch="599" execution_time="176">end</command>
<command batch="600" repeat="2">% SAVE DATA</command>
<command batch="600">guidata(hObject,model);</command>
<command batch="600">% DRAW SCENE</command>
<command batch="600">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="600" execution_time="247">drawnow;</command>
<command execution_time="23">disp(handle.Value*1000);</command>
<command batch="601">model = guidata(hObject);</command>
<command batch="601">disp(handle.Value*1000);</command>
<command batch="601">R = rotx(handle.Value*90);</command>
<command batch="601">for idx = 1:model.numSliceHeights</command>
<command batch="601">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="601">end</command>
<command batch="601">% SAVE DATA</command>
<command batch="601">guidata(hObject,model);</command>
<command batch="601">% DRAW SCENE</command>
<command batch="601">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="601" execution_time="350">drawnow;</command>
<command batch="602">% MANUALLY SET THE ANGULAR ALIGNMENT</command>
<command batch="602">model = guidata(hObject);</command>
<command batch="602">disp(handle.Value*1000);</command>
<command batch="602">R = roty(handle.Value*90);</command>
<command batch="602">for idx = 1:model.numSliceHeights</command>
<command batch="602">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="602">end</command>
<command batch="602">% SAVE DATA</command>
<command batch="602">guidata(hObject,model);</command>
<command batch="602">% DRAW SCENE</command>
<command batch="602">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="602" execution_time="364">drawnow;</command>
<command batch="603">model = guidata(hObject);</command>
<command batch="603">disp(handle.Value*1000);</command>
<command batch="603">R = rotz(handle.Value*90);</command>
<command batch="603">for idx = 1:model.numSliceHeights</command>
<command batch="603">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="603">end</command>
<command batch="603">% SAVE DATA</command>
<command batch="603">guidata(hObject,model);</command>
<command batch="603">% DRAW SCENE</command>
<command batch="603">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="603" execution_time="368">drawnow;</command>
<command batch="604">model = guidata(hObject);</command>
<command batch="604">disp(handle.Value*1000);</command>
<command batch="604">R = roty(handle.Value*90); % x</command>
<command batch="604">for idx = 1:model.numSliceHeights</command>
<command batch="604">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="604">end</command>
<command batch="604">% SAVE DATA</command>
<command batch="604">guidata(hObject,model);</command>
<command batch="604">% DRAW SCENE</command>
<command batch="604">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="604" execution_time="358">drawnow;</command>
<command error="true" execution_time="4982" repeat="4">templateLiner</command>
<command execution_time="71">figure;</command>
<command execution_time="73">h = figure;</command>
<command error="true" execution_time="59">axes(h,'off');</command>
<command error="true" execution_time="58">set(h,'axes','off')</command>
<command error="true" execution_time="132">axis(h,'off');</command>
<command error="true" execution_time="30">axis(h,'none');</command>
<command execution_time="162">axis('off')</command>
<command execution_time="12456">templateLiner</command>
<command batch="605">R = roty(handle.Value*1000);</command>
<command batch="605">for idx = 1:model.numSliceHeights</command>
<command batch="605">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="605">end</command>
<command batch="605">% SAVE DATA</command>
<command batch="605">guidata(hObject,model);</command>
<command batch="605">% DRAW SCENE</command>
<command batch="605">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="605" execution_time="350">drawnow;</command>
<command batch="606">R = rotz(handle.Value*1000);</command>
<command batch="606">for idx = 1:model.numSliceHeights</command>
<command batch="606">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="606">end</command>
<command batch="606">% SAVE DATA</command>
<command batch="606">guidata(hObject,model);</command>
<command batch="606">% DRAW SCENE</command>
<command batch="606">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="606" execution_time="345">drawnow;</command>
<command batch="607">R = rotx(handle.Value*1000);</command>
<command batch="607">for idx = 1:model.numSliceHeights</command>
<command batch="607">model.sceneData(idx,:) = model.sceneData(idx,:) * R;</command>
<command batch="607">end</command>
<command batch="607">% SAVE DATA</command>
<command batch="607">guidata(hObject,model);</command>
<command batch="607">% DRAW SCENE</command>
<command batch="607">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="607" execution_time="338">drawnow;</command>
<command error="true" execution_time="53829" repeat="5">templateLiner</command>
<command batch="608" error="true">hSli = uicontrol('style','slider','units',...</command>
<command batch="608" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="608" error="true">'Max',1,'Min','Value',.5,...</command>
<command batch="608" error="true" execution_time="82">'Callback',@sliderCallBack);</command>
<command batch="609">hSli = uicontrol('style','slider','units',...</command>
<command batch="609">'pixel','position',[15 50 300 20],...</command>
<command batch="609">'Max',1,'Min',0,'Value',.5,...</command>
<command batch="609" execution_time="33">'Callback',@sliderCallBack);</command>
<command error="true" execution_time="20544">templateLiner</command>
<command batch="610">hSli = uicontrol('style','slider','units',...</command>
<command batch="610">'pixel','position',[15 50 300 20],...</command>
<command batch="610">'Max',-1,'Min',1,'Value',0,...</command>
<command batch="610" execution_time="89">'Callback',@sliderCallBack);</command>
<command batch="611">hSli = uicontrol('style','slider','units',...</command>
<command batch="611">'pixel','position',[15 50 300 20],...</command>
<command batch="611">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="611" execution_time="93">'Callback',@sliderCallBack);</command>
<command batch="612" error="true" execution_time="183922" repeat="4">templateLiner</command>
<command batch="612" error="true" execution_time="133863">get(model.handlePatch)</command>
<command execution_time="8286">templateLiner</command>
<command execution_time="48">model.handlePatch</command>
<command error="true" execution_time="62">foo = get(model.handlePatch,'Vertices');</command>
<command execution_time="231">get(model.handlePatch,'Vertices')</command>
<command batch="613" error="true" execution_time="27940" repeat="3">templateLiner</command>
<command batch="613" error="true" execution_time="24107">get(gcf,'Position')</command>
<command batch="614">hSlider = figure;</command>
<command batch="614">axis off;</command>
<command batch="614">name = 'Angular Alingment';</command>
<command batch="614">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="614">set(hSlider,'name',name);</command>
<command batch="614">set(hSlider,'NumberTitle','off');</command>
<command batch="614">set(hSlider,'MenuBar','none');</command>
<command batch="614">set(hSlider,'ToolBar','none');</command>
<command batch="614">set(hSlider,'Position',[2738 695 329 112]);</command>
<command batch="614">% UI SLIDER</command>
<command batch="614">hSli = uicontrol('style','slider','units',...</command>
<command batch="614">'pixel','position',[15 50 300 20],...</command>
<command batch="614">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="614">'Callback',@sliderCallBack);</command>
<command batch="614">%         % ML ALIGNMENT</command>
<command batch="614">%         hRadioML = uicontrol('Style','radiobutton',...</command>
<command batch="614">%             'Position',[15 80 150 20],...</command>
<command batch="614">%             'String','ML',...</command>
<command batch="614">%             'Callback',@mlAlignCallBack);</command>
<command batch="614">%</command>
<command batch="614">%         % AP ALINGMENT</command>
<command batch="614">%         hRadioAP = uicontrol('Style','radiobutton',...</command>
<command batch="614">%             'Position',[165 80 150 20],...</command>
<command batch="614">%             'String','AP',...</command>
<command batch="614">%             'Callback',@apAlignCallBack);</command>
<command batch="614">% PUSH BUTTON (OK)</command>
<command batch="614">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="614">'String','Ok',...</command>
<command batch="614">'position',[15 20 150 20],...</command>
<command batch="614">'Callback',@pushOKCallBack);</command>
<command batch="614">% PUSH BUTTON (CANCEL)</command>
<command batch="614">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="614">'String','Cancel',...</command>
<command batch="614">'position',[165 20 150 20],...</command>
<command batch="614" execution_time="335">'Callback',@pushCancelCallBack);</command>
<command execution_time="24">get(gcf,'Position')</command>
<command batch="615">hSlider = figure;</command>
<command batch="615">axis off;</command>
<command batch="615">name = 'Angular Alingment';</command>
<command batch="615">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="615">set(hSlider,'name',name);</command>
<command batch="615">set(hSlider,'NumberTitle','off');</command>
<command batch="615">set(hSlider,'MenuBar','none');</command>
<command batch="615">set(hSlider,'ToolBar','none');</command>
<command batch="615">set(hSlider,'Position',[2738 725 329 82]);</command>
<command batch="615">% UI SLIDER</command>
<command batch="615">hSli = uicontrol('style','slider','units',...</command>
<command batch="615">'pixel','position',[15 50 300 20],...</command>
<command batch="615">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="615">'Callback',@sliderCallBack);</command>
<command batch="615">%         % ML ALIGNMENT</command>
<command batch="615">%         hRadioML = uicontrol('Style','radiobutton',...</command>
<command batch="615">%             'Position',[15 80 150 20],...</command>
<command batch="615">%             'String','ML',...</command>
<command batch="615">%             'Callback',@mlAlignCallBack);</command>
<command batch="615">%</command>
<command batch="615">%         % AP ALINGMENT</command>
<command batch="615">%         hRadioAP = uicontrol('Style','radiobutton',...</command>
<command batch="615">%             'Position',[165 80 150 20],...</command>
<command batch="615">%             'String','AP',...</command>
<command batch="615">%             'Callback',@apAlignCallBack);</command>
<command batch="615">% PUSH BUTTON (OK)</command>
<command batch="615">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="615">'String','Ok',...</command>
<command batch="615">'position',[15 20 150 20],...</command>
<command batch="615">'Callback',@pushOKCallBack);</command>
<command batch="615">% PUSH BUTTON (CANCEL)</command>
<command batch="615">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="615">'String','Cancel',...</command>
<command batch="615">'position',[165 20 150 20],...</command>
<command batch="615" execution_time="391">'Callback',@pushCancelCallBack);</command>
<command error="true" execution_time="5455" repeat="3">templateLiner</command>
<command execution_time="25">handle</command>
<command error="true" execution_time="352">hSlider</command>
<command execution_time="23">event</command>
<command execution_time="6824" repeat="3">templateLiner</command>
<command error="true" execution_time="328">hSlider</command>
<command execution_time="6014" repeat="2">templateLiner</command>
<command error="true" execution_time="329">hSlider</command>
<command error="true" execution_time="28">foo = guidata(hSlider)</command>
<command error="true" execution_time="322">guidata(hSlider)</command>
<command error="true" execution_time="29">guidata(slider)</command>
<command error="true" execution_time="3913" repeat="2">templateLiner</command>
<command execution_time="25">handle</command>
<command error="true" execution_time="64">close(hSli.Parent)</command>
<command execution_time="45">close(handle.Parent)</command>
<command error="true" execution_time="27055" repeat="2">templateLiner</command>
</session>
<session>
<command time_stamp="15139bdf2c5">%-- 11/24/2015 8:45 AM --%</command>
<command error="true" execution_time="65301">templateLiner</command>
<command execution_time="31">theta = 0:4:360;</command>
<command execution_time="16">size(theta)</command>
<command execution_time="31">theta = 4:4:360;</command>
<command execution_time="31">size(theta)</command>
<command execution_time="15">xcenter = 10; ycenter = 10; r = 5;</command>
<command execution_time="31">x = xcenter * (r*cosd(theta));</command>
<command execution_time="16">y = ycenter * (r*sind(theta));</command>
<command execution_time="453">figure; plot(x,y)</command>
<command batch="616">hSlider = figure;</command>
<command batch="616">axis off;</command>
<command batch="616">name = 'Cylindrical adapter alingment';</command>
<command batch="616">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="616">set(hSlider,'name',name);</command>
<command batch="616">set(hSlider,'NumberTitle','off');</command>
<command batch="616">set(hSlider,'MenuBar','none');</command>
<command batch="616">set(hSlider,'ToolBar','none');</command>
<command batch="616">set(hSlider,'Position',[2738 725 329 82]);</command>
<command batch="616">% UI SLIDER</command>
<command batch="616">hSli = uicontrol('style','slider','units',...</command>
<command batch="616">'pixel','position',[15 50 300 20],...</command>
<command batch="616">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="616">'Callback',@sliderCallBack);</command>
<command batch="616">% PUSH BUTTON (OK)</command>
<command batch="616">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="616">'String','Ok',...</command>
<command batch="616">'position',[15 20 150 20],...</command>
<command batch="616">'Callback',@pushOKCallBack);</command>
<command batch="616">% PUSH BUTTON (CANCEL)</command>
<command batch="616">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="616">'String','Cancel',...</command>
<command batch="616">'position',[165 20 150 20],...</command>
<command batch="616" execution_time="3980">'Callback',@pushCancelCallBack);</command>
<command execution_time="31">get(gcf,'position')</command>
<command batch="617">hSlider = figure;</command>
<command batch="617">axis off;</command>
<command batch="617">name = 'Cylindrical adapter alingment';</command>
<command batch="617">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="617">set(hSlider,'name',name);</command>
<command batch="617">set(hSlider,'NumberTitle','off');</command>
<command batch="617">set(hSlider,'MenuBar','none');</command>
<command batch="617">set(hSlider,'ToolBar','none');</command>
<command batch="617">set(hSlider,'Position',[2738 663 329 144]);</command>
<command batch="617">% UI SLIDER</command>
<command batch="617">hSli = uicontrol('style','slider','units',...</command>
<command batch="617">'pixel','position',[15 50 300 20],...</command>
<command batch="617">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="617">'Callback',@sliderCallBack);</command>
<command batch="617">% PUSH BUTTON (OK)</command>
<command batch="617">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="617">'String','Ok',...</command>
<command batch="617">'position',[15 20 150 20],...</command>
<command batch="617">'Callback',@pushOKCallBack);</command>
<command batch="617">% PUSH BUTTON (CANCEL)</command>
<command batch="617">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="617">'String','Cancel',...</command>
<command batch="617">'position',[165 20 150 20],...</command>
<command batch="617" execution_time="312">'Callback',@pushCancelCallBack);</command>
<command batch="618" error="true">hSlider = figure;</command>
<command batch="618" error="true">axis off;</command>
<command batch="618" error="true">name = 'Cylindrical adapter alingment';</command>
<command batch="618" error="true">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="618" error="true">set(hSlider,'name',name);</command>
<command batch="618" error="true">set(hSlider,'NumberTitle','off');</command>
<command batch="618" error="true">set(hSlider,'MenuBar','none');</command>
<command batch="618" error="true">set(hSlider,'ToolBar','none');</command>
<command batch="618" error="true">set(hSlider,'Position',[2738 663 329 144]);</command>
<command batch="618" error="true">% X UI SLIDER</command>
<command batch="618" error="true">hSli = uicontrol('style','slider','units',...</command>
<command batch="618" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="618" error="true">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="618" error="true">'Callback',@sliderCallBack);</command>
<command batch="618" error="true">% X UI SLIDETER NAME</command>
<command batch="618" error="true">hSli = uicontrol('style','text','units',...</command>
<command batch="618" error="true">'pixel','position',[45 50 300 20],...</command>
<command batch="618" error="true">'name','AP alignment');</command>
<command batch="618" error="true">% Y UI SLIDER</command>
<command batch="618" error="true">hSli = uicontrol('style','slider','units',...</command>
<command batch="618" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="618" error="true">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="618" error="true">'Callback',@sliderCallBack);</command>
<command batch="618" error="true">% PUSH BUTTON (OK)</command>
<command batch="618" error="true">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="618" error="true">'String','Ok',...</command>
<command batch="618" error="true">'position',[15 20 150 20],...</command>
<command batch="618" error="true">'Callback',@pushOKCallBack);</command>
<command batch="618" error="true">% PUSH BUTTON (CANCEL)</command>
<command batch="618" error="true">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="618" error="true">'String','Cancel',...</command>
<command batch="618" error="true">'position',[165 20 150 20],...</command>
<command batch="618" error="true" execution_time="475">'Callback',@pushCancelCallBack);</command>
<command batch="619">hSlider = figure;</command>
<command batch="619">axis off;</command>
<command batch="619">name = 'Cylindrical adapter alingment';</command>
<command batch="619">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="619">set(hSlider,'name',name);</command>
<command batch="619">set(hSlider,'NumberTitle','off');</command>
<command batch="619">set(hSlider,'MenuBar','none');</command>
<command batch="619">set(hSlider,'ToolBar','none');</command>
<command batch="619">set(hSlider,'Position',[2738 663 329 144]);</command>
<command batch="619">% X UI SLIDER</command>
<command batch="619">hSli = uicontrol('style','slider','units',...</command>
<command batch="619">'pixel','position',[15 50 300 20],...</command>
<command batch="619">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="619">'Callback',@sliderCallBack);</command>
<command batch="619">% X UI SLIDETER NAME</command>
<command batch="619">hSli = uicontrol('style','text','units',...</command>
<command batch="619">'pixel','position',[45 50 300 20],...</command>
<command batch="619">'string','AP alignment');</command>
<command batch="619">% Y UI SLIDER</command>
<command batch="619">hSli = uicontrol('style','slider','units',...</command>
<command batch="619">'pixel','position',[15 50 300 20],...</command>
<command batch="619">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="619">'Callback',@sliderCallBack);</command>
<command batch="619">% PUSH BUTTON (OK)</command>
<command batch="619">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="619">'String','Ok',...</command>
<command batch="619">'position',[15 20 150 20],...</command>
<command batch="619">'Callback',@pushOKCallBack);</command>
<command batch="619">% PUSH BUTTON (CANCEL)</command>
<command batch="619">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="619">'String','Cancel',...</command>
<command batch="619">'position',[165 20 150 20],...</command>
<command batch="619" execution_time="436">'Callback',@pushCancelCallBack);</command>
<command batch="620">hSlider = figure;</command>
<command batch="620">axis off;</command>
<command batch="620">name = 'Cylindrical adapter alingment';</command>
<command batch="620">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="620">set(hSlider,'name',name);</command>
<command batch="620">set(hSlider,'NumberTitle','off');</command>
<command batch="620">set(hSlider,'MenuBar','none');</command>
<command batch="620">set(hSlider,'ToolBar','none');</command>
<command batch="620">set(hSlider,'Position',[2738 663 329 144]);</command>
<command batch="620">% X UI SLIDER</command>
<command batch="620">hSli = uicontrol('style','slider','units',...</command>
<command batch="620">'pixel','position',[15 50 300 20],...</command>
<command batch="620">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="620">'Callback',@sliderCallBack);</command>
<command batch="620">% X UI SLIDETER NAME</command>
<command batch="620">hSli = uicontrol('style','text','units',...</command>
<command batch="620">'pixel','position',[15 80 300 20],...</command>
<command batch="620">'string','AP alignment');</command>
<command batch="620">% Y UI SLIDER</command>
<command batch="620">hSli = uicontrol('style','slider','units',...</command>
<command batch="620">'pixel','position',[15 50 300 20],...</command>
<command batch="620">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="620">'Callback',@sliderCallBack);</command>
<command batch="620">% PUSH BUTTON (OK)</command>
<command batch="620">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="620">'String','Ok',...</command>
<command batch="620">'position',[15 20 150 20],...</command>
<command batch="620">'Callback',@pushOKCallBack);</command>
<command batch="620">% PUSH BUTTON (CANCEL)</command>
<command batch="620">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="620">'String','Cancel',...</command>
<command batch="620">'position',[165 20 150 20],...</command>
<command batch="620" execution_time="422">'Callback',@pushCancelCallBack);</command>
<command execution_time="31">get(gcf,'position')</command>
<command batch="621">hSlider = figure;</command>
<command batch="621">axis off;</command>
<command batch="621">name = 'Cylindrical adapter alingment';</command>
<command batch="621">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="621">set(hSlider,'name',name);</command>
<command batch="621">set(hSlider,'NumberTitle','off');</command>
<command batch="621">set(hSlider,'MenuBar','none');</command>
<command batch="621">set(hSlider,'ToolBar','none');</command>
<command batch="621">set(hSlider,'Position',[2738 631 329 176]);</command>
<command batch="621">% AP (I.E., X) UI SLIDER</command>
<command batch="621">hSli = uicontrol('style','slider','units',...</command>
<command batch="621">'pixel','position',[15 50 300 20],...</command>
<command batch="621">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="621">'Callback',@sliderCallBack);</command>
<command batch="621">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="621">hSli = uicontrol('style','text','units',...</command>
<command batch="621">'pixel','position',[15 80 300 20],...</command>
<command batch="621">'string','A-P alignment');</command>
<command batch="621">% ML (I.E., Y) UI SLIDER</command>
<command batch="621">hSli = uicontrol('style','slider','units',...</command>
<command batch="621">'pixel','position',[15 110 300 20],...</command>
<command batch="621">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="621">'Callback',@sliderCallBack);</command>
<command batch="621">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="621">hSli = uicontrol('style','text','units',...</command>
<command batch="621">'pixel','position',[15 140 300 20],...</command>
<command batch="621">'string','M-L alignment');</command>
<command batch="621">% PUSH BUTTON (OK)</command>
<command batch="621">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="621">'String','Ok',...</command>
<command batch="621">'position',[15 20 150 20],...</command>
<command batch="621">'Callback',@pushOKCallBack);</command>
<command batch="621">% PUSH BUTTON (CANCEL)</command>
<command batch="621">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="621">'String','Cancel',...</command>
<command batch="621">'position',[165 20 150 20],...</command>
<command batch="621" execution_time="468">'Callback',@pushCancelCallBack);</command>
<command execution_time="32">get(gcf,'position')</command>
<command batch="622">hSlider = figure;</command>
<command batch="622">axis off;</command>
<command batch="622">name = 'Cylindrical adapter alingment';</command>
<command batch="622">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="622">set(hSlider,'name',name);</command>
<command batch="622">set(hSlider,'NumberTitle','off');</command>
<command batch="622">set(hSlider,'MenuBar','none');</command>
<command batch="622">set(hSlider,'ToolBar','none');</command>
<command batch="622">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="622">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="622">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="622">'pixel','position',[15 170 150 20],...</command>
<command batch="622">'string','Cylindrical adapter height (mm):');</command>
<command batch="622">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="622">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="622">'pixel','position',[165 170 300 20],...</command>
<command batch="622">'string','width (mm):');</command>
<command batch="622">% AP (I.E., X) UI SLIDER</command>
<command batch="622">hSli = uicontrol('style','slider','units',...</command>
<command batch="622">'pixel','position',[15 50 300 20],...</command>
<command batch="622">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="622">'Callback',@mlSliderCallBack);</command>
<command batch="622">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="622">hSli = uicontrol('style','text','units',...</command>
<command batch="622">'pixel','position',[15 80 300 20],...</command>
<command batch="622">'string','A-P alignment');</command>
<command batch="622">% ML (I.E., Y) UI SLIDER</command>
<command batch="622">hSli = uicontrol('style','slider','units',...</command>
<command batch="622">'pixel','position',[15 110 300 20],...</command>
<command batch="622">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="622">'Callback',@apSliderCallBack);</command>
<command batch="622">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="622">hSli = uicontrol('style','text','units',...</command>
<command batch="622">'pixel','position',[15 140 300 20],...</command>
<command batch="622">'string','M-L alignment');</command>
<command batch="622">% PUSH BUTTON (OK)</command>
<command batch="622">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="622">'String','Ok',...</command>
<command batch="622">'position',[15 20 150 20],...</command>
<command batch="622">'Callback',@pushOKCallBack);</command>
<command batch="622">% PUSH BUTTON (CANCEL)</command>
<command batch="622">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="622">'String','Cancel',...</command>
<command batch="622">'position',[165 20 150 20],...</command>
<command batch="622" execution_time="531">'Callback',@pushCancelCallBack);</command>
<command batch="623">hSlider = figure;</command>
<command batch="623">axis off;</command>
<command batch="623">name = 'Cylindrical adapter alingment';</command>
<command batch="623">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="623">set(hSlider,'name',name);</command>
<command batch="623">set(hSlider,'NumberTitle','off');</command>
<command batch="623">set(hSlider,'MenuBar','none');</command>
<command batch="623">set(hSlider,'ToolBar','none');</command>
<command batch="623">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="623">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="623">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="623">'pixel','position',[15 170 150 20],...</command>
<command batch="623">'string','Adapter: height (mm)');</command>
<command batch="623">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="623">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="623">'pixel','position',[165 170 300 20],...</command>
<command batch="623">'string','width (mm)');</command>
<command batch="623">% AP (I.E., X) UI SLIDER</command>
<command batch="623">hSli = uicontrol('style','slider','units',...</command>
<command batch="623">'pixel','position',[15 50 300 20],...</command>
<command batch="623">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="623">'Callback',@mlSliderCallBack);</command>
<command batch="623">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="623">hSli = uicontrol('style','text','units',...</command>
<command batch="623">'pixel','position',[15 80 300 20],...</command>
<command batch="623">'string','A-P alignment');</command>
<command batch="623">% ML (I.E., Y) UI SLIDER</command>
<command batch="623">hSli = uicontrol('style','slider','units',...</command>
<command batch="623">'pixel','position',[15 110 300 20],...</command>
<command batch="623">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="623">'Callback',@apSliderCallBack);</command>
<command batch="623">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="623">hSli = uicontrol('style','text','units',...</command>
<command batch="623">'pixel','position',[15 140 300 20],...</command>
<command batch="623">'string','M-L alignment');</command>
<command batch="623">% PUSH BUTTON (OK)</command>
<command batch="623">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="623">'String','Ok',...</command>
<command batch="623">'position',[15 20 150 20],...</command>
<command batch="623">'Callback',@pushOKCallBack);</command>
<command batch="623">% PUSH BUTTON (CANCEL)</command>
<command batch="623">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="623">'String','Cancel',...</command>
<command batch="623">'position',[165 20 150 20],...</command>
<command batch="623" execution_time="514">'Callback',@pushCancelCallBack);</command>
<command batch="624">hSlider = figure;</command>
<command batch="624">axis off;</command>
<command batch="624">name = 'Cylindrical adapter alingment';</command>
<command batch="624">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="624">set(hSlider,'name',name);</command>
<command batch="624">set(hSlider,'NumberTitle','off');</command>
<command batch="624">set(hSlider,'MenuBar','none');</command>
<command batch="624">set(hSlider,'ToolBar','none');</command>
<command batch="624">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="624">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="624">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="624">'pixel','position',[15 170 150 20],...</command>
<command batch="624">'string','Adapter: height (mm)');</command>
<command batch="624">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="624">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="624">'pixel','position',[165 170 150 20],...</command>
<command batch="624">'string','width (mm)');</command>
<command batch="624">% AP (I.E., X) UI SLIDER</command>
<command batch="624">hSli = uicontrol('style','slider','units',...</command>
<command batch="624">'pixel','position',[15 50 300 20],...</command>
<command batch="624">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="624">'Callback',@mlSliderCallBack);</command>
<command batch="624">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="624">hSli = uicontrol('style','text','units',...</command>
<command batch="624">'pixel','position',[15 80 300 20],...</command>
<command batch="624">'string','A-P alignment');</command>
<command batch="624">% ML (I.E., Y) UI SLIDER</command>
<command batch="624">hSli = uicontrol('style','slider','units',...</command>
<command batch="624">'pixel','position',[15 110 300 20],...</command>
<command batch="624">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="624">'Callback',@apSliderCallBack);</command>
<command batch="624">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="624">hSli = uicontrol('style','text','units',...</command>
<command batch="624">'pixel','position',[15 140 300 20],...</command>
<command batch="624">'string','M-L alignment');</command>
<command batch="624">% PUSH BUTTON (OK)</command>
<command batch="624">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="624">'String','Ok',...</command>
<command batch="624">'position',[15 20 150 20],...</command>
<command batch="624">'Callback',@pushOKCallBack);</command>
<command batch="624">% PUSH BUTTON (CANCEL)</command>
<command batch="624">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="624">'String','Cancel',...</command>
<command batch="624">'position',[165 20 150 20],...</command>
<command batch="624" execution_time="533">'Callback',@pushCancelCallBack);</command>
<command batch="625">hSlider = figure;</command>
<command batch="625">axis off;</command>
<command batch="625">name = 'Cylindrical adapter alingment';</command>
<command batch="625">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="625">set(hSlider,'name',name);</command>
<command batch="625">set(hSlider,'NumberTitle','off');</command>
<command batch="625">set(hSlider,'MenuBar','none');</command>
<command batch="625">set(hSlider,'ToolBar','none');</command>
<command batch="625">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="625">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="625">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="625">'pixel','position',[15 170 100 20],...</command>
<command batch="625">'string','Adapter: height (mm)');</command>
<command batch="625">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="625">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="625">'pixel','position',[165 170 150 20],...</command>
<command batch="625">'string','width (mm)');</command>
<command batch="625">% AP (I.E., X) UI SLIDER</command>
<command batch="625">hSli = uicontrol('style','slider','units',...</command>
<command batch="625">'pixel','position',[15 50 300 20],...</command>
<command batch="625">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="625">'Callback',@mlSliderCallBack);</command>
<command batch="625">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="625">hSli = uicontrol('style','text','units',...</command>
<command batch="625">'pixel','position',[15 80 300 20],...</command>
<command batch="625">'string','A-P alignment');</command>
<command batch="625">% ML (I.E., Y) UI SLIDER</command>
<command batch="625">hSli = uicontrol('style','slider','units',...</command>
<command batch="625">'pixel','position',[15 110 300 20],...</command>
<command batch="625">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="625">'Callback',@apSliderCallBack);</command>
<command batch="625">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="625">hSli = uicontrol('style','text','units',...</command>
<command batch="625">'pixel','position',[15 140 300 20],...</command>
<command batch="625">'string','M-L alignment');</command>
<command batch="625">% PUSH BUTTON (OK)</command>
<command batch="625">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="625">'String','Ok',...</command>
<command batch="625">'position',[15 20 150 20],...</command>
<command batch="625">'Callback',@pushOKCallBack);</command>
<command batch="625">% PUSH BUTTON (CANCEL)</command>
<command batch="625">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="625">'String','Cancel',...</command>
<command batch="625">'position',[165 20 150 20],...</command>
<command batch="625" execution_time="578">'Callback',@pushCancelCallBack);</command>
<command batch="626">hSlider = figure;</command>
<command batch="626">axis off;</command>
<command batch="626">name = 'Cylindrical adapter alingment';</command>
<command batch="626">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="626">set(hSlider,'name',name);</command>
<command batch="626">set(hSlider,'NumberTitle','off');</command>
<command batch="626">set(hSlider,'MenuBar','none');</command>
<command batch="626">set(hSlider,'ToolBar','none');</command>
<command batch="626">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="626">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="626">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="626">'pixel','position',[15 170 110 20],...</command>
<command batch="626">'string','Adapter (mm): height');</command>
<command batch="626">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="626">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="626">'pixel','position',[165 170 150 20],...</command>
<command batch="626">'string','width');</command>
<command batch="626">% AP (I.E., X) UI SLIDER</command>
<command batch="626">hSli = uicontrol('style','slider','units',...</command>
<command batch="626">'pixel','position',[15 50 300 20],...</command>
<command batch="626">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="626">'Callback',@mlSliderCallBack);</command>
<command batch="626">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="626">hSli = uicontrol('style','text','units',...</command>
<command batch="626">'pixel','position',[15 80 300 20],...</command>
<command batch="626">'string','A-P alignment');</command>
<command batch="626">% ML (I.E., Y) UI SLIDER</command>
<command batch="626">hSli = uicontrol('style','slider','units',...</command>
<command batch="626">'pixel','position',[15 110 300 20],...</command>
<command batch="626">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="626">'Callback',@apSliderCallBack);</command>
<command batch="626">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="626">hSli = uicontrol('style','text','units',...</command>
<command batch="626">'pixel','position',[15 140 300 20],...</command>
<command batch="626">'string','M-L alignment');</command>
<command batch="626">% PUSH BUTTON (OK)</command>
<command batch="626">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="626">'String','Ok',...</command>
<command batch="626">'position',[15 20 150 20],...</command>
<command batch="626">'Callback',@pushOKCallBack);</command>
<command batch="626">% PUSH BUTTON (CANCEL)</command>
<command batch="626">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="626">'String','Cancel',...</command>
<command batch="626">'position',[165 20 150 20],...</command>
<command batch="626" execution_time="515">'Callback',@pushCancelCallBack);</command>
<command batch="627" error="true">hSlider = figure;</command>
<command batch="627" error="true">axis off;</command>
<command batch="627" error="true">name = 'Cylindrical adapter alingment';</command>
<command batch="627" error="true">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="627" error="true">set(hSlider,'name',name);</command>
<command batch="627" error="true">set(hSlider,'NumberTitle','off');</command>
<command batch="627" error="true">set(hSlider,'MenuBar','none');</command>
<command batch="627" error="true">set(hSlider,'ToolBar','none');</command>
<command batch="627" error="true">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="627" error="true">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="627" error="true">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="627" error="true">'pixel','position',[15 170 110 20],...</command>
<command batch="627" error="true">'string','Adapter (mm): height');</command>
<command batch="627" error="true">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="627" error="true">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="627" error="true">'pixel','position',[15 200 110 20],...</command>
<command batch="627" error="true">'value','0');</command>
<command batch="627" error="true">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="627" error="true">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="627" error="true">'pixel','position',[165 170 110 20],...</command>
<command batch="627" error="true">'string','width');</command>
<command batch="627" error="true">% AP (I.E., X) UI SLIDER</command>
<command batch="627" error="true">hSli = uicontrol('style','slider','units',...</command>
<command batch="627" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="627" error="true">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="627" error="true">'Callback',@mlSliderCallBack);</command>
<command batch="627" error="true">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="627" error="true">hSli = uicontrol('style','text','units',...</command>
<command batch="627" error="true">'pixel','position',[15 80 300 20],...</command>
<command batch="627" error="true">'string','A-P alignment');</command>
<command batch="627" error="true">% ML (I.E., Y) UI SLIDER</command>
<command batch="627" error="true">hSli = uicontrol('style','slider','units',...</command>
<command batch="627" error="true">'pixel','position',[15 110 300 20],...</command>
<command batch="627" error="true">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="627" error="true">'Callback',@apSliderCallBack);</command>
<command batch="627" error="true">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="627" error="true">hSli = uicontrol('style','text','units',...</command>
<command batch="627" error="true">'pixel','position',[15 140 300 20],...</command>
<command batch="627" error="true">'string','M-L alignment');</command>
<command batch="627" error="true">% PUSH BUTTON (OK)</command>
<command batch="627" error="true">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="627" error="true">'String','Ok',...</command>
<command batch="627" error="true">'position',[15 20 150 20],...</command>
<command batch="627" error="true">'Callback',@pushOKCallBack);</command>
<command batch="627" error="true">% PUSH BUTTON (CANCEL)</command>
<command batch="627" error="true">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="627" error="true">'String','Cancel',...</command>
<command batch="627" error="true">'position',[165 20 150 20],...</command>
<command batch="627" error="true" execution_time="718">'Callback',@pushCancelCallBack);</command>
<command batch="628">hSlider = figure;</command>
<command batch="628">axis off;</command>
<command batch="628">name = 'Cylindrical adapter alingment';</command>
<command batch="628">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="628">set(hSlider,'name',name);</command>
<command batch="628">set(hSlider,'NumberTitle','off');</command>
<command batch="628">set(hSlider,'MenuBar','none');</command>
<command batch="628">set(hSlider,'ToolBar','none');</command>
<command batch="628">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="628">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="628">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="628">'pixel','position',[15 170 110 20],...</command>
<command batch="628">'string','Adapter (mm): height');</command>
<command batch="628">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="628">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="628">'pixel','position',[15 200 110 20],...</command>
<command batch="628">'value',0);</command>
<command batch="628">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="628">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="628">'pixel','position',[165 170 110 20],...</command>
<command batch="628">'string','width');</command>
<command batch="628">% AP (I.E., X) UI SLIDER</command>
<command batch="628">hSli = uicontrol('style','slider','units',...</command>
<command batch="628">'pixel','position',[15 50 300 20],...</command>
<command batch="628">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="628">'Callback',@mlSliderCallBack);</command>
<command batch="628">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="628">hSli = uicontrol('style','text','units',...</command>
<command batch="628">'pixel','position',[15 80 300 20],...</command>
<command batch="628">'string','A-P alignment');</command>
<command batch="628">% ML (I.E., Y) UI SLIDER</command>
<command batch="628">hSli = uicontrol('style','slider','units',...</command>
<command batch="628">'pixel','position',[15 110 300 20],...</command>
<command batch="628">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="628">'Callback',@apSliderCallBack);</command>
<command batch="628">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="628">hSli = uicontrol('style','text','units',...</command>
<command batch="628">'pixel','position',[15 140 300 20],...</command>
<command batch="628">'string','M-L alignment');</command>
<command batch="628">% PUSH BUTTON (OK)</command>
<command batch="628">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="628">'String','Ok',...</command>
<command batch="628">'position',[15 20 150 20],...</command>
<command batch="628">'Callback',@pushOKCallBack);</command>
<command batch="628">% PUSH BUTTON (CANCEL)</command>
<command batch="628">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="628">'String','Cancel',...</command>
<command batch="628">'position',[165 20 150 20],...</command>
<command batch="628" execution_time="624">'Callback',@pushCancelCallBack);</command>
<command batch="629">hSlider = figure;</command>
<command batch="629">axis off;</command>
<command batch="629">name = 'Cylindrical adapter alingment';</command>
<command batch="629">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="629">set(hSlider,'name',name);</command>
<command batch="629">set(hSlider,'NumberTitle','off');</command>
<command batch="629">set(hSlider,'MenuBar','none');</command>
<command batch="629">set(hSlider,'ToolBar','none');</command>
<command batch="629">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="629">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="629">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="629">'pixel','position',[15 170 110 20],...</command>
<command batch="629">'string','Adapter (mm): height');</command>
<command batch="629">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="629">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="629">'pixel','position',[35 170 110 20],...</command>
<command batch="629">'value',0);</command>
<command batch="629">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="629">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="629">'pixel','position',[165 170 110 20],...</command>
<command batch="629">'string','width');</command>
<command batch="629">% AP (I.E., X) UI SLIDER</command>
<command batch="629">hSli = uicontrol('style','slider','units',...</command>
<command batch="629">'pixel','position',[15 50 300 20],...</command>
<command batch="629">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="629">'Callback',@mlSliderCallBack);</command>
<command batch="629">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="629">hSli = uicontrol('style','text','units',...</command>
<command batch="629">'pixel','position',[15 80 300 20],...</command>
<command batch="629">'string','A-P alignment');</command>
<command batch="629">% ML (I.E., Y) UI SLIDER</command>
<command batch="629">hSli = uicontrol('style','slider','units',...</command>
<command batch="629">'pixel','position',[15 110 300 20],...</command>
<command batch="629">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="629">'Callback',@apSliderCallBack);</command>
<command batch="629">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="629">hSli = uicontrol('style','text','units',...</command>
<command batch="629">'pixel','position',[15 140 300 20],...</command>
<command batch="629">'string','M-L alignment');</command>
<command batch="629">% PUSH BUTTON (OK)</command>
<command batch="629">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="629">'String','Ok',...</command>
<command batch="629">'position',[15 20 150 20],...</command>
<command batch="629">'Callback',@pushOKCallBack);</command>
<command batch="629">% PUSH BUTTON (CANCEL)</command>
<command batch="629">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="629">'String','Cancel',...</command>
<command batch="629">'position',[165 20 150 20],...</command>
<command batch="629" execution_time="577">'Callback',@pushCancelCallBack);</command>
<command batch="630">hSlider = figure;</command>
<command batch="630">axis off;</command>
<command batch="630">name = 'Cylindrical adapter alingment';</command>
<command batch="630">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="630">set(hSlider,'name',name);</command>
<command batch="630">set(hSlider,'NumberTitle','off');</command>
<command batch="630">set(hSlider,'MenuBar','none');</command>
<command batch="630">set(hSlider,'ToolBar','none');</command>
<command batch="630">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="630">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="630">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="630">'pixel','position',[15 170 110 20],...</command>
<command batch="630">'string','Adapter (mm): height');</command>
<command batch="630">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="630">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="630">'pixel','position',[70 170 10 20],...</command>
<command batch="630">'value',0);</command>
<command batch="630">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="630">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="630">'pixel','position',[165 170 110 20],...</command>
<command batch="630">'string','width');</command>
<command batch="630">% AP (I.E., X) UI SLIDER</command>
<command batch="630">hSli = uicontrol('style','slider','units',...</command>
<command batch="630">'pixel','position',[15 50 300 20],...</command>
<command batch="630">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="630">'Callback',@mlSliderCallBack);</command>
<command batch="630">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="630">hSli = uicontrol('style','text','units',...</command>
<command batch="630">'pixel','position',[15 80 300 20],...</command>
<command batch="630">'string','A-P alignment');</command>
<command batch="630">% ML (I.E., Y) UI SLIDER</command>
<command batch="630">hSli = uicontrol('style','slider','units',...</command>
<command batch="630">'pixel','position',[15 110 300 20],...</command>
<command batch="630">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="630">'Callback',@apSliderCallBack);</command>
<command batch="630">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="630">hSli = uicontrol('style','text','units',...</command>
<command batch="630">'pixel','position',[15 140 300 20],...</command>
<command batch="630">'string','M-L alignment');</command>
<command batch="630">% PUSH BUTTON (OK)</command>
<command batch="630">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="630">'String','Ok',...</command>
<command batch="630">'position',[15 20 150 20],...</command>
<command batch="630">'Callback',@pushOKCallBack);</command>
<command batch="630">% PUSH BUTTON (CANCEL)</command>
<command batch="630">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="630">'String','Cancel',...</command>
<command batch="630">'position',[165 20 150 20],...</command>
<command batch="630" execution_time="594">'Callback',@pushCancelCallBack);</command>
<command batch="631">hSlider = figure;</command>
<command batch="631">axis off;</command>
<command batch="631">name = 'Cylindrical adapter alingment';</command>
<command batch="631">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="631">set(hSlider,'name',name);</command>
<command batch="631">set(hSlider,'NumberTitle','off');</command>
<command batch="631">set(hSlider,'MenuBar','none');</command>
<command batch="631">set(hSlider,'ToolBar','none');</command>
<command batch="631">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="631">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="631">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="631">'pixel','position',[15 170 110 20],...</command>
<command batch="631">'string','Adapter (mm): height');</command>
<command batch="631">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="631">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="631">'pixel','position',[200 170 20 20],...</command>
<command batch="631">'value',0);</command>
<command batch="631">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="631">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="631">'pixel','position',[165 170 110 20],...</command>
<command batch="631">'string','width');</command>
<command batch="631">% AP (I.E., X) UI SLIDER</command>
<command batch="631">hSli = uicontrol('style','slider','units',...</command>
<command batch="631">'pixel','position',[15 50 300 20],...</command>
<command batch="631">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="631">'Callback',@mlSliderCallBack);</command>
<command batch="631">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="631">hSli = uicontrol('style','text','units',...</command>
<command batch="631">'pixel','position',[15 80 300 20],...</command>
<command batch="631">'string','A-P alignment');</command>
<command batch="631">% ML (I.E., Y) UI SLIDER</command>
<command batch="631">hSli = uicontrol('style','slider','units',...</command>
<command batch="631">'pixel','position',[15 110 300 20],...</command>
<command batch="631">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="631">'Callback',@apSliderCallBack);</command>
<command batch="631">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="631">hSli = uicontrol('style','text','units',...</command>
<command batch="631">'pixel','position',[15 140 300 20],...</command>
<command batch="631">'string','M-L alignment');</command>
<command batch="631">% PUSH BUTTON (OK)</command>
<command batch="631">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="631">'String','Ok',...</command>
<command batch="631">'position',[15 20 150 20],...</command>
<command batch="631">'Callback',@pushOKCallBack);</command>
<command batch="631">% PUSH BUTTON (CANCEL)</command>
<command batch="631">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="631">'String','Cancel',...</command>
<command batch="631">'position',[165 20 150 20],...</command>
<command batch="631" execution_time="593">'Callback',@pushCancelCallBack);</command>
<command batch="632">hSlider = figure;</command>
<command batch="632">axis off;</command>
<command batch="632">name = 'Cylindrical adapter alingment';</command>
<command batch="632">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="632">set(hSlider,'name',name);</command>
<command batch="632">set(hSlider,'NumberTitle','off');</command>
<command batch="632">set(hSlider,'MenuBar','none');</command>
<command batch="632">set(hSlider,'ToolBar','none');</command>
<command batch="632">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="632">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="632">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="632">'pixel','position',[15 170 110 20],...</command>
<command batch="632">'string','Adapter (mm): height');</command>
<command batch="632">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="632">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="632">'pixel','position',[150 170 20 20],...</command>
<command batch="632">'value',0);</command>
<command batch="632">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="632">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="632">'pixel','position',[165 170 110 20],...</command>
<command batch="632">'string','width');</command>
<command batch="632">% AP (I.E., X) UI SLIDER</command>
<command batch="632">hSli = uicontrol('style','slider','units',...</command>
<command batch="632">'pixel','position',[15 50 300 20],...</command>
<command batch="632">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="632">'Callback',@mlSliderCallBack);</command>
<command batch="632">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="632">hSli = uicontrol('style','text','units',...</command>
<command batch="632">'pixel','position',[15 80 300 20],...</command>
<command batch="632">'string','A-P alignment');</command>
<command batch="632">% ML (I.E., Y) UI SLIDER</command>
<command batch="632">hSli = uicontrol('style','slider','units',...</command>
<command batch="632">'pixel','position',[15 110 300 20],...</command>
<command batch="632">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="632">'Callback',@apSliderCallBack);</command>
<command batch="632">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="632">hSli = uicontrol('style','text','units',...</command>
<command batch="632">'pixel','position',[15 140 300 20],...</command>
<command batch="632">'string','M-L alignment');</command>
<command batch="632">% PUSH BUTTON (OK)</command>
<command batch="632">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="632">'String','Ok',...</command>
<command batch="632">'position',[15 20 150 20],...</command>
<command batch="632">'Callback',@pushOKCallBack);</command>
<command batch="632">% PUSH BUTTON (CANCEL)</command>
<command batch="632">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="632">'String','Cancel',...</command>
<command batch="632">'position',[165 20 150 20],...</command>
<command batch="632" execution_time="578">'Callback',@pushCancelCallBack);</command>
<command batch="633">hSlider = figure;</command>
<command batch="633">axis off;</command>
<command batch="633">name = 'Cylindrical adapter alingment';</command>
<command batch="633">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="633">set(hSlider,'name',name);</command>
<command batch="633">set(hSlider,'NumberTitle','off');</command>
<command batch="633">set(hSlider,'MenuBar','none');</command>
<command batch="633">set(hSlider,'ToolBar','none');</command>
<command batch="633">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="633">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="633">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="633">'pixel','position',[15 170 110 20],...</command>
<command batch="633">'string','Adapter (mm): height');</command>
<command batch="633">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="633">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="633">'pixel','position',[140 170 20 20],...</command>
<command batch="633">'value',0);</command>
<command batch="633">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="633">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="633">'pixel','position',[165 170 110 20],...</command>
<command batch="633">'string','width');</command>
<command batch="633">% AP (I.E., X) UI SLIDER</command>
<command batch="633">hSli = uicontrol('style','slider','units',...</command>
<command batch="633">'pixel','position',[15 50 300 20],...</command>
<command batch="633">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="633">'Callback',@mlSliderCallBack);</command>
<command batch="633">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="633">hSli = uicontrol('style','text','units',...</command>
<command batch="633">'pixel','position',[15 80 300 20],...</command>
<command batch="633">'string','A-P alignment');</command>
<command batch="633">% ML (I.E., Y) UI SLIDER</command>
<command batch="633">hSli = uicontrol('style','slider','units',...</command>
<command batch="633">'pixel','position',[15 110 300 20],...</command>
<command batch="633">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="633">'Callback',@apSliderCallBack);</command>
<command batch="633">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="633">hSli = uicontrol('style','text','units',...</command>
<command batch="633">'pixel','position',[15 140 300 20],...</command>
<command batch="633">'string','M-L alignment');</command>
<command batch="633">% PUSH BUTTON (OK)</command>
<command batch="633">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="633">'String','Ok',...</command>
<command batch="633">'position',[15 20 150 20],...</command>
<command batch="633">'Callback',@pushOKCallBack);</command>
<command batch="633">% PUSH BUTTON (CANCEL)</command>
<command batch="633">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="633">'String','Cancel',...</command>
<command batch="633">'position',[165 20 150 20],...</command>
<command batch="633" execution_time="593">'Callback',@pushCancelCallBack);</command>
<command batch="634">hSlider = figure;</command>
<command batch="634">axis off;</command>
<command batch="634">name = 'Cylindrical adapter alingment';</command>
<command batch="634">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="634">set(hSlider,'name',name);</command>
<command batch="634">set(hSlider,'NumberTitle','off');</command>
<command batch="634">set(hSlider,'MenuBar','none');</command>
<command batch="634">set(hSlider,'ToolBar','none');</command>
<command batch="634">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="634">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="634">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="634">'pixel','position',[15 170 110 20],...</command>
<command batch="634">'string','Adapter (mm): height');</command>
<command batch="634">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="634">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="634">'pixel','position',[130 170 20 20],...</command>
<command batch="634">'value',0);</command>
<command batch="634">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="634">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="634">'pixel','position',[165 170 110 20],...</command>
<command batch="634">'string','width');</command>
<command batch="634">% AP (I.E., X) UI SLIDER</command>
<command batch="634">hSli = uicontrol('style','slider','units',...</command>
<command batch="634">'pixel','position',[15 50 300 20],...</command>
<command batch="634">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="634">'Callback',@mlSliderCallBack);</command>
<command batch="634">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="634">hSli = uicontrol('style','text','units',...</command>
<command batch="634">'pixel','position',[15 80 300 20],...</command>
<command batch="634">'string','A-P alignment');</command>
<command batch="634">% ML (I.E., Y) UI SLIDER</command>
<command batch="634">hSli = uicontrol('style','slider','units',...</command>
<command batch="634">'pixel','position',[15 110 300 20],...</command>
<command batch="634">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="634">'Callback',@apSliderCallBack);</command>
<command batch="634">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="634">hSli = uicontrol('style','text','units',...</command>
<command batch="634">'pixel','position',[15 140 300 20],...</command>
<command batch="634">'string','M-L alignment');</command>
<command batch="634">% PUSH BUTTON (OK)</command>
<command batch="634">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="634">'String','Ok',...</command>
<command batch="634">'position',[15 20 150 20],...</command>
<command batch="634">'Callback',@pushOKCallBack);</command>
<command batch="634">% PUSH BUTTON (CANCEL)</command>
<command batch="634">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="634">'String','Cancel',...</command>
<command batch="634">'position',[165 20 150 20],...</command>
<command batch="634" execution_time="562">'Callback',@pushCancelCallBack);</command>
<command batch="635">hSlider = figure;</command>
<command batch="635">axis off;</command>
<command batch="635">name = 'Cylindrical adapter alingment';</command>
<command batch="635">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="635">set(hSlider,'name',name);</command>
<command batch="635">set(hSlider,'NumberTitle','off');</command>
<command batch="635">set(hSlider,'MenuBar','none');</command>
<command batch="635">set(hSlider,'ToolBar','none');</command>
<command batch="635">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="635">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="635">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="635">'pixel','position',[15 170 110 20],...</command>
<command batch="635">'string','Adapter (mm): height');</command>
<command batch="635">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="635">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="635">'pixel','position',[130 170 20 20],...</command>
<command batch="635">'value',0);</command>
<command batch="635">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="635">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="635">'pixel','position',[165 170 50 20],...</command>
<command batch="635">'string','width');</command>
<command batch="635">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="635">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="635">'pixel','position',[130 170 20 20],...</command>
<command batch="635">'value',0);</command>
<command batch="635">% AP (I.E., X) UI SLIDER</command>
<command batch="635">hSli = uicontrol('style','slider','units',...</command>
<command batch="635">'pixel','position',[15 50 300 20],...</command>
<command batch="635">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="635">'Callback',@mlSliderCallBack);</command>
<command batch="635">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="635">hSli = uicontrol('style','text','units',...</command>
<command batch="635">'pixel','position',[15 80 300 20],...</command>
<command batch="635">'string','A-P alignment');</command>
<command batch="635">% ML (I.E., Y) UI SLIDER</command>
<command batch="635">hSli = uicontrol('style','slider','units',...</command>
<command batch="635">'pixel','position',[15 110 300 20],...</command>
<command batch="635">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="635">'Callback',@apSliderCallBack);</command>
<command batch="635">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="635">hSli = uicontrol('style','text','units',...</command>
<command batch="635">'pixel','position',[15 140 300 20],...</command>
<command batch="635">'string','M-L alignment');</command>
<command batch="635">% PUSH BUTTON (OK)</command>
<command batch="635">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="635">'String','Ok',...</command>
<command batch="635">'position',[15 20 150 20],...</command>
<command batch="635">'Callback',@pushOKCallBack);</command>
<command batch="635">% PUSH BUTTON (CANCEL)</command>
<command batch="635">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="635">'String','Cancel',...</command>
<command batch="635">'position',[165 20 150 20],...</command>
<command batch="635" execution_time="604">'Callback',@pushCancelCallBack);</command>
<command batch="636">hSlider = figure;</command>
<command batch="636">axis off;</command>
<command batch="636">name = 'Cylindrical adapter alingment';</command>
<command batch="636">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="636">set(hSlider,'name',name);</command>
<command batch="636">set(hSlider,'NumberTitle','off');</command>
<command batch="636">set(hSlider,'MenuBar','none');</command>
<command batch="636">set(hSlider,'ToolBar','none');</command>
<command batch="636">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="636">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="636">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="636">'pixel','position',[15 170 110 20],...</command>
<command batch="636">'string','Adapter (mm): height');</command>
<command batch="636">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="636">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="636">'pixel','position',[130 170 20 20],...</command>
<command batch="636">'value',0);</command>
<command batch="636">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="636">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="636">'pixel','position',[165 170 40 20],...</command>
<command batch="636">'string','width');</command>
<command batch="636">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="636">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="636">'pixel','position',[130 170 20 20],...</command>
<command batch="636">'value',0);</command>
<command batch="636">% AP (I.E., X) UI SLIDER</command>
<command batch="636">hSli = uicontrol('style','slider','units',...</command>
<command batch="636">'pixel','position',[15 50 300 20],...</command>
<command batch="636">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="636">'Callback',@mlSliderCallBack);</command>
<command batch="636">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="636">hSli = uicontrol('style','text','units',...</command>
<command batch="636">'pixel','position',[15 80 300 20],...</command>
<command batch="636">'string','A-P alignment');</command>
<command batch="636">% ML (I.E., Y) UI SLIDER</command>
<command batch="636">hSli = uicontrol('style','slider','units',...</command>
<command batch="636">'pixel','position',[15 110 300 20],...</command>
<command batch="636">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="636">'Callback',@apSliderCallBack);</command>
<command batch="636">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="636">hSli = uicontrol('style','text','units',...</command>
<command batch="636">'pixel','position',[15 140 300 20],...</command>
<command batch="636">'string','M-L alignment');</command>
<command batch="636">% PUSH BUTTON (OK)</command>
<command batch="636">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="636">'String','Ok',...</command>
<command batch="636">'position',[15 20 150 20],...</command>
<command batch="636">'Callback',@pushOKCallBack);</command>
<command batch="636">% PUSH BUTTON (CANCEL)</command>
<command batch="636">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="636">'String','Cancel',...</command>
<command batch="636">'position',[165 20 150 20],...</command>
<command batch="636" execution_time="610">'Callback',@pushCancelCallBack);</command>
<command batch="637">hSlider = figure;</command>
<command batch="637">axis off;</command>
<command batch="637">name = 'Cylindrical adapter alingment';</command>
<command batch="637">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="637">set(hSlider,'name',name);</command>
<command batch="637">set(hSlider,'NumberTitle','off');</command>
<command batch="637">set(hSlider,'MenuBar','none');</command>
<command batch="637">set(hSlider,'ToolBar','none');</command>
<command batch="637">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="637">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="637">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="637">'pixel','position',[15 170 110 20],...</command>
<command batch="637">'string','Adapter (mm): height');</command>
<command batch="637">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="637">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="637">'pixel','position',[130 170 20 20],...</command>
<command batch="637">'value',0);</command>
<command batch="637">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="637">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="637">'pixel','position',[150 170 40 20],...</command>
<command batch="637">'string','width');</command>
<command batch="637">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="637">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="637">'pixel','position',[130 170 20 20],...</command>
<command batch="637">'value',0);</command>
<command batch="637">% AP (I.E., X) UI SLIDER</command>
<command batch="637">hSli = uicontrol('style','slider','units',...</command>
<command batch="637">'pixel','position',[15 50 300 20],...</command>
<command batch="637">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="637">'Callback',@mlSliderCallBack);</command>
<command batch="637">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="637">hSli = uicontrol('style','text','units',...</command>
<command batch="637">'pixel','position',[15 80 300 20],...</command>
<command batch="637">'string','A-P alignment');</command>
<command batch="637">% ML (I.E., Y) UI SLIDER</command>
<command batch="637">hSli = uicontrol('style','slider','units',...</command>
<command batch="637">'pixel','position',[15 110 300 20],...</command>
<command batch="637">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="637">'Callback',@apSliderCallBack);</command>
<command batch="637">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="637">hSli = uicontrol('style','text','units',...</command>
<command batch="637">'pixel','position',[15 140 300 20],...</command>
<command batch="637">'string','M-L alignment');</command>
<command batch="637">% PUSH BUTTON (OK)</command>
<command batch="637">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="637">'String','Ok',...</command>
<command batch="637">'position',[15 20 150 20],...</command>
<command batch="637">'Callback',@pushOKCallBack);</command>
<command batch="637">% PUSH BUTTON (CANCEL)</command>
<command batch="637">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="637">'String','Cancel',...</command>
<command batch="637">'position',[165 20 150 20],...</command>
<command batch="637" execution_time="609">'Callback',@pushCancelCallBack);</command>
<command batch="638">hSlider = figure;</command>
<command batch="638">axis off;</command>
<command batch="638">name = 'Cylindrical adapter alingment';</command>
<command batch="638">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="638">set(hSlider,'name',name);</command>
<command batch="638">set(hSlider,'NumberTitle','off');</command>
<command batch="638">set(hSlider,'MenuBar','none');</command>
<command batch="638">set(hSlider,'ToolBar','none');</command>
<command batch="638">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="638">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="638">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="638">'pixel','position',[15 170 110 20],...</command>
<command batch="638">'string','Adapter (mm): height');</command>
<command batch="638">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="638">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="638">'pixel','position',[130 170 20 20],...</command>
<command batch="638">'value',0);</command>
<command batch="638">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="638">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="638">'pixel','position',[160 170 40 20],...</command>
<command batch="638">'string','width');</command>
<command batch="638">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="638">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="638">'pixel','position',[130 170 20 20],...</command>
<command batch="638">'value',0);</command>
<command batch="638">% AP (I.E., X) UI SLIDER</command>
<command batch="638">hSli = uicontrol('style','slider','units',...</command>
<command batch="638">'pixel','position',[15 50 300 20],...</command>
<command batch="638">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="638">'Callback',@mlSliderCallBack);</command>
<command batch="638">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="638">hSli = uicontrol('style','text','units',...</command>
<command batch="638">'pixel','position',[15 80 300 20],...</command>
<command batch="638">'string','A-P alignment');</command>
<command batch="638">% ML (I.E., Y) UI SLIDER</command>
<command batch="638">hSli = uicontrol('style','slider','units',...</command>
<command batch="638">'pixel','position',[15 110 300 20],...</command>
<command batch="638">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="638">'Callback',@apSliderCallBack);</command>
<command batch="638">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="638">hSli = uicontrol('style','text','units',...</command>
<command batch="638">'pixel','position',[15 140 300 20],...</command>
<command batch="638">'string','M-L alignment');</command>
<command batch="638">% PUSH BUTTON (OK)</command>
<command batch="638">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="638">'String','Ok',...</command>
<command batch="638">'position',[15 20 150 20],...</command>
<command batch="638">'Callback',@pushOKCallBack);</command>
<command batch="638">% PUSH BUTTON (CANCEL)</command>
<command batch="638">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="638">'String','Cancel',...</command>
<command batch="638">'position',[165 20 150 20],...</command>
<command batch="638" execution_time="640">'Callback',@pushCancelCallBack);</command>
<command batch="639">hSlider = figure;</command>
<command batch="639">axis off;</command>
<command batch="639">name = 'Cylindrical adapter alingment';</command>
<command batch="639">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="639">set(hSlider,'name',name);</command>
<command batch="639">set(hSlider,'NumberTitle','off');</command>
<command batch="639">set(hSlider,'MenuBar','none');</command>
<command batch="639">set(hSlider,'ToolBar','none');</command>
<command batch="639">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="639">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="639">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="639">'pixel','position',[15 170 110 20],...</command>
<command batch="639">'string','Adapter (mm): height');</command>
<command batch="639">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="639">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="639">'pixel','position',[130 170 20 20],...</command>
<command batch="639">'value',0);</command>
<command batch="639">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="639">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="639">'pixel','position',[155 170 40 20],...</command>
<command batch="639">'string','width');</command>
<command batch="639">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="639">hCycAdapHeight = uicontrol('style','edit','units',...</command>
<command batch="639">'pixel','position',[130 170 20 20],...</command>
<command batch="639">'value',0);</command>
<command batch="639">% AP (I.E., X) UI SLIDER</command>
<command batch="639">hSli = uicontrol('style','slider','units',...</command>
<command batch="639">'pixel','position',[15 50 300 20],...</command>
<command batch="639">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="639">'Callback',@mlSliderCallBack);</command>
<command batch="639">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="639">hSli = uicontrol('style','text','units',...</command>
<command batch="639">'pixel','position',[15 80 300 20],...</command>
<command batch="639">'string','A-P alignment');</command>
<command batch="639">% ML (I.E., Y) UI SLIDER</command>
<command batch="639">hSli = uicontrol('style','slider','units',...</command>
<command batch="639">'pixel','position',[15 110 300 20],...</command>
<command batch="639">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="639">'Callback',@apSliderCallBack);</command>
<command batch="639">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="639">hSli = uicontrol('style','text','units',...</command>
<command batch="639">'pixel','position',[15 140 300 20],...</command>
<command batch="639">'string','M-L alignment');</command>
<command batch="639">% PUSH BUTTON (OK)</command>
<command batch="639">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="639">'String','Ok',...</command>
<command batch="639">'position',[15 20 150 20],...</command>
<command batch="639">'Callback',@pushOKCallBack);</command>
<command batch="639">% PUSH BUTTON (CANCEL)</command>
<command batch="639">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="639">'String','Cancel',...</command>
<command batch="639">'position',[165 20 150 20],...</command>
<command batch="639" execution_time="577">'Callback',@pushCancelCallBack);</command>
<command batch="640">hSlider = figure;</command>
<command batch="640">axis off;</command>
<command batch="640">name = 'Cylindrical adapter alingment';</command>
<command batch="640">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="640">set(hSlider,'name',name);</command>
<command batch="640">set(hSlider,'NumberTitle','off');</command>
<command batch="640">set(hSlider,'MenuBar','none');</command>
<command batch="640">set(hSlider,'ToolBar','none');</command>
<command batch="640">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="640">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="640">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="640">'pixel','position',[15 170 110 20],...</command>
<command batch="640">'string','Adapter (mm): height');</command>
<command batch="640">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="640">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="640">'pixel','position',[130 170 20 20],...</command>
<command batch="640">'value',0);</command>
<command batch="640">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="640">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="640">'pixel','position',[155 170 40 20],...</command>
<command batch="640">'string','width');</command>
<command batch="640">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="640">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="640">'pixel','position',[200 170 20 20],...</command>
<command batch="640">'value',0);</command>
<command batch="640">% AP (I.E., X) UI SLIDER</command>
<command batch="640">hSli = uicontrol('style','slider','units',...</command>
<command batch="640">'pixel','position',[15 50 300 20],...</command>
<command batch="640">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="640">'Callback',@mlSliderCallBack);</command>
<command batch="640">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="640">hSli = uicontrol('style','text','units',...</command>
<command batch="640">'pixel','position',[15 80 300 20],...</command>
<command batch="640">'string','A-P alignment');</command>
<command batch="640">% ML (I.E., Y) UI SLIDER</command>
<command batch="640">hSli = uicontrol('style','slider','units',...</command>
<command batch="640">'pixel','position',[15 110 300 20],...</command>
<command batch="640">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="640">'Callback',@apSliderCallBack);</command>
<command batch="640">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="640">hSli = uicontrol('style','text','units',...</command>
<command batch="640">'pixel','position',[15 140 300 20],...</command>
<command batch="640">'string','M-L alignment');</command>
<command batch="640">% PUSH BUTTON (OK)</command>
<command batch="640">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="640">'String','Ok',...</command>
<command batch="640">'position',[15 20 150 20],...</command>
<command batch="640">'Callback',@pushOKCallBack);</command>
<command batch="640">% PUSH BUTTON (CANCEL)</command>
<command batch="640">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="640">'String','Cancel',...</command>
<command batch="640">'position',[165 20 150 20],...</command>
<command batch="640" execution_time="608">'Callback',@pushCancelCallBack);</command>
<command batch="641">hSlider = figure;</command>
<command batch="641">axis off;</command>
<command batch="641">name = 'Cylindrical adapter alingment';</command>
<command batch="641">set(hSlider,'Resize','off');</command>
<command batch="641">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="641">set(hSlider,'name',name);</command>
<command batch="641">set(hSlider,'NumberTitle','off');</command>
<command batch="641">set(hSlider,'MenuBar','none');</command>
<command batch="641">set(hSlider,'ToolBar','none');</command>
<command batch="641">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="641">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="641">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="641">'pixel','position',[15 170 110 20],...</command>
<command batch="641">'string','Adapter (mm): height');</command>
<command batch="641">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="641">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="641">'pixel','position',[130 170 20 20],...</command>
<command batch="641">'value',0);</command>
<command batch="641">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="641">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="641">'pixel','position',[155 170 40 20],...</command>
<command batch="641">'string','width');</command>
<command batch="641">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="641">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="641">'pixel','position',[200 170 20 20],...</command>
<command batch="641">'value',0);</command>
<command batch="641">% AP (I.E., X) UI SLIDER</command>
<command batch="641">hSli = uicontrol('style','slider','units',...</command>
<command batch="641">'pixel','position',[15 50 300 20],...</command>
<command batch="641">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="641">'Callback',@mlSliderCallBack);</command>
<command batch="641">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="641">hSli = uicontrol('style','text','units',...</command>
<command batch="641">'pixel','position',[15 80 300 20],...</command>
<command batch="641">'string','A-P alignment');</command>
<command batch="641">% ML (I.E., Y) UI SLIDER</command>
<command batch="641">hSli = uicontrol('style','slider','units',...</command>
<command batch="641">'pixel','position',[15 110 300 20],...</command>
<command batch="641">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="641">'Callback',@apSliderCallBack);</command>
<command batch="641">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="641">hSli = uicontrol('style','text','units',...</command>
<command batch="641">'pixel','position',[15 140 300 20],...</command>
<command batch="641">'string','M-L alignment');</command>
<command batch="641">% PUSH BUTTON (OK)</command>
<command batch="641">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="641">'String','Ok',...</command>
<command batch="641">'position',[15 20 150 20],...</command>
<command batch="641">'Callback',@pushOKCallBack);</command>
<command batch="641">% PUSH BUTTON (CANCEL)</command>
<command batch="641">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="641">'String','Cancel',...</command>
<command batch="641">'position',[165 20 150 20],...</command>
<command batch="641" execution_time="624">'Callback',@pushCancelCallBack);</command>
<command batch="642">hSlider = figure;</command>
<command batch="642">axis off;</command>
<command batch="642">name = 'Cylindrical adapter alingment';</command>
<command batch="642">set(hSlider,'Resize','off');</command>
<command batch="642">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="642">set(hSlider,'name',name);</command>
<command batch="642">set(hSlider,'NumberTitle','off');</command>
<command batch="642">set(hSlider,'MenuBar','none');</command>
<command batch="642">set(hSlider,'ToolBar','none');</command>
<command batch="642">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="642">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="642">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="642">'pixel','position',[15 170 110 20],...</command>
<command batch="642">'string','Adapter (mm): height');</command>
<command batch="642">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="642">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="642">'pixel','position',[130 170 20 20],...</command>
<command batch="642">'string','0');</command>
<command batch="642">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="642">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="642">'pixel','position',[155 170 40 20],...</command>
<command batch="642">'string','width');</command>
<command batch="642">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="642">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="642">'pixel','position',[200 170 20 20],...</command>
<command batch="642">'value',0);</command>
<command batch="642">% AP (I.E., X) UI SLIDER</command>
<command batch="642">hSli = uicontrol('style','slider','units',...</command>
<command batch="642">'pixel','position',[15 50 300 20],...</command>
<command batch="642">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="642">'Callback',@mlSliderCallBack);</command>
<command batch="642">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="642">hSli = uicontrol('style','text','units',...</command>
<command batch="642">'pixel','position',[15 80 300 20],...</command>
<command batch="642">'string','A-P alignment');</command>
<command batch="642">% ML (I.E., Y) UI SLIDER</command>
<command batch="642">hSli = uicontrol('style','slider','units',...</command>
<command batch="642">'pixel','position',[15 110 300 20],...</command>
<command batch="642">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="642">'Callback',@apSliderCallBack);</command>
<command batch="642">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="642">hSli = uicontrol('style','text','units',...</command>
<command batch="642">'pixel','position',[15 140 300 20],...</command>
<command batch="642">'string','M-L alignment');</command>
<command batch="642">% PUSH BUTTON (OK)</command>
<command batch="642">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="642">'String','Ok',...</command>
<command batch="642">'position',[15 20 150 20],...</command>
<command batch="642">'Callback',@pushOKCallBack);</command>
<command batch="642">% PUSH BUTTON (CANCEL)</command>
<command batch="642">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="642">'String','Cancel',...</command>
<command batch="642">'position',[165 20 150 20],...</command>
<command batch="642" execution_time="608">'Callback',@pushCancelCallBack);</command>
<command batch="643">hSlider = figure;</command>
<command batch="643">axis off;</command>
<command batch="643">name = 'Cylindrical adapter alingment';</command>
<command batch="643">set(hSlider,'Resize','off');</command>
<command batch="643">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="643">set(hSlider,'name',name);</command>
<command batch="643">set(hSlider,'NumberTitle','off');</command>
<command batch="643">set(hSlider,'MenuBar','none');</command>
<command batch="643">set(hSlider,'ToolBar','none');</command>
<command batch="643">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="643">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="643">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="643">'pixel','position',[15 170 110 20],...</command>
<command batch="643">'string','Adapter (mm): height');</command>
<command batch="643">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="643">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="643">'pixel','position',[130 170 20 20],...</command>
<command batch="643">'string','0');</command>
<command batch="643">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="643">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="643">'pixel','position',[155 170 40 20],...</command>
<command batch="643">'string','width');</command>
<command batch="643">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="643">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="643">'pixel','position',[200 170 20 20],...</command>
<command batch="643">'string','20');</command>
<command batch="643">% AP (I.E., X) UI SLIDER</command>
<command batch="643">hSli = uicontrol('style','slider','units',...</command>
<command batch="643">'pixel','position',[15 50 300 20],...</command>
<command batch="643">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="643">'Callback',@mlSliderCallBack);</command>
<command batch="643">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="643">hSli = uicontrol('style','text','units',...</command>
<command batch="643">'pixel','position',[15 80 300 20],...</command>
<command batch="643">'string','A-P alignment');</command>
<command batch="643">% ML (I.E., Y) UI SLIDER</command>
<command batch="643">hSli = uicontrol('style','slider','units',...</command>
<command batch="643">'pixel','position',[15 110 300 20],...</command>
<command batch="643">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="643">'Callback',@apSliderCallBack);</command>
<command batch="643">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="643">hSli = uicontrol('style','text','units',...</command>
<command batch="643">'pixel','position',[15 140 300 20],...</command>
<command batch="643">'string','M-L alignment');</command>
<command batch="643">% PUSH BUTTON (OK)</command>
<command batch="643">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="643">'String','Ok',...</command>
<command batch="643">'position',[15 20 150 20],...</command>
<command batch="643">'Callback',@pushOKCallBack);</command>
<command batch="643">% PUSH BUTTON (CANCEL)</command>
<command batch="643">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="643">'String','Cancel',...</command>
<command batch="643">'position',[165 20 150 20],...</command>
<command batch="643" execution_time="610">'Callback',@pushCancelCallBack);</command>
<command execution_time="31">54/2</command>
<command execution_time="78">handle</command>
<command execution_time="31">handle.Callback</command>
<command execution_time="32">whos ans</command>
<command execution_time="63">ans(1)</command>
<command error="true" execution_time="16">ans</command>
<command error="true" execution_time="16">handle.Callback(1)</command>
<command error="true" execution_time="31">handle.Callback</command>
<command execution_time="32" repeat="2">handle</command>
<command execution_time="47">handle.Callback(1)</command>
<command execution_time="31" repeat="2">handle</command>
<command error="true" execution_time="109">handdl.Callback</command>
<command execution_time="16">handle.Callback</command>
<command execution_time="15">whos ans</command>
<command execution_time="32">handle.Callback</command>
<command error="true" execution_time="47">handl.test = 1;</command>
<command error="true" execution_time="125">handle.test = 1;</command>
<command error="true" execution_time="31">test=guidata(handle)</command>
</session>
<session>
<command time_stamp="1513a0a9b09">%-- 11/24/2015 10:09 AM --%</command>
<command execution_time="93">event</command>
<command error="true" execution_time="63">event.test = 1;</command>
<command error="true" execution_time="16">test = guidata(event);</command>
<command execution_time="32">handle</command>
<command execution_time="15">handle.Callback</command>
<command execution_time="15">whos ans</command>
<command execution_time="31">handle</command>
<command execution_time="31">func2str(handle.Callback)</command>
<command execution_time="15">whos ans</command>
<command execution_time="17">ans</command>
<command execution_time="31">strcmp(ans,'addCylAdap/widthCallBack')</command>
<command execution_time="15">strcmp(handle.Callback,'addCylAdap/widthCallBack')</command>
<command execution_time="221">disp(model.guiCylAdapWidth)</command>
<command execution_time="31">model</command>
<command execution_time="31" repeat="2">x = ones(5,5);</command>
<command execution_time="31">x</command>
<command execution_time="31">x(1,:) = 5;</command>
<command execution_time="31">x</command>
<command execution_time="31">x = ones(5,5);</command>
<command execution_time="16">x(:,1) = 5;</command>
<command execution_time="16">x</command>
<command execution_time="16">y = ones(1,5).*5;</command>
<command execution_time="15">y</command>
<command execution_time="47">bsxfun(@le,x,y)</command>
<command execution_time="31">bsxfun(@eq,x,y)</command>
<command execution_time="16">new = ans;</command>
<command execution_time="31">new</command>
<command execution_time="15">bsxfun(@times,new,y)</command>
<command execution_time="31">del = ans - x</command>
<command execution_time="31">foo = bsxfun(@times,new,y)</command>
<command execution_time="31">del = x - foo</command>
<command execution_time="16">new</command>
<command execution_time="15">x(new)</command>
<command execution_time="30">y</command>
<command error="true" execution_time="31">del = x(new) - y</command>
<command execution_time="16">del = x(new) - y'</command>
<command execution_time="16">x</command>
<command execution_time="16">x(:,1) = 1;</command>
<command execution_time="31">x</command>
<command execution_time="16">x(2,2) = 5;</command>
<command execution_time="16">x</command>
<command execution_time="15">new  = bsxfun(@eq,x,y)</command>
<command execution_time="31">x(new)</command>
<command execution_time="15">bsxfun(@times,new,y)</command>
<command execution_time="31">del = x - ans</command>
<command execution_time="33" repeat="2">x</command>
<command execution_time="63">new = bsxfun(@rdivide,x,y)</command>
<command execution_time="16">y</command>
<command execution_time="16">x</command>
<command execution_time="15">newloc = bsxfun(@le,x,y)</command>
<command execution_time="15">newR = newloc .* new;</command>
<command execution_time="16">newR</command>
<command execution_time="16">newR = newloc ./ new;</command>
<command execution_time="31">newR</command>
<command execution_time="31">newR = newloc .* new;</command>
<command execution_time="16">newR</command>
<command execution_time="31">foo = x ./ newR</command>
<command execution_time="32">model</command>
<command execution_time="15">whos model.numSlicePoints</command>
<command execution_time="15">model</command>
<command execution_time="16">model.numSlicePoints</command>
<command execution_time="15">size(tmpAdapR)</command>
<command execution_time="32">tmpModelR = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command error="true" execution_time="717">tmpModelR = reshape(tmpModelR,numSlicePoints,numSlices);</command>
<command execution_time="15">model</command>
<command error="true" execution_time="46">tmpModelR = reshape(tmpModelR,model.numSlicePoints,model.numSlicesPoints/model.numSlicePoints);</command>
<command error="true" execution_time="31">tmpModelR = reshape(tmpModelR,model.numSlicePoints,model.numSlicePoints/model.numSlicePoints);</command>
<command execution_time="16">size(tmpModelR)</command>
<command execution_time="32">model.numSliceHeights</command>
<command execution_time="16">tmpModelR = reshape(tmpModelR,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command error="true" execution_time="63">scaleFactor = bsxfun(@rdivide,tmpModelR,tmpAdapR);</command>
<command execution_time="15">size(tmpModelR)</command>
<command execution_time="16">size(tmpAdapR)</command>
<command execution_time="15">tmpAdapR = sqrt(x.^2 + y.^2)';</command>
<command execution_time="31">size(tmpAdapR)</command>
<command execution_time="16">scaleFactor = bsxfun(@rdivide,tmpModelR,tmpAdapR);</command>
<command error="true" execution_time="31">oc = bsxfun(@le,tmpModelR,tmpAdapR);</command>
<command execution_time="16">loc = bsxfun(@le,tmpModelR,tmpAdapR);</command>
<command execution_time="15">scaleFactor = scaleFactor .* loc;</command>
<command execution_time="172">figure; imagesc(scaleFactor)</command>
<command error="true" execution_time="421">scaleFactor(scalFactor==0) = 1;</command>
<command execution_time="16">scaleFactor(scaleFactor==0) = 1;</command>
<command execution_time="78">figure; imagesc(scaleFactor)</command>
<command error="true" execution_time="718">scaleFactor = reshape(scaleFactor,numSlices*numSliceHeights,1);</command>
<command execution_time="31">scaleFactor = reshape(scaleFactor,model.numSliceHeights,1);</command>
<command execution_time="32">size(scaleFactor)</command>
<command execution_time="31">model.data(:,1:2) = bsxfun(@times,model.data(:,1:2),scaleFactor);</command>
<command batch="644">model.sceneData = model.data;</command>
<command batch="644">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="644" execution_time="171">drawnow;</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="78">figure; imagesc(scaleFactor)</command>
<command execution_time="32">model.data(:,1:2) = bsxfun(@rdivide,model.data(:,1:2),scaleFactor);</command>
<command execution_time="16">imagesc(model.data)</command>
<command execution_time="109">clear all; close all;</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="96">close all</command>
<command execution_time="33">clear all</command>
<command execution_time="17964" repeat="10">templateLiner</command>
<command execution_time="15">model.guiXCircle</command>
<command execution_time="31">model.guiYCircle</command>
<command execution_time="14596" repeat="2">templateLiner</command>
<command execution_time="31">handle</command>
<command execution_time="16">str2double(handle.String)</command>
<command batch="645">R = rotx(90);</command>
<command batch="645">for idx = 1:model.numSliceHeights</command>
<command batch="645">model.sceneData(idx,:) = model.data(idx,:) * R;</command>
<command batch="645">end</command>
<command batch="645">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="645" execution_time="328">drawnow;</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="16">size(model.data)</command>
<command execution_time="15">model.data(1:10,:)</command>
<command execution_time="31">model.guiYCircle</command>
<command execution_time="31">model.guiXCircle</command>
<command execution_time="16">handle.Value</command>
<command batch="646">switch(func2str(handle.Callback));</command>
<command batch="646">case('addCylAdap/heightCallBack')</command>
<command batch="646">model.guiCylAdapHeight = str2double(handle.String);</command>
<command batch="646">case('addCylAdap/widthCallBack')</command>
<command batch="646">model.guiCylAdapWidth = str2double(handle.String);</command>
<command batch="646">case('addCylAdap/mlSliderCallBack')</command>
<command batch="646">model.guiYCircle = handle.Value;</command>
<command batch="646">case('addCylAdap/apSliderCallBack')</command>
<command batch="646">model.guiXCircle = handle.Value;</command>
<command batch="646" execution_time="63">end</command>
<command execution_time="16">model.data = model.homeData;</command>
<command batch="647">%  COMPUTE ADAPTER CORDINATES</command>
<command batch="647">x = model.guiXCircle + (model.guiCylAdapWidth * cosd(model.theta));</command>
<command batch="647">y = model.guiYCircle + (model.guiCylAdapWidth * sind(model.theta));</command>
<command batch="647">tmpAdapR = sqrt(x.^2 + y.^2)';</command>
<command batch="647">% APPLY ADAPTER</command>
<command batch="647">tmpModelR = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command batch="647">tmpModelR = reshape(tmpModelR,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command batch="647">scaleFactor = bsxfun(@rdivide,tmpModelR,tmpAdapR);</command>
<command batch="647">loc = bsxfun(@le,tmpModelR,tmpAdapR);</command>
<command batch="647">scaleFactor = scaleFactor .* loc;</command>
<command batch="647">scaleFactor(scaleFactor==0) = 1;</command>
<command batch="647">scaleFactor = reshape(scaleFactor,model.numSliceHeights,1);</command>
<command batch="647">model.data(:,1:2) = bsxfun(@rdivide,model.data(:,1:2),scaleFactor);</command>
<command batch="647">% DRAW SCENE</command>
<command batch="647">R = rotx(90);</command>
<command batch="647">for idx = 1:model.numSliceHeights</command>
<command batch="647">model.sceneData(idx,:) = model.data(idx,:) * R;</command>
<command batch="647">end</command>
<command batch="647">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="647" execution_time="406">drawnow;</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="21749">templateLiner</command>
<command batch="648" repeat="2">% DRAW SCENE</command>
<command batch="648">R = rotx(90);</command>
<command batch="648">for idx = 1:model.numSliceHeights</command>
<command batch="648">model.sceneData(idx,:) = model.data(idx,:) * R;</command>
<command batch="648">end</command>
<command batch="648">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="648" execution_time="421">drawnow;</command>
<command execution_time="81">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="62">figure; plot(model.data(:,3),model.data(:,2))</command>
<command batch="649">% DRAW SCENE</command>
<command batch="649">R = rotx(90);</command>
<command batch="649">for idx = 1:model.numSliceHeights</command>
<command batch="649">model.sceneData(idx,:) = model.data(idx,:) * R;</command>
<command batch="649">end</command>
<command batch="649">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="649" execution_time="330">drawnow</command>
<command batch="650">R = rotx(90);</command>
<command batch="650">for idx = 1:model.numSliceHeights</command>
<command batch="650">model.sceneData(idx,:) = model.data(idx,:) * R;</command>
<command batch="650">end</command>
<command batch="650">set(model.handlePatch,'vertices',model.sceneData);</command>
<command batch="650" execution_time="312">drawnow;</command>
<command execution_time="32">model.axes1</command>
<command execution_time="63">camorbit(model.axes1,0,90)</command>
<command execution_time="16" repeat="2">camorbit(model.axes1,0,-90)</command>
<command execution_time="16">axis off</command>
<command execution_time="15">axis on</command>
<command execution_time="63">campos</command>
<command execution_time="31">campos([0 -1053.7 10])</command>
<command execution_time="16">campos([0 -1053.7 50])</command>
<command execution_time="15">campos([0 -1053.7 100])</command>
<command execution_time="16">campos([0 1053.7 100])</command>
<command execution_time="78">camlight('left')</command>
<command execution_time="15">camlight('right')</command>
<command execution_time="16">camlight('headlight')</command>
<command execution_time="15">camorbit(model.axes1,0,90)</command>
<command execution_time="16">camorbit(model.axes1,0,-90)</command>
<command batch="651" repeat="2">surf(peaks)</command>
<command batch="651">axis vis3d off</command>
<command batch="651">for x = -200:5:200</command>
<command batch="651">campos([x,5,10])</command>
<command batch="651">drawnow</command>
<command batch="651" execution_time="1160">end</command>
<command execution_time="16">campos</command>
<command execution_time="16">campos([200,5,10])</command>
<command execution_time="15">campos([-200,5,10])</command>
<command execution_time="15">campos([0,5,10])</command>
<command execution_time="15">campos([10,5,10])</command>
<command execution_time="15">campos([15,5,10])</command>
<command execution_time="15">campos([20,5,10])</command>
<command execution_time="16">campos([50,5,10])</command>
<command execution_time="16">campos([100,5,10])</command>
<command execution_time="16">campos([200,5,10])</command>
<command batch="652">surf(peaks)</command>
<command batch="652">axis vis3d off</command>
<command batch="652">for x = -200:5:200</command>
<command batch="652">campos([x,5,10])</command>
<command batch="652">drawnow</command>
<command batch="652" execution_time="749">end</command>
<command execution_time="16">size(peaks)</command>
<command execution_time="78">figure;</command>
<command batch="653">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="653">light('Position',[0 0 300],'Style','infinite')</command>
<command batch="653">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="653">% [0 0 0] - model black</command>
<command batch="653">% [0 106/255 255/255] - assembly color</command>
<command batch="653">set(model.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="653">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="653">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="653">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="653">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="653">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="653">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="653" execution_time="94">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="31">axis off</command>
<command execution_time="16">axis equal</command>
<command execution_time="31">camlight('headlight')</command>
<command execution_time="16">light</command>
<command execution_time="16">light('Position',[1 0 1])</command>
<command error="true" execution_time="32">light('FaceLighting','gouraud')</command>
<command execution_time="62">figure;</command>
<command batch="654">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="654">% light('Position',[0 0 300],'Style','infinite')</command>
<command batch="654">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="654">% [0 0 0] - model black</command>
<command batch="654">% [0 106/255 255/255] - assembly color</command>
<command batch="654">set(model.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="654">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="654">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="654">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="654">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="654">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="654">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="654" execution_time="78">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="16">axis off;</command>
<command execution_time="15">axis equal</command>
<command execution_time="15">light('Position',[0 0 1])</command>
<command execution_time="31">light('Position',[1 1 1])</command>
<command execution_time="15" repeat="2">light('Position',[1 0 0])</command>
<command execution_time="16">light('Position',[0 0 300])</command>
<command execution_time="16">light('Position',[0 0 1],'style','infinite')</command>
<command execution_time="16">light('Position',[0 0 1],'style','local')</command>
<command execution_time="15">camlight('headlight')</command>
<command execution_time="62">figure;</command>
<command batch="655">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="655">% light('Position',[0 0 300],'Style','infinite')</command>
<command batch="655">camlight('headlight');</command>
<command batch="655">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="655">% [0 0 0] - model black</command>
<command batch="655">% [0 106/255 255/255] - assembly color</command>
<command batch="655">set(model.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="655">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="655">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="655">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="655">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="655">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="655">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="655" execution_time="109">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="16">axis off</command>
<command execution_time="16">axis equal</command>
<command execution_time="63">h = figure;</command>
<command batch="656">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="656">% light('Position',[0 0 300],'Style','infinite')</command>
<command batch="656">camlight('headlight');</command>
<command batch="656">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="656">% [0 0 0] - model black</command>
<command batch="656">% [0 106/255 255/255] - assembly color</command>
<command batch="656">set(model.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="656">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="656">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="656">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="656">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="656">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="656">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="656" execution_time="109">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="16">h</command>
<command execution_time="63">h = figure;</command>
<command execution_time="31">haxes = gca;</command>
<command execution_time="15">haxes</command>
<command batch="657">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="657">% light('Position',[0 0 300],'Style','infinite')</command>
<command batch="657">camlight('headlight');</command>
<command batch="657">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="657">% [0 0 0] - model black</command>
<command batch="657">% [0 106/255 255/255] - assembly color</command>
<command batch="657">set(model.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="657">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="657">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="657">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="657">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="657">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="657">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="657" execution_time="109">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="16">haxes</command>
<command execution_time="15">h</command>
<command execution_time="16">light</command>
<command execution_time="16">haxes</command>
<command execution_time="31">model.handlePatch</command>
<command error="true" execution_time="110">set(model.handlePatch,'Backfacelighting','off');</command>
<command error="true" execution_time="16">set(model.handlePatch,'Backfacelighting','none');</command>
<command execution_time="15">set(model.handlePatch,'Backfacelighting','lit');</command>
<command error="true" execution_time="47">axes off</command>
<command execution_time="15">axis off</command>
<command execution_time="15">axis equal</command>
<command execution_time="15">model.handlePatch</command>
<command execution_time="15">light('Position',[1 1 0])</command>
<command execution_time="16">light('Position',[1 0 0])</command>
<command execution_time="15">light('Position',[1 0 1])</command>
<command execution_time="16">light('Position',[0 0 300])</command>
<command execution_time="78">rotate3d on</command>
<command execution_time="31" repeat="2">campos</command>
<command execution_time="62">figure;</command>
<command batch="658">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="658">% light('Position',[0 0 300],'Style','infinite')</command>
<command batch="658">camlight('headlight');</command>
<command batch="658">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="658">% [0 0 0] - model black</command>
<command batch="658">% [0 106/255 255/255] - assembly color</command>
<command batch="658">set(model.handlePatch,'FaceColor',[.2 .2 .2]);</command>
<command batch="658">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="658">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="658">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="658">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="658">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="658">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="658" execution_time="109">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="16">axis off</command>
<command execution_time="16">axis equal</command>
<command execution_time="16">set(model.handlePatch,'Backfacelighting','lit');</command>
<command execution_time="16">campos</command>
<command execution_time="16">campos([888.9 586.9 1061.1])</command>
<command error="true" execution_time="15">get(model.handlePatch,'CameraViewAngle')</command>
<command execution_time="23" repeat="2">gca</command>
<command execution_time="16">set(gca,'CameraViewAngle',50)</command>
<command execution_time="16">set(gca,'CameraViewAngle',100)</command>
<command execution_time="15">set(gca,'CameraViewAngle',1)</command>
<command execution_time="16">set(gca,'CameraViewAngle',5)</command>
<command execution_time="31">set(gca,'CameraViewAngle',6)</command>
<command execution_time="16">set(gca,'CameraViewAngle',7)</command>
<command execution_time="31">set(gca,'CameraViewAngle',8)</command>
<command execution_time="16">campos</command>
<command execution_time="31">campos([20 -10 100])</command>
<command execution_time="16">campos([20 -10 2000])</command>
<command execution_time="16">campos([50 -10 2000])</command>
<command execution_time="16">campos([50 -50 2000])</command>
<command execution_time="31">campos([100 -100 2000])</command>
<command execution_time="15">campos([500 -500 2000])</command>
<command execution_time="15">axis off</command>
<command execution_time="16">axis equal</command>
<command execution_time="32">campos([1000 -1000 2000])</command>
<command execution_time="31">campos([1000 -1000 1000])</command>
<command execution_time="16">campos([1000 -1000 100])</command>
<command execution_time="16">campos([1000 -1000 500])</command>
<command execution_time="15">camorbit(0,0)</command>
<command execution_time="31">camorbit(90,0)</command>
<command execution_time="16">camorbit(180,0)</command>
<command execution_time="15">camorbit(180,20)</command>
<command execution_time="15" repeat="2">camorbit(0,20)</command>
<command execution_time="16" repeat="8">camorbit(0,-10)</command>
<command execution_time="15">camorbit(10,0)</command>
<command execution_time="16">close all</command>
<command error="true" execution_time="50452">templateLiner</command>
<command execution_time="78">clear all; close all;</command>
<command batch="659" error="true" execution_time="46" repeat="4">templateLiner</command>
<command batch="659" error="true" execution_time="946589">templateLiner</command>
<command batch="660" error="true" execution_time="120835" repeat="4">templateLiner</command>
<command batch="660" error="true">light('Position',[1 0 1],'Style','infinite')</command>
<command batch="660" error="true" execution_time="63902">templateLiner</command>
<command error="true" execution_time="232" repeat="2">te</command>
<command batch="661" error="true" execution_time="3663332" repeat="5">templateLiner</command>
<command batch="661" error="true">templateLiner</command>
<command batch="661" error="true">% This creates the 'background' axes</command>
<command batch="661" error="true">ha = axes('units','normalized', ...</command>
<command batch="661" error="true">'position',[0 0 1 1]);</command>
<command batch="661" error="true">% Move the background axes to the bottom</command>
<command batch="661" error="true">uistack(ha,'bottom');</command>
<command batch="661" error="true">% Load in a background image and display it using the correct colors</command>
<command batch="661" error="true">% The image used below, is in the Image Processing Toolbox.  If you do not have %access to this toolbox, you can use another image file instead.</command>
<command batch="661" error="true">I=imread('eight.tif');</command>
<command batch="661" error="true">hi = imagesc(I)</command>
<command batch="661" error="true">colormap gray</command>
<command batch="661" error="true">% Turn the handlevisibility off so that we don't inadvertently plot into the axes again</command>
<command batch="661" error="true">% Also, make the axes invisible</command>
<command batch="661" error="true">set(ha,'handlevisibility','off', ...</command>
<command batch="661" error="true">'visible','off')</command>
<command batch="661" error="true">% Now we can use the figure, as required.</command>
<command batch="661" error="true">% For example, we can put a plot in an axes</command>
<command batch="661" error="true">axes('position',[0.3,0.35,0.4,0.4])</command>
<command batch="661" error="true" execution_time="394581">plot(rand(10))</command>
<command batch="662">% This creates the 'background' axes</command>
<command batch="662">ha = axes('units','normalized', ...</command>
<command batch="662">'position',[0 0 1 1]);</command>
<command batch="662">% Move the background axes to the bottom</command>
<command batch="662">uistack(ha,'bottom');</command>
<command batch="662">% Load in a background image and display it using the correct colors</command>
<command batch="662">% The image used below, is in the Image Processing Toolbox.  If you do not have %access to this toolbox, you can use another image file instead.</command>
<command batch="662">I=imread('eight.tif');</command>
<command batch="662">hi = imagesc(I)</command>
<command batch="662">colormap gray</command>
<command batch="662">% Turn the handlevisibility off so that we don't inadvertently plot into the axes again</command>
<command batch="662">% Also, make the axes invisible</command>
<command batch="662">set(ha,'handlevisibility','off', ...</command>
<command batch="662">'visible','off')</command>
<command batch="662">% Now we can use the figure, as required.</command>
<command batch="662">% For example, we can put a plot in an axes</command>
<command batch="662">axes('position',[0.3,0.35,0.4,0.4])</command>
<command batch="662" execution_time="187">plot(rand(10))</command>
<command error="true" execution_time="110781" repeat="3">templateLiner</command>
<command batch="663">hSlider = figure;</command>
<command batch="663">axis off;</command>
<command batch="663">name = 'Angular Alignment';</command>
<command batch="663">%         set(hSlider,'Resize','off');</command>
<command batch="663">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="663">set(hSlider,'name',name);</command>
<command batch="663">set(hSlider,'NumberTitle','off');</command>
<command batch="663">set(hSlider,'MenuBar','none');</command>
<command batch="663">set(hSlider,'ToolBar','none');</command>
<command batch="663">set(hSlider,'Position',[2738 725 329 82]);</command>
<command batch="663">% UI SLIDER</command>
<command batch="663">hSli = uicontrol('style','slider','units',...</command>
<command batch="663">'pixel','position',[15 50 300 20],...</command>
<command batch="663">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="663">'Callback',@sliderCallBack);</command>
<command batch="663">% PUSH BUTTON (OK)</command>
<command batch="663">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="663">'String','Ok',...</command>
<command batch="663">'position',[15 20 150 20],...</command>
<command batch="663">'Callback',@pushOKCallBack);</command>
<command batch="663">% PUSH BUTTON (CANCEL)</command>
<command batch="663">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="663">'String','Cancel',...</command>
<command batch="663">'position',[165 20 150 20],...</command>
<command batch="663" execution_time="249">'Callback',@pushCancelCallBack);</command>
<command execution_time="15">get(hSlider,'Position')</command>
<command batch="664">hSlider = figure;</command>
<command batch="664">axis off;</command>
<command batch="664">name = 'Angular Alignment';</command>
<command batch="664">%         set(hSlider,'Resize','off');</command>
<command batch="664">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="664">set(hSlider,'name',name);</command>
<command batch="664">set(hSlider,'NumberTitle','off');</command>
<command batch="664">set(hSlider,'MenuBar','none');</command>
<command batch="664">set(hSlider,'ToolBar','none');</command>
<command batch="664">set(hSlider,'Position',[2738 667 329 141]);</command>
<command batch="664">% UI SLIDER</command>
<command batch="664">hSli = uicontrol('style','slider','units',...</command>
<command batch="664">'pixel','position',[15 50 300 20],...</command>
<command batch="664">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="664">'Callback',@sliderCallBack);</command>
<command batch="664">% PUSH BUTTON (OK)</command>
<command batch="664">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="664">'String','Ok',...</command>
<command batch="664">'position',[15 20 150 20],...</command>
<command batch="664">'Callback',@pushOKCallBack);</command>
<command batch="664">% PUSH BUTTON (CANCEL)</command>
<command batch="664">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="664">'String','Cancel',...</command>
<command batch="664">'position',[165 20 150 20],...</command>
<command batch="664" execution_time="250">'Callback',@pushCancelCallBack);</command>
<command batch="665">hSlider = figure;</command>
<command batch="665">axis off;</command>
<command batch="665">name = 'Angular Alignment';</command>
<command batch="665">%         set(hSlider,'Resize','off');</command>
<command batch="665">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="665">set(hSlider,'name',name);</command>
<command batch="665">set(hSlider,'NumberTitle','off');</command>
<command batch="665">set(hSlider,'MenuBar','none');</command>
<command batch="665">set(hSlider,'ToolBar','none');</command>
<command batch="665">set(hSlider,'Position',[2738 667 329 141]);</command>
<command batch="665">% UI SLIDER</command>
<command batch="665">hAPSliText = uicontrol('style','slider','units',...</command>
<command batch="665">'pixel','position',[15 80 300 20],...</command>
<command batch="665">'String','A-P');</command>
<command batch="665">% UI SLIDER</command>
<command batch="665">hAPSli = uicontrol('style','slider','units',...</command>
<command batch="665">'pixel','position',[15 50 300 20],...</command>
<command batch="665">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="665">'Callback',@sliderCallBack);</command>
<command batch="665">% UI SLIDER</command>
<command batch="665">hSli = uicontrol('style','slider','units',...</command>
<command batch="665">'pixel','position',[15 50 300 20],...</command>
<command batch="665">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="665">'Callback',@sliderCallBack);</command>
<command batch="665">% PUSH BUTTON (OK)</command>
<command batch="665">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="665">'String','Ok',...</command>
<command batch="665">'position',[15 20 150 20],...</command>
<command batch="665">'Callback',@pushOKCallBack);</command>
<command batch="665">% PUSH BUTTON (CANCEL)</command>
<command batch="665">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="665">'String','Cancel',...</command>
<command batch="665">'position',[165 20 150 20],...</command>
<command batch="665" execution_time="281">'Callback',@pushCancelCallBack);</command>
<command batch="666">hSlider = figure;</command>
<command batch="666">axis off;</command>
<command batch="666">name = 'Angular Alignment';</command>
<command batch="666">%         set(hSlider,'Resize','off');</command>
<command batch="666">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="666">set(hSlider,'name',name);</command>
<command batch="666">set(hSlider,'NumberTitle','off');</command>
<command batch="666">set(hSlider,'MenuBar','none');</command>
<command batch="666">set(hSlider,'ToolBar','none');</command>
<command batch="666">set(hSlider,'Position',[2738 667 329 141]);</command>
<command batch="666">% UI SLIDER</command>
<command batch="666">hAPSliText = uicontrol('style','text','units',...</command>
<command batch="666">'pixel','position',[15 80 300 20],...</command>
<command batch="666">'String','A-P');</command>
<command batch="666">% UI SLIDER</command>
<command batch="666">hAPSli = uicontrol('style','slider','units',...</command>
<command batch="666">'pixel','position',[15 50 300 20],...</command>
<command batch="666">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="666">'Callback',@sliderCallBack);</command>
<command batch="666">% UI SLIDER</command>
<command batch="666">hSli = uicontrol('style','slider','units',...</command>
<command batch="666">'pixel','position',[15 50 300 20],...</command>
<command batch="666">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="666">'Callback',@sliderCallBack);</command>
<command batch="666">% PUSH BUTTON (OK)</command>
<command batch="666">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="666">'String','Ok',...</command>
<command batch="666">'position',[15 20 150 20],...</command>
<command batch="666">'Callback',@pushOKCallBack);</command>
<command batch="666">% PUSH BUTTON (CANCEL)</command>
<command batch="666">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="666">'String','Cancel',...</command>
<command batch="666">'position',[165 20 150 20],...</command>
<command batch="666" execution_time="296">'Callback',@pushCancelCallBack);</command>
<command batch="667">hSlider = figure;</command>
<command batch="667">axis off;</command>
<command batch="667">name = 'Angular Alignment';</command>
<command batch="667">%         set(hSlider,'Resize','off');</command>
<command batch="667">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="667">set(hSlider,'name',name);</command>
<command batch="667">set(hSlider,'NumberTitle','off');</command>
<command batch="667">set(hSlider,'MenuBar','none');</command>
<command batch="667">set(hSlider,'ToolBar','none');</command>
<command batch="667">set(hSlider,'Position',[2738 667 329 141]);</command>
<command batch="667">% ML UI SLIDER LABEL</command>
<command batch="667">hMLSliText = uicontrol('style','text','units',...</command>
<command batch="667">'pixel','position',[15 140 300 20],...</command>
<command batch="667">'String','M-L angular alignment');</command>
<command batch="667">% ML UI SLIDER LABEL</command>
<command batch="667">hMLSli = uicontrol('style','slider','units',...</command>
<command batch="667">'pixel','position',[15 110 300 20],...</command>
<command batch="667">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="667">'Callback',@mlSliderCallBack);</command>
<command batch="667">% AP UI SLIDER LABEL</command>
<command batch="667">hAPSliText = uicontrol('style','text','units',...</command>
<command batch="667">'pixel','position',[15 80 300 20],...</command>
<command batch="667">'String','A-P angular alignment');</command>
<command batch="667">% AP UI SLIDER</command>
<command batch="667">hAPSli = uicontrol('style','slider','units',...</command>
<command batch="667">'pixel','position',[15 50 300 20],...</command>
<command batch="667">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="667">'Callback',@apSliderCallBack);</command>
<command batch="667">% PUSH BUTTON (OK)</command>
<command batch="667">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="667">'String','Ok',...</command>
<command batch="667">'position',[15 20 150 20],...</command>
<command batch="667">'Callback',@pushOKCallBack);</command>
<command batch="667">% PUSH BUTTON (CANCEL)</command>
<command batch="667">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="667">'String','Cancel',...</command>
<command batch="667">'position',[165 20 150 20],...</command>
<command batch="667" execution_time="359">'Callback',@pushCancelCallBack);</command>
<command execution_time="32">get(hSlider,'Position')</command>
<command batch="668">hSlider = figure;</command>
<command batch="668">axis off;</command>
<command batch="668">name = 'Angular Alignment';</command>
<command batch="668">%         set(hSlider,'Resize','off');</command>
<command batch="668">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="668">set(hSlider,'name',name);</command>
<command batch="668">set(hSlider,'NumberTitle','off');</command>
<command batch="668">set(hSlider,'MenuBar','none');</command>
<command batch="668">set(hSlider,'ToolBar','none');</command>
<command batch="668">set(hSlider,'Position',[2738 636 329 172]);</command>
<command batch="668">% ML UI SLIDER LABEL</command>
<command batch="668">hMLSliText = uicontrol('style','text','units',...</command>
<command batch="668">'pixel','position',[15 140 300 20],...</command>
<command batch="668">'String','M-L angular alignment');</command>
<command batch="668">% ML UI SLIDER LABEL</command>
<command batch="668">hMLSli = uicontrol('style','slider','units',...</command>
<command batch="668">'pixel','position',[15 110 300 20],...</command>
<command batch="668">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="668">'Callback',@mlSliderCallBack);</command>
<command batch="668">% AP UI SLIDER LABEL</command>
<command batch="668">hAPSliText = uicontrol('style','text','units',...</command>
<command batch="668">'pixel','position',[15 80 300 20],...</command>
<command batch="668">'String','A-P angular alignment');</command>
<command batch="668">% AP UI SLIDER</command>
<command batch="668">hAPSli = uicontrol('style','slider','units',...</command>
<command batch="668">'pixel','position',[15 50 300 20],...</command>
<command batch="668">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="668">'Callback',@apSliderCallBack);</command>
<command batch="668">% PUSH BUTTON (OK)</command>
<command batch="668">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="668">'String','Ok',...</command>
<command batch="668">'position',[15 20 150 20],...</command>
<command batch="668">'Callback',@pushOKCallBack);</command>
<command batch="668">% PUSH BUTTON (CANCEL)</command>
<command batch="668">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="668">'String','Cancel',...</command>
<command batch="668">'position',[165 20 150 20],...</command>
<command batch="668" execution_time="359">'Callback',@pushCancelCallBack);</command>
<command batch="669">hSlider = figure;</command>
<command batch="669">axis off;</command>
<command batch="669">name = 'Angular Alignment';</command>
<command batch="669">%         set(hSlider,'Resize','off');</command>
<command batch="669">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="669">set(hSlider,'name',name);</command>
<command batch="669">set(hSlider,'NumberTitle','off');</command>
<command batch="669">set(hSlider,'MenuBar','none');</command>
<command batch="669">set(hSlider,'ToolBar','none');</command>
<command batch="669">set(hSlider,'Position',[2738 636 329 172]);</command>
<command batch="669">% AP UI SLIDER LABEL</command>
<command batch="669">hAPSliText = uicontrol('style','text','units',...</command>
<command batch="669">'pixel','position',[15 140 300 20],...</command>
<command batch="669">'String','A-P angular alignment');</command>
<command batch="669">% AP UI SLIDER</command>
<command batch="669">hAPSli = uicontrol('style','slider','units',...</command>
<command batch="669">'pixel','position',[15 110 300 20],...</command>
<command batch="669">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="669">'Callback',@apSliderCallBack);</command>
<command batch="669">% ML UI SLIDER LABEL</command>
<command batch="669">hMLSliText = uicontrol('style','text','units',...</command>
<command batch="669">'pixel','position',[15 80 300 20],...</command>
<command batch="669">'String','M-L angular alignment');</command>
<command batch="669">% ML UI SLIDER LABEL</command>
<command batch="669">hMLSli = uicontrol('style','slider','units',...</command>
<command batch="669">'pixel','position',[15 50 300 20],...</command>
<command batch="669">'Max',1,'Min',0,'Value',0.5,...</command>
<command batch="669">'Callback',@mlSliderCallBack);</command>
<command batch="669">% PUSH BUTTON (OK)</command>
<command batch="669">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="669">'String','Ok',...</command>
<command batch="669">'position',[15 20 150 20],...</command>
<command batch="669">'Callback',@pushOKCallBack);</command>
<command batch="669">% PUSH BUTTON (CANCEL)</command>
<command batch="669">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="669">'String','Cancel',...</command>
<command batch="669">'position',[165 20 150 20],...</command>
<command batch="669" execution_time="312">'Callback',@pushCancelCallBack);</command>
<command error="true" execution_time="78686" repeat="14">templateLiner</command>
<command execution_time="47">repmat(ones(5,5),1,0)</command>
<command execution_time="16">repmat(ones(5,5),1,1)</command>
<command execution_time="31">repmat(ones(5,5),2,1)</command>
<command execution_time="16">size(ans)</command>
<command execution_time="31">cat(2,ones(2,2).*5,ones(2,2))</command>
<command execution_time="16">cat(1,ones(2,2).*5,ones(2,2))</command>
<command execution_time="8768">templateLiner</command>
<command execution_time="16">model</command>
<command error="true" execution_time="610">mean(diff(sliceHeights))</command>
<command execution_time="16">mean(diff(model.sliceHeights))</command>
<command execution_time="78">clear all; close all;</command>
<command batch="670" error="true" execution_time="37756" repeat="2">templateLiner</command>
<command batch="670" error="true">% ADD CYCLINDRICAL ADAPTER HEIGHT</command>
<command batch="670" error="true">tmp = repmat(model.data(1,1:2), round(model.guiCylAdapHeight/model.sliceHeightStep), 1);</command>
<command batch="670" error="true">tmpz = 0:model.sliceHeightStep:model.guiCyclAdapHeight;</command>
<command batch="670" error="true">tmp = cat(2,tmp,tmpz);</command>
<command batch="670" error="true">model.data = cat(1,tmp,model.data+guiCyclAdapHeight);</command>
<command batch="670" error="true">% DRAW SCENE</command>
<command batch="670" error="true">set(model.handlePatch,'vertices',model.data);</command>
<command batch="670" error="true" execution_time="37916">drawnow;</command>
<command error="true" execution_time="13483" repeat="4">templateLiner</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="15">size(tmpz)</command>
<command execution_time="16">tmp</command>
<command batch="671" error="true">tmp00</command>
<command batch="671" error="true" execution_time="362">te</command>
<command error="true" execution_time="20759" repeat="2">templateLiner</command>
<command execution_time="31">tmpz</command>
<command execution_time="15">tmp</command>
<command execution_time="31">model.data(1,:)</command>
<command error="true" execution_time="25680">templateLiner</command>
<command execution_time="31">tmpz</command>
<command execution_time="31">model.data(1,:)</command>
<command execution_time="15">tmp</command>
<command execution_time="16">tmpz</command>
<command execution_time="16">model.numSlicePoints</command>
<command batch="672" error="true">tmp = repmat(model.data(1:model.numSlicesPoints,1:2),...</command>
<command batch="672" error="true" execution_time="62">round(model.guiCylAdapHeight/model.sliceHeightStep), 1);</command>
<command batch="673">tmp = repmat(model.data(1:model.numSlicePoints,1:2),...</command>
<command batch="673" execution_time="16">round(model.guiCylAdapHeight/model.sliceHeightStep), 1);</command>
<command execution_time="31">tmp</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="16">90*5</command>
<command execution_time="31">round(model.guiCylAdapHeight/model.sliceHeightStep)</command>
<command execution_time="31">3*90</command>
<command execution_time="16">tmpz = 0:model.sliceHeightStep:model.guiCylAdapHeight;</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="32">size(tmpz)</command>
<command batch="674" error="true">repNum = round(model.guiCylAdapHeight/model.sliceHeightStep);</command>
<command batch="674" error="true">tmp = repmat(model.data(1:model.numSlicePoints,1:2),repNum, 1);</command>
<command batch="674" error="true">tmpz = 0:model.sliceHeightStep:model.guiCylAdapHeight;</command>
<command batch="674" error="true" execution_time="47">tmpz = repmat(tmpz,repNum,1);</command>
<command execution_time="31">round(model.guiCylAdapHeight/model.sliceHeightStep)</command>
<command error="true" execution_time="16">repNum = 3;</command>
<command error="true" execution_time="16599">templateLiner</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="32">size(tmpz)</command>
<command execution_time="15">tmpz</command>
<command batch="675" error="true">tmpz = repmat(tmpz,repNum*model.numSlicePoints,1);</command>
<command batch="675" error="true" execution_time="47">tmp = cat(2,tmp,tmpz);</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="31">270*3</command>
<command execution_time="31">90*3</command>
<command execution_time="16">clear tmpz</command>
<command batch="676">tmpz = 0:model.sliceHeightStep:model.guiCylAdapHeight;</command>
<command batch="676" execution_time="15">tmpz = repmat(tmpz,repNum*model.numSlicePoints,1);</command>
<command execution_time="15">size(tmpz)</command>
<command execution_time="16">tmp = cat(2,tmp,tmpz);</command>
<command error="true" execution_time="501">model.data = cat(1,tmp,model.data+guiCyclAdapHeight);</command>
<command error="true" execution_time="8565">size(tmp)</command>
<command error="true" execution_time="17467">templateLiner</command>
<command error="true" execution_time="31">model.data = cat(1,tmp,model.data+model.guiCylAdapHeight);</command>
<command execution_time="31" repeat="2">size(tmp)</command>
<command execution_time="31">size(tmpz)</command>
<command error="true" execution_time="17721" repeat="2">templateLiner</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="16">size(tmpz)</command>
<command execution_time="16">tmpz = 0:model.sliceHeightStep:model.guiCylAdapHeight;</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="15">tmpz</command>
<command execution_time="15">repNum</command>
<command execution_time="16">tmpz = repmat(tmpz,repNum*model.numSlicePoints,1);</command>
<command execution_time="16">size(tmpz)</command>
<command execution_time="16">tmpz = 0:model.sliceHeightStep:model.guiCylAdapHeight;</command>
<command execution_time="15">size(tmpz)</command>
<command execution_time="31">tmpz</command>
<command execution_time="15">tmpz = (0:model.sliceHeightStep:model.guiCylAdapHeight)';</command>
<command execution_time="15">size(tmpz)</command>
<command execution_time="16">ans</command>
<command execution_time="15">tmpz</command>
<command execution_time="15">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="31">model.numSliceHeights</command>
<command error="true" execution_time="16">tmpz = reshape(tmpz,model.numSliceHeights,1);</command>
<command execution_time="16">tmpz = reshape(tmpz,model.numSlicePoints*repNum,1);</command>
<command execution_time="16">size(tmpz)</command>
<command execution_time="31">tmp = cat(2,tmp,tmpz);</command>
<command execution_time="16">size(tmp)</command>
<command batch="677" error="true">repNum = round(model.guiCylAdapHeight/model.sliceHeightStep);</command>
<command batch="677" error="true">tmp = repmat(model.data(1:model.numSlicePoints,1:2),repNum, 1);</command>
<command batch="677" error="true">tmpz = (0:model.sliceHeightStep:model.guiCylAdapHeight)';</command>
<command batch="677" error="true">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command batch="677" error="true">tmpz = reshape(tmpz,model.numSlicePoints*repNum,1);</command>
<command batch="677" error="true" execution_time="78">tmp = cat(1,tmp,tmpz);</command>
<command batch="678">repNum = round(model.guiCylAdapHeight/model.sliceHeightStep);</command>
<command batch="678">tmp = repmat(model.data(1:model.numSlicePoints,1:2),repNum, 1);</command>
<command batch="678">tmpz = (0:model.sliceHeightStep:model.guiCylAdapHeight)';</command>
<command batch="678">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command batch="678" execution_time="47">tmpz = reshape(tmpz,model.numSlicePoints*repNum,1);</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="32">size(tmp)</command>
<command error="true" execution_time="32">foo = cat(2,tmp,tmpz);</command>
<command execution_time="16">size(cat(2,tmp,tmpz))</command>
<command execution_time="15">tmp = cat(2,tmp,tmpz);</command>
<command execution_time="16">model.data = cat(1,tmp,model.data+model.guiCylAdapHeight);</command>
<command execution_time="16">size(model.data)</command>
<command execution_time="31">model.numSliceHeights + 270</command>
<command error="true" execution_time="14971" repeat="3">templateLiner</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="16">repNum</command>
<command error="true" execution_time="83636" repeat="5">templateLiner</command>
</session>
<session>
<command time_stamp="1513ebdfa94">%-- 11/25/2015 8:03 AM --%</command>
<command error="true" execution_time="20684" repeat="2">templateLiner</command>
<command execution_time="15">size(tmpz)</command>
<command execution_time="15">model.sliceHeightStep</command>
<command execution_time="31">repNum</command>
<command batch="679" error="true">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="679" error="true" execution_time="4400">tmp = cat(2,tmp,tmpz);</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="15">size(tmp)</command>
<command batch="680">tmp = repmat(model.data(1:model.numSlicePoints,1:2),repNum-1, 1);</command>
<command batch="680">tmpz = (0:model.sliceHeightStep:model.guiCylAdapHeight)';</command>
<command batch="680">model.sliceHeights = cat(1,tmpz,model.sliceHeights+model.guiCylAdapHeight);</command>
<command batch="680">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command batch="680">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="680" execution_time="46">tmp = cat(2,tmp,tmpz);</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="16">model.data = cat(1,tmp,model.data+model.guiCylAdapHeight);</command>
<command batch="681">model.faces = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="681">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-2))');</command>
<command batch="681" execution_time="31">model.faces = bsxfun(@plus,model.faces,[0,1,1+model.numSlicePoints,model.numSlicePoints]);</command>
<command batch="682">% DRAW SCENE</command>
<command batch="682">set(model.handlePatch,'vertices',model.data,'faces',model.faces);</command>
<command batch="682" execution_time="359">drawnow;</command>
<command execution_time="16">size(model.faces)</command>
<command error="true" execution_time="63">size(mode.data)</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="32">max(model.faces)</command>
<command execution_time="15">model.numSlicePoints</command>
<command execution_time="484">figure; plot(model.sliceHeights)</command>
<command execution_time="31">max(model.data)</command>
<command batch="683" error="true">repNum = round(model.guiCylAdapHeight/model.sliceHeightStep)+1; % 1.8 mm resolution</command>
<command batch="683" error="true">tmpXY = repmat(model.data(1:model.numSlicePoints,1:2),repNum-1, 1);</command>
<command batch="683" error="true">tmpz = (0:model.sliceHeightStep:model.guiCylAdapHeight)';</command>
<command batch="683" error="true">model.sliceHeights = cat(1,tmpz,model.sliceHeights+model.guiCylAdapHeight);</command>
<command batch="683" error="true">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command batch="683" error="true">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="683" error="true">tmpXYZ = cat(2,tmpXY,tmpz);</command>
<command batch="683" error="true">model.data(:,3) = model.data(:,3) + model.guiCylAdapHeight;</command>
<command batch="683" error="true" execution_time="63">model.data = cat(1,tmpXYZ,model.data);</command>
<command error="true" execution_time="21873">templateLiner</command>
<command execution_time="32">size(tmpz)</command>
<command error="true" execution_time="18398">templateLiner</command>
<command execution_time="15">size(tmpz)</command>
<command execution_time="16">repNum</command>
<command error="true" execution_time="17710">templateLiner</command>
<command execution_time="31">steps</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="15">tmpz = (0:model.sliceHeightStep:steps*model.sliceHeightStep)';</command>
<command execution_time="31">size(tmpz)</command>
<command execution_time="15">tmpz</command>
<command execution_time="15">tmpz = linspace(0,(steps-1)*model.sliceHeightStep,steps);</command>
<command execution_time="15">tmpz</command>
<command execution_time="15768" repeat="2">templateLiner</command>
<command execution_time="78">figure; plot(model.sliceHeights)</command>
<command execution_time="109">hold on; plot(orgHeights)</command>
<command execution_time="31">max(orgHeights)</command>
<command execution_time="16">max(model.sliceHeights)</command>
<command execution_time="16">extendBy</command>
<command execution_time="16">max(orgHeights)+extendBy</command>
<command execution_time="16">min(orgHeights)</command>
<command execution_time="15">min(model.sliceHeights)</command>
<command execution_time="78">figure; plot(model.data(:,3))</command>
<command execution_time="16">min(model.data(:,3))</command>
<command execution_time="16">model.data = cat(1,tmpXYZ,model.data);</command>
<command execution_time="15">min(model.data(:,3))</command>
<command error="true" execution_time="1243">figue; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="31">model.guiCylAdapHeight = 10;</command>
<command batch="684">steps = round(model.guiCylAdapHeight/model.sliceHeightStep); % 1.8 mm resolution</command>
<command batch="684">repNum = steps+1;</command>
<command batch="684">extendBy = steps*model.sliceHeightStep;</command>
<command batch="684">tmpXY = repmat(model.data(1:model.numSlicePoints,1:2),repNum-1, 1);</command>
<command batch="684">%             tmpz = (0:model.sliceHeightStep:steps*model.sliceHeightStep)';</command>
<command batch="684">tmpz = linspace(0,(steps-1)*model.sliceHeightStep,steps)';</command>
<command batch="684">model.sliceHeights = cat(1,tmpz,model.sliceHeights+extendBy);</command>
<command batch="684">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command batch="684">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="684">tmpXYZ = cat(2,tmpXY,tmpz);</command>
<command batch="684">model.data(:,3) = model.data(:,3) + extendBy;</command>
<command batch="684" execution_time="125">model.data = cat(1,tmpXYZ,model.data);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">size(tmpXY)</command>
<command execution_time="31">tmpXY(1,:)</command>
<command execution_time="31">tmpXY(2,:)</command>
<command execution_time="15">tmpXY(3,:)</command>
<command execution_time="31">tmpXY(91,1)</command>
<command execution_time="31">tmpXY(91,:)</command>
<command execution_time="16">tmpXY(92,:)</command>
<command execution_time="102">figure; plot(model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,2))</command>
<command execution_time="33">tmpz</command>
<command execution_time="32">tmpz = linspace(0,(steps-1)*model.sliceHeightStep,steps)';</command>
<command execution_time="19">tmpz</command>
<command execution_time="25">model.sliceHeights(1:20)</command>
<command execution_time="16">tmpz = repmat(tmpz,1,model.numSlicePoints);</command>
<command execution_time="16">size(tmpz)</command>
<command execution_time="31">tmpz</command>
<command execution_time="36">tmpz(:,1:2)</command>
<command execution_time="26">ans'</command>
<command batch="685">steps = round(model.guiCylAdapHeight/model.sliceHeightStep); % 1.8 mm resolution</command>
<command batch="685">repNum = steps+1;</command>
<command batch="685">extendBy = steps*model.sliceHeightStep;</command>
<command batch="685">tmpXY = repmat(model.data(1:model.numSlicePoints,1:2),repNum-1, 1);</command>
<command batch="685">%             tmpz = (0:model.sliceHeightStep:steps*model.sliceHeightStep)';</command>
<command batch="685">tmpz = linspace(0,(steps-1)*model.sliceHeightStep,steps)';</command>
<command batch="685">model.sliceHeights = cat(1,tmpz,model.sliceHeights+extendBy);</command>
<command batch="685">tmpz = repmat(tmpz,1,model.numSlicePoints)';</command>
<command batch="685">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="685">tmpXYZ = cat(2,tmpXY,tmpz);</command>
<command batch="685">model.data(:,3) = model.data(:,3) + extendBy;</command>
<command batch="685" execution_time="130">model.data = cat(1,tmpXYZ,model.data);</command>
<command execution_time="83">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="686">model.data = orgData;</command>
<command batch="686" execution_time="31">model.sliceHeights = orgHeights;</command>
<command batch="687">steps = round(model.guiCylAdapHeight/model.sliceHeightStep); % 1.8 mm resolution</command>
<command batch="687">repNum = steps+1;</command>
<command batch="687">extendBy = steps*model.sliceHeightStep;</command>
<command batch="687">tmpXY = repmat(model.data(1:model.numSlicePoints,1:2),repNum-1, 1);</command>
<command batch="687">%             tmpz = (0:model.sliceHeightStep:steps*model.sliceHeightStep)';</command>
<command batch="687">tmpz = linspace(0,(steps-1)*model.sliceHeightStep,steps)';</command>
<command batch="687">model.sliceHeights = cat(1,tmpz,model.sliceHeights+extendBy);</command>
<command batch="687">tmpz = repmat(tmpz,1,model.numSlicePoints)';</command>
<command batch="687">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="687">tmpXYZ = cat(2,tmpXY,tmpz);</command>
<command batch="687">model.data(:,3) = model.data(:,3) + extendBy;</command>
<command batch="687" execution_time="133">model.data = cat(1,tmpXYZ,model.data);</command>
<command execution_time="91">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="688">% RESET MODEL DATA</command>
<command batch="688">model.data = orgData;</command>
<command batch="688">model.sliceHeights = orgHeights;</command>
<command batch="688">% APPLY ADAPTER</command>
<command batch="688">tmpModelR = sqrt(sum(model.data(:,1:2).^2,2));</command>
<command batch="688">tmpModelR = reshape(tmpModelR,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command batch="688">scaleFactor = bsxfun(@rdivide,tmpModelR,tmpAdapR);</command>
<command batch="688">loc = bsxfun(@le,tmpModelR,tmpAdapR);</command>
<command batch="688">scaleFactor = scaleFactor .* loc;</command>
<command batch="688">scaleFactor(scaleFactor==0) = 1;</command>
<command batch="688">scaleFactor = reshape(scaleFactor,model.numSliceHeights,1);</command>
<command batch="688" execution_time="140">model.data(:,1:2) = bsxfun(@rdivide,model.data(:,1:2),scaleFactor);</command>
<command batch="689">steps = round(model.guiCylAdapHeight/model.sliceHeightStep); % 1.8 mm resolution</command>
<command batch="689">repNum = steps+1;</command>
<command batch="689">extendBy = steps*model.sliceHeightStep;</command>
<command batch="689">tmpXY = repmat(model.data(1:model.numSlicePoints,1:2),repNum-1, 1);</command>
<command batch="689">%             tmpz = (0:model.sliceHeightStep:steps*model.sliceHeightStep)';</command>
<command batch="689">tmpz = linspace(0,(steps-1)*model.sliceHeightStep,steps)';</command>
<command batch="689">model.sliceHeights = cat(1,tmpz,model.sliceHeights+extendBy);</command>
<command batch="689">tmpz = repmat(tmpz,1,model.numSlicePoints)';</command>
<command batch="689">tmpz = reshape(tmpz,model.numSlicePoints*(repNum-1),1);</command>
<command batch="689">tmpXYZ = cat(2,tmpXY,tmpz);</command>
<command batch="689">model.data(:,3) = model.data(:,3) + extendBy;</command>
<command batch="689" execution_time="129">model.data = cat(1,tmpXYZ,model.data);</command>
<command execution_time="89">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15535">templateLiner</command>
<command execution_time="455">clear all; close all;</command>
<command error="true" execution_time="41898">templateLiner</command>
<command execution_time="55">clear all; close all</command>
<command error="true" execution_time="46492">templateLiner</command>
<command batch="690">hSlider = figure;</command>
<command batch="690">axis off;</command>
<command batch="690">name = 'Cylindrical adapter alignment';</command>
<command batch="690">set(hSlider,'Resize','off');</command>
<command batch="690">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="690">set(hSlider,'name',name);</command>
<command batch="690">set(hSlider,'NumberTitle','off');</command>
<command batch="690">set(hSlider,'MenuBar','none');</command>
<command batch="690">set(hSlider,'ToolBar','none');</command>
<command batch="690">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="690">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="690">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="690">'pixel','position',[15 170 120 20],...</command>
<command batch="690">'string','Adapter (mm): extend by');</command>
<command batch="690">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="690">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="690">'pixel','position',[130 170 20 20],...</command>
<command batch="690">'string','0',...</command>
<command batch="690">'Callback',@heightCallBack);</command>
<command batch="690">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="690">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="690">'pixel','position',[155 170 40 20],...</command>
<command batch="690">'string','radius');</command>
<command batch="690">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="690">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="690">'pixel','position',[200 170 20 20],...</command>
<command batch="690">'string','27',...</command>
<command batch="690">'Callback',@widthCallBack);</command>
<command batch="690">% AP (I.E., X) UI SLIDER</command>
<command batch="690">hSli = uicontrol('style','slider','units',...</command>
<command batch="690">'pixel','position',[15 50 300 20],...</command>
<command batch="690">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="690">'Callback',@apSliderCallBack);</command>
<command batch="690">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="690">hSli = uicontrol('style','text','units',...</command>
<command batch="690">'pixel','position',[15 80 300 20],...</command>
<command batch="690">'string','A-P alignment');</command>
<command batch="690">% ML (I.E., Y) UI SLIDER</command>
<command batch="690">hSli = uicontrol('style','slider','units',...</command>
<command batch="690">'pixel','position',[15 110 300 20],...</command>
<command batch="690">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="690">'Callback',@mlSliderCallBack);</command>
<command batch="690">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="690">hSli = uicontrol('style','text','units',...</command>
<command batch="690">'pixel','position',[15 140 300 20],...</command>
<command batch="690">'string','M-L alignment');</command>
<command batch="690">% PUSH BUTTON (OK)</command>
<command batch="690">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="690">'String','Ok',...</command>
<command batch="690">'position',[15 20 150 20],...</command>
<command batch="690">'Callback',@pushOKCallBack);</command>
<command batch="690">% PUSH BUTTON (CANCEL)</command>
<command batch="690">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="690">'String','Cancel',...</command>
<command batch="690">'position',[165 20 150 20],...</command>
<command batch="690" execution_time="482">'Callback',@pushCancelCallBack);</command>
<command batch="691">hSlider = figure;</command>
<command batch="691">axis off;</command>
<command batch="691">name = 'Cylindrical adapter alignment';</command>
<command batch="691">set(hSlider,'Resize','off');</command>
<command batch="691">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="691">set(hSlider,'name',name);</command>
<command batch="691">set(hSlider,'NumberTitle','off');</command>
<command batch="691">set(hSlider,'MenuBar','none');</command>
<command batch="691">set(hSlider,'ToolBar','none');</command>
<command batch="691">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="691">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="691">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="691">'pixel','position',[15 170 150 20],...</command>
<command batch="691">'string','Adapter (mm): extend by');</command>
<command batch="691">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="691">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="691">'pixel','position',[130 170 20 20],...</command>
<command batch="691">'string','0',...</command>
<command batch="691">'Callback',@heightCallBack);</command>
<command batch="691">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="691">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="691">'pixel','position',[155 170 40 20],...</command>
<command batch="691">'string','radius');</command>
<command batch="691">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="691">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="691">'pixel','position',[200 170 20 20],...</command>
<command batch="691">'string','27',...</command>
<command batch="691">'Callback',@widthCallBack);</command>
<command batch="691">% AP (I.E., X) UI SLIDER</command>
<command batch="691">hSli = uicontrol('style','slider','units',...</command>
<command batch="691">'pixel','position',[15 50 300 20],...</command>
<command batch="691">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="691">'Callback',@apSliderCallBack);</command>
<command batch="691">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="691">hSli = uicontrol('style','text','units',...</command>
<command batch="691">'pixel','position',[15 80 300 20],...</command>
<command batch="691">'string','A-P alignment');</command>
<command batch="691">% ML (I.E., Y) UI SLIDER</command>
<command batch="691">hSli = uicontrol('style','slider','units',...</command>
<command batch="691">'pixel','position',[15 110 300 20],...</command>
<command batch="691">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="691">'Callback',@mlSliderCallBack);</command>
<command batch="691">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="691">hSli = uicontrol('style','text','units',...</command>
<command batch="691">'pixel','position',[15 140 300 20],...</command>
<command batch="691">'string','M-L alignment');</command>
<command batch="691">% PUSH BUTTON (OK)</command>
<command batch="691">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="691">'String','Ok',...</command>
<command batch="691">'position',[15 20 150 20],...</command>
<command batch="691">'Callback',@pushOKCallBack);</command>
<command batch="691">% PUSH BUTTON (CANCEL)</command>
<command batch="691">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="691">'String','Cancel',...</command>
<command batch="691">'position',[165 20 150 20],...</command>
<command batch="691" execution_time="821">'Callback',@pushCancelCallBack);</command>
<command batch="692">hSlider = figure;</command>
<command batch="692">axis off;</command>
<command batch="692">name = 'Cylindrical adapter alignment';</command>
<command batch="692">set(hSlider,'Resize','off');</command>
<command batch="692">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="692">set(hSlider,'name',name);</command>
<command batch="692">set(hSlider,'NumberTitle','off');</command>
<command batch="692">set(hSlider,'MenuBar','none');</command>
<command batch="692">set(hSlider,'ToolBar','none');</command>
<command batch="692">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="692">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="692">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="692">'pixel','position',[15 170 150 20],...</command>
<command batch="692">'string','Adapter (mm): extend by');</command>
<command batch="692">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="692">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="692">'pixel','position',[170 170 20 20],...</command>
<command batch="692">'string','0',...</command>
<command batch="692">'Callback',@heightCallBack);</command>
<command batch="692">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="692">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="692">'pixel','position',[195 170 40 20],...</command>
<command batch="692">'string','radius');</command>
<command batch="692">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="692">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="692">'pixel','position',[240 170 20 20],...</command>
<command batch="692">'string','27',...</command>
<command batch="692">'Callback',@widthCallBack);</command>
<command batch="692">% AP (I.E., X) UI SLIDER</command>
<command batch="692">hSli = uicontrol('style','slider','units',...</command>
<command batch="692">'pixel','position',[15 50 300 20],...</command>
<command batch="692">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="692">'Callback',@apSliderCallBack);</command>
<command batch="692">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="692">hSli = uicontrol('style','text','units',...</command>
<command batch="692">'pixel','position',[15 80 300 20],...</command>
<command batch="692">'string','A-P alignment');</command>
<command batch="692">% ML (I.E., Y) UI SLIDER</command>
<command batch="692">hSli = uicontrol('style','slider','units',...</command>
<command batch="692">'pixel','position',[15 110 300 20],...</command>
<command batch="692">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="692">'Callback',@mlSliderCallBack);</command>
<command batch="692">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="692">hSli = uicontrol('style','text','units',...</command>
<command batch="692">'pixel','position',[15 140 300 20],...</command>
<command batch="692">'string','M-L alignment');</command>
<command batch="692">% PUSH BUTTON (OK)</command>
<command batch="692">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="692">'String','Ok',...</command>
<command batch="692">'position',[15 20 150 20],...</command>
<command batch="692">'Callback',@pushOKCallBack);</command>
<command batch="692">% PUSH BUTTON (CANCEL)</command>
<command batch="692">hPsh = uicontrol('style','pushbutton',...</command>
<command batch="692">'String','Cancel',...</command>
<command batch="692">'position',[165 20 150 20],...</command>
<command batch="692" execution_time="511">'Callback',@pushCancelCallBack);</command>
<command execution_time="1127">meshTest</command>
<command execution_time="24">size(slope)</command>
<command error="true" execution_time="1269">meshTest</command>
<command execution_time="23">numFaces</command>
<command execution_time="1196" repeat="4">meshTest</command>
<command execution_time="3617" repeat="4">templateLiner</command>
<command execution_time="37">model.numFaces</command>
<command batch="693">set(model.handlePatch,'FaceColor','Flat');</command>
<command batch="693">highlight = ones(1,model.numFaces);</command>
<command batch="693">highlight(model.numFaces-10) = 0;</command>
<command batch="693">set(model.handlePatch,'CData',highlight);</command>
<command batch="693">set(model.handlePatch,'CDataMapping','scaled');</command>
<command batch="693">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="693">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="693">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="693">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="693">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="693">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="693" execution_time="102">set(model.handlePatch,'EdgeAlpha',1);</command>
<command batch="694">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="694">% light('Position',[1 0 1],'Style','infinite');</command>
<command batch="694" execution_time="44">model.hLight = camlight('headlight');</command>
<command batch="695">set(model.handlePatch,'FaceColor','Flat');</command>
<command batch="695">highlight = ones(1,model.numFaces);</command>
<command batch="695">highlight(model.numFaces-10) = 0;</command>
<command batch="695">set(model.handlePatch,'CData',highlight);</command>
<command batch="695">set(model.handlePatch,'CDataMapping','scaled');</command>
<command batch="695">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="695">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="695">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="695">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="695">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="695">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="695" execution_time="103">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="23">size(highlight)</command>
<command execution_time="26">size(model.faces)</command>
<command error="true" execution_time="348">numFaces</command>
<command execution_time="23">model.numFaces</command>
<command execution_time="21">model.numFaces = size(model.faces,1);</command>
<command execution_time="23">model.numFaces</command>
<command execution_time="18">guidata(hObject,model);</command>
<command batch="696">model.handlePatch = patch('Faces',model.faces,'Vertices',model.data);</command>
<command batch="696">% light('Position',[1 0 1],'Style','infinite');</command>
<command batch="696">model.hLight = camlight('headlight');</command>
<command batch="696">% [0.870588235294118 0.623529411764706 0.0431372549019608] - model color</command>
<command batch="696">% [0 0 0] - model black</command>
<command batch="696">% [0 106/255 255/255] - assembly color</command>
<command batch="696">set(model.handlePatch,'FaceColor','Flat');</command>
<command batch="696">highlight = ones(1,model.numFaces);</command>
<command batch="696">highlight(model.numFaces-10) = 0;</command>
<command batch="696">set(model.handlePatch,'CData',highlight);</command>
<command batch="696">set(model.handlePatch,'CDataMapping','scaled');</command>
<command batch="696">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="696">% set(model.handlePatch,'BackFaceLighting','lit');</command>
<command batch="696">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="696">% set(model.handlePatch,'EdgeColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="696">% set(model.handlePatch,'LineStyle',':');</command>
<command batch="696">set(model.handlePatch,'FaceAlpha',1);</command>
<command batch="696" execution_time="121">set(model.handlePatch,'EdgeAlpha',1);</command>
<command execution_time="8456" repeat="5">templateLiner</command>
<command execution_time="25">round(model.lastMouseX*model.lastMouseY)</command>
<command execution_time="23">size(model.highlight)</command>
<command execution_time="23">model.lastMouseX</command>
<command execution_time="23">model.lastMouseY</command>
<command batch="697">model.higlight(round(model.lastMouseY))=0;</command>
<command batch="697" execution_time="30">drawnow;</command>
<command batch="698">model.higlight(1)=0;</command>
<command batch="698" execution_time="38">drawnow;</command>
</session>
<session>
<command time_stamp="1513f51750b">%-- 11/25/2015 10:44 AM --%</command>
<command execution_time="7033" repeat="11">templateLiner</command>
<command execution_time="20">tmp(1)</command>
<command execution_time="34">tmp(2)</command>
<command execution_time="6999">templateLiner</command>
<command execution_time="38">tmp(1)</command>
<command execution_time="31">tmp(2)</command>
<command execution_time="9178">templateLiner</command>
<command execution_time="16">tmp(2)</command>
<command execution_time="16">tmp(1)</command>
<command execution_time="9018">templateLiner</command>
<command error="true" execution_time="49">tmpX = get(model.axes1,'Xdata');</command>
<command error="true" execution_time="39">tmpX = get(model.axes1,'xdata');</command>
<command execution_time="19">tmpX = get(model.axes1,'currentpoint');</command>
<command error="true" execution_time="808" repeat="2">tmpX</command>
<command execution_time="8509">templateLiner</command>
<command error="true" execution_time="284">tmp</command>
<command execution_time="20">tmp = get(model.axes1,'currentpoint');</command>
<command execution_time="23">tmp</command>
<command execution_time="18066" repeat="2">templateLiner</command>
<command execution_time="16">tmp</command>
<command batch="699" error="true">templateLiner</command>
<command batch="699" error="true" execution_time="724099">foo = ones(2,3)</command>
<command execution_time="24">diff(foo(:,1))</command>
<command execution_time="25">foo(2,:) = 3</command>
<command execution_time="16">diff(foo(:,1))</command>
<command execution_time="21">[1 2 3; 3 6 3; 7 4 9];</command>
<command execution_time="31">v = ans</command>
<command execution_time="31">min(v)</command>
<command execution_time="20">sum(v,2)</command>
<command error="true" execution_time="30052">templateLiner</command>
<command execution_time="45">m = rand(5,5)</command>
<command execution_time="15">m = rand(5,3)</command>
<command execution_time="15">v = ones(1,3);</command>
<command execution_time="31">v</command>
<command execution_time="24">bsxfun(@minus,m,v)</command>
<command execution_time="23">bsxfun(@minus,m,[1 2 3])</command>
<command execution_time="16">.7577-1</command>
<command execution_time="19">.7060-2</command>
<command execution_time="34">.6555-1</command>
<command execution_time="11252" repeat="2">templateLiner</command>
<command execution_time="18">size(model.data)</command>
<command execution_time="18">size(v)</command>
<command execution_time="23">size(x)</command>
<command execution_time="16">tmp = ones(5,3)</command>
<command execution_time="22">v = ones(5,2)</command>
<command execution_time="38">v = ones(3,3)</command>
<command error="true" execution_time="18">bsxfun(@minus,tmp,v)</command>
<command execution_time="16">length(t)</command>
<command execution_time="36">[m loc] = min(ones(10:1))</command>
<command execution_time="16">m = ones(10:1); m(1:5) = 5;</command>
<command execution_time="16">[m loc] = min(ones(10:1))</command>
<command execution_time="16">m = ones(10:1); m(1:5) = 5;</command>
<command execution_time="37">[t loc] = min(m)</command>
<command execution_time="23">m</command>
<command execution_time="22">m = ones(10:1); m(1:5,1) = 5;</command>
<command execution_time="16">m</command>
<command execution_time="31">m = ones(10:1);</command>
<command execution_time="15">m</command>
<command execution_time="19">m = ones(10,1); m(1:5) = 5;</command>
<command execution_time="20">m</command>
<command execution_time="19">[t loc] = min(m)</command>
<command execution_time="15">m = [];</command>
<command execution_time="10">m</command>
<command execution_time="32">m &lt; 1</command>
<command execution_time="16">m &gt; 1</command>
<command execution_time="24">model</command>
<command execution_time="9919" repeat="3">templateLiner</command>
<command execution_time="20">z = (tmp(2,3)-tmp(1,3)).*t-tmp(1,3);</command>
<command batch="700">lastM = 1e6;</command>
<command batch="700">for idx = 1:101</command>
<command batch="700">[m, loc] = min(model.data(:,3)-z(idx));</command>
<command batch="700">if m &lt; lastM</command>
<command batch="700">lastM = m;</command>
<command batch="700">lastLoc = loc;</command>
<command batch="700">end</command>
<command batch="700" execution_time="67">end</command>
<command execution_time="225">figure; plot(lastLoc)</command>
<command execution_time="25">lastLoc</command>
<command error="true" execution_time="85">figure; plot(data(:,3))</command>
<command execution_time="81">figure; plot(model.data(:,3))</command>
<command execution_time="88">figure; plot(z)</command>
<command execution_time="24">tmp</command>
<command execution_time="16">z = (tmp(2,3)-tmp(1,3)).*t+tmp(1,3);</command>
<command execution_time="66">figure; plot(z)</command>
<command batch="701">lastM = 1e6;</command>
<command batch="701">for idx = 1:101</command>
<command batch="701">[m, loc] = min(model.data(:,3)-z(idx));</command>
<command batch="701">if m &lt; lastM</command>
<command batch="701">lastM = m;</command>
<command batch="701">lastLoc = loc;</command>
<command batch="701">end</command>
<command batch="701" execution_time="84">end</command>
<command execution_time="11">size(lastLoc)</command>
<command execution_time="31">lastLoc</command>
<command execution_time="31">z</command>
<command batch="702" error="true">t = 0:.01:1;</command>
<command batch="702" error="true">x = (tmp(2,1)-tmp(1,1)).*t+tmp(1,1);</command>
<command batch="702" error="true">y = (tmp(2,2)-tmp(1,2)).*t+tmp(1,2);</command>
<command batch="702" error="true">z = (tmp(2,3)-tmp(1,3)).*t+tmp(1,3);</command>
<command batch="702" error="true">v = [x y z];</command>
<command batch="702" error="true">lastM = 1e6;</command>
<command batch="702" error="true">for idx = 1:101</command>
<command batch="702" error="true">[m, loc] = min(sum(model.data(:,3)-v(idx,:),2));</command>
<command batch="702" error="true">if m &lt; lastM</command>
<command batch="702" error="true">lastM = m;</command>
<command batch="702" error="true">lastLoc = loc;</command>
<command batch="702" error="true">end</command>
<command batch="702" error="true" execution_time="173">end</command>
<command execution_time="22">size(v)</command>
<command execution_time="25">size(x)</command>
<command execution_time="18">v = [x' y' z'];</command>
<command execution_time="15">size(v)</command>
<command batch="703" error="true">tmp = get(model.axes1,'currentpoint');</command>
<command batch="703" error="true">t = 0:.01:1;</command>
<command batch="703" error="true">x = (tmp(2,1)-tmp(1,1)).*t+tmp(1,1);</command>
<command batch="703" error="true">y = (tmp(2,2)-tmp(1,2)).*t+tmp(1,2);</command>
<command batch="703" error="true">z = (tmp(2,3)-tmp(1,3)).*t+tmp(1,3);</command>
<command batch="703" error="true">v = [x' y' z'];</command>
<command batch="703" error="true">lastM = 1e6;</command>
<command batch="703" error="true">for idx = 1:101</command>
<command batch="703" error="true">[m, loc] = min(sum(model.data(:,3)-v(idx,:),2));</command>
<command batch="703" error="true">if m &lt; lastM</command>
<command batch="703" error="true">lastM = m;</command>
<command batch="703" error="true">lastLoc = loc;</command>
<command batch="703" error="true">end</command>
<command batch="703" error="true" execution_time="211">end</command>
<command execution_time="16">size(v)</command>
<command execution_time="25">idx</command>
<command batch="704" error="true">tmp = get(model.axes1,'currentpoint');</command>
<command batch="704" error="true">t = 0:.01:1;</command>
<command batch="704" error="true">x = (tmp(2,1)-tmp(1,1)).*t+tmp(1,1);</command>
<command batch="704" error="true">y = (tmp(2,2)-tmp(1,2)).*t+tmp(1,2);</command>
<command batch="704" error="true">z = (tmp(2,3)-tmp(1,3)).*t+tmp(1,3);</command>
<command batch="704" error="true">v = [x' y' z'];</command>
<command batch="704" error="true">lastM = 1e6;</command>
<command batch="704" error="true">for idx = 1:101</command>
<command batch="704" error="true">[m, loc] = min(sum(bsxfun(@minus,model.data(:,3)',v(idx,:)),2));</command>
<command batch="704" error="true">if m &lt; lastM</command>
<command batch="704" error="true">lastM = m;</command>
<command batch="704" error="true">lastLoc = loc;</command>
<command batch="704" error="true">end</command>
<command batch="704" error="true" execution_time="209">end</command>
<command batch="705" error="true">t = 0:.01:1;</command>
<command batch="705" error="true">x = (tmp(2,1)-tmp(1,1)).*t+tmp(1,1);</command>
<command batch="705" error="true">y = (tmp(2,2)-tmp(1,2)).*t+tmp(1,2);</command>
<command batch="705" error="true">z = (tmp(2,3)-tmp(1,3)).*t+tmp(1,3);</command>
<command batch="705" error="true">v = [x' y' z'];</command>
<command batch="705" error="true">lastM = 1e6;</command>
<command batch="705" error="true">for idx = 1:101</command>
<command batch="705" error="true">[m, loc] = min(sum(bsxfun(@minus,model.data',v(idx,:)),2));</command>
<command batch="705" error="true">if m &lt; lastM</command>
<command batch="705" error="true">lastM = m;</command>
<command batch="705" error="true">lastLoc = loc;</command>
<command batch="705" error="true">end</command>
<command batch="705" error="true" execution_time="187">end</command>
<command execution_time="35">size(model.data')</command>
<command execution_time="16">size(v(idx,:))</command>
<command batch="706">for idx = 1:101</command>
<command batch="706">[m, loc] = min(sum(bsxfun(@minus,model.data',v(idx,:)'),2));</command>
<command batch="706">if m &lt; lastM</command>
<command batch="706">lastM = m;</command>
<command batch="706">lastLoc = loc;</command>
<command batch="706">end</command>
<command batch="706" execution_time="119">end</command>
<command error="true" execution_time="375">size(lasLoc)</command>
<command execution_time="42">size(lastLoc)</command>
<command execution_time="29">lastLoc</command>
<command execution_time="94">figure; plot(sum(bsxfun(@minus,model.data',v(idx,:)'),2))</command>
<command execution_time="270">figure; imagesc(bsxfun(@minus,model.data',v(idx,:)'));</command>
<command execution_time="25">6258/90</command>
<command execution_time="16">size(sum(abs(bsxfun(@minus,model.data',v(idx,:)')),2))</command>
<command execution_time="23">size(sum(abs(bsxfun(@minus,model.data',v(idx,:)')),1))</command>
<command batch="707">for idx = 1:101</command>
<command batch="707">[m, loc] = min(sum(abs(bsxfun(@minus,model.data',v(idx,:)')),1));</command>
<command batch="707">if m &lt; lastM</command>
<command batch="707">lastM = m;</command>
<command batch="707">lastLoc = loc;</command>
<command batch="707">end</command>
<command batch="707" execution_time="150">end</command>
<command execution_time="31">lastLoc</command>
<command execution_time="23">loc</command>
<command execution_time="16">lastM</command>
<command execution_time="6">lastM = [];</command>
<command batch="708">lastM = 1e6;</command>
<command batch="708">for idx = 1:101</command>
<command batch="708">[m, loc] = min(sum(abs(bsxfun(@minus,model.data',v(idx,:)')),1));</command>
<command batch="708">if m &lt; lastM</command>
<command batch="708">lastM = m;</command>
<command batch="708">lastLoc = loc;</command>
<command batch="708">end</command>
<command batch="708" execution_time="150">end</command>
<command execution_time="17">lastLoc</command>
<command error="true" execution_time="91205" repeat="11">templateLiner</command>
<command error="true" execution_time="388">h figure;</command>
<command execution_time="84">h = figure;</command>
<command execution_time="67">cmap = colormap(gray);</command>
<command execution_time="32">size(cmap)</command>
<command error="true" execution_time="98">set(h,'color',cmap)</command>
<command batch="709">ha = axes('units','normalized', ...</command>
<command batch="709">'position',[0 0 1 1]);</command>
<command batch="709">% Move the background axes to the bottom</command>
<command batch="709">uistack(ha,'bottom');</command>
<command batch="709">% Load in a background image and display it using the correct colors</command>
<command batch="709">% The image used below, is in the Image Processing Toolbox.  If you do not have %access to this toolbox, you can use another image file instead.</command>
<command batch="709">I=imread('eight.tif');</command>
<command batch="709">hi = imagesc(I)</command>
<command batch="709">colormap gray</command>
<command batch="709">% Turn the handlevisibility off so that we don't inadvertently plot into the axes again</command>
<command batch="709">% Also, make the axes invisible</command>
<command batch="709">set(ha,'handlevisibility','off', ...</command>
<command batch="709" execution_time="1051">'visible','off')</command>
<command execution_time="31">gcf</command>
<command error="true" execution_time="38">gradient = bsxfun(@add, zeros(100,100), linspace(1,0,100));</command>
<command batch="710">gradient = bsxfun(@plus, zeros(100,100), linspace(1,0,100));</command>
<command batch="710" execution_time="43">hi = imagesc(gradient);</command>
<command batch="711">ha = axes('units','normalized', ...</command>
<command batch="711">'position',[0 0 1 1]);</command>
<command batch="711">% Move the background axes to the bottom</command>
<command batch="711">uistack(ha,'bottom');</command>
<command batch="711">% Load in a background image and display it using the correct colors</command>
<command batch="711">% The image used below, is in the Image Processing Toolbox.  If you do not have %access to this toolbox, you can use another image file instead.</command>
<command batch="711">% I=imread('eight.tif');</command>
<command batch="711">gradient = bsxfun(@plus, zeros(100,100), linspace(1,0,100));</command>
<command batch="711">hi = imagesc(gradient');</command>
<command batch="711" execution_time="180">colormap gray</command>
<command execution_time="100">figure; imagesc(gradient)</command>
<command execution_time="124">figure; imagesc(rot90(gradient))</command>
<command execution_time="24">colormap(gray)</command>
<command batch="712">ha = axes('units','normalized', ...</command>
<command batch="712">'position',[0 0 1 1]);</command>
<command batch="712">% Move the background axes to the bottom</command>
<command batch="712">uistack(ha,'bottom');</command>
<command batch="712">% Load in a background image and display it using the correct colors</command>
<command batch="712">% The image used below, is in the Image Processing Toolbox.  If you do not have %access to this toolbox, you can use another image file instead.</command>
<command batch="712">% I=imread('eight.tif');</command>
<command batch="712">gradient = rot90(bsxfun(@plus, zeros(100,100), linspace(1,0,100)));</command>
<command batch="712">hi = imagesc(gradient);</command>
<command batch="712">colormap gray</command>
<command batch="712">% Turn the handlevisibility off so that we don't inadvertently plot into the axes again</command>
<command batch="712">% Also, make the axes invisible</command>
<command batch="712">set(ha,'handlevisibility','off', ...</command>
<command batch="712" execution_time="350">'visible','off')</command>
<command execution_time="1172" repeat="2">meshTest</command>
<command batch="713">ha = axes('units','normalized', ...</command>
<command batch="713">'position',[0 0 1 1]);</command>
<command batch="713">% Move the background axes to the bottom</command>
<command batch="713">uistack(ha,'bottom');</command>
<command batch="713">% Load in a background image and display it using the correct colors</command>
<command batch="713">% The image used below, is in the Image Processing Toolbox.  If you do not have %access to this toolbox, you can use another image file instead.</command>
<command batch="713">% I=imread('eight.tif');</command>
<command batch="713">I = imread('backgroundGradient.png');</command>
<command batch="713">hi = imagesc(I);</command>
<command batch="713">% Turn the handlevisibility off so that we don't inadvertently plot into the axes again</command>
<command batch="713">% Also, make the axes invisible</command>
<command batch="713">set(ha,'handlevisibility','off', ...</command>
<command batch="713" execution_time="156">'visible','off')</command>
<command error="true" execution_time="172" repeat="2">gridBackgroundExample</command>
<command batch="714" error="true">templateLiner</command>
<command batch="714" error="true" execution_time="173326">templateLiner</command>
<command batch="715" error="true" execution_time="10746" repeat="3">templateLiner</command>
<command batch="715" error="true" execution_time="78795">templateLiner</command>
<command error="true" execution_time="30461">templateLiner</command>
<command batch="716">hPrompt = figure;</command>
<command batch="716">axis off;</command>
<command batch="716">name = 'Cylindrical adapter alignment';</command>
<command batch="716">set(hPrompt,'Resize','off');</command>
<command batch="716">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="716">set(hPrompt,'name',name);</command>
<command batch="716">set(hPrompt,'NumberTitle','off');</command>
<command batch="716">set(hPrompt,'MenuBar','none');</command>
<command batch="716">set(hPrompt,'ToolBar','none');</command>
<command batch="716" execution_time="140">set(hPrompt,'Position',[2738 631 329 201]);</command>
<command batch="717">hPrompt = figure;</command>
<command batch="717">axis off;</command>
<command batch="717">name = 'Extend model';</command>
<command batch="717">%         set(hPrompt,'Resize','off');</command>
<command batch="717">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="717">set(hPrompt,'name',name);</command>
<command batch="717">set(hPrompt,'NumberTitle','off');</command>
<command batch="717">set(hPrompt,'MenuBar','none');</command>
<command batch="717">set(hPrompt,'ToolBar','none');</command>
<command batch="717" execution_time="125">set(hPrompt,'Position',[2738 631 329 201]);</command>
<command execution_time="15">get(hPrompt,'position')</command>
<command batch="718" error="true">hPrompt = figure;</command>
<command batch="718" error="true">axis off;</command>
<command batch="718" error="true">name = 'Extend model';</command>
<command batch="718" error="true">%         set(hPrompt,'Resize','off');</command>
<command batch="718" error="true">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="718" error="true">set(hPrompt,'name',name);</command>
<command batch="718" error="true">set(hPrompt,'NumberTitle','off');</command>
<command batch="718" error="true">set(hPrompt,'MenuBar','none');</command>
<command batch="718" error="true">set(hPrompt,'ToolBar','none');</command>
<command batch="718" error="true">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="718" error="true">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="718" error="true">hTopOfSection = uicontrol('style','pushbotton','units',...</command>
<command batch="718" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="718" error="true">'string','0','string','Select top of section',...</command>
<command batch="718" error="true">'Callback',@heightCallBack);</command>
<command batch="718" error="true">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="718" error="true">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="718" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="718" error="true">'string','0','string','Select bottom of section',...</command>
<command batch="718" error="true">'Callback',@heightCallBack);</command>
<command batch="718" error="true">% EXTEND MODEL BY</command>
<command batch="718" error="true">hExtendBy = uicontrol('style','editd','units',...</command>
<command batch="718" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="718" error="true">'string','0',...</command>
<command batch="718" error="true" execution_time="332">'Callback',@heightCallBack);</command>
<command batch="719" error="true">hPrompt = figure;</command>
<command batch="719" error="true">axis off;</command>
<command batch="719" error="true">name = 'Extend model';</command>
<command batch="719" error="true">%         set(hPrompt,'Resize','off');</command>
<command batch="719" error="true">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="719" error="true">set(hPrompt,'name',name);</command>
<command batch="719" error="true">set(hPrompt,'NumberTitle','off');</command>
<command batch="719" error="true">set(hPrompt,'MenuBar','none');</command>
<command batch="719" error="true">set(hPrompt,'ToolBar','none');</command>
<command batch="719" error="true">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="719" error="true">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="719" error="true">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="719" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="719" error="true">'string','0','string','Select top of section',...</command>
<command batch="719" error="true">'Callback',@heightCallBack);</command>
<command batch="719" error="true">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="719" error="true">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="719" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="719" error="true">'string','0','string','Select bottom of section',...</command>
<command batch="719" error="true">'Callback',@heightCallBack);</command>
<command batch="719" error="true">% EXTEND MODEL BY</command>
<command batch="719" error="true">hExtendBy = uicontrol('style','editd','units',...</command>
<command batch="719" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="719" error="true">'string','0',...</command>
<command batch="719" error="true" execution_time="295">'Callback',@heightCallBack);</command>
<command batch="720" error="true">hPrompt = figure;</command>
<command batch="720" error="true">axis off;</command>
<command batch="720" error="true">name = 'Extend model';</command>
<command batch="720" error="true">%         set(hPrompt,'Resize','off');</command>
<command batch="720" error="true">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="720" error="true">set(hPrompt,'name',name);</command>
<command batch="720" error="true">set(hPrompt,'NumberTitle','off');</command>
<command batch="720" error="true">set(hPrompt,'MenuBar','none');</command>
<command batch="720" error="true">set(hPrompt,'ToolBar','none');</command>
<command batch="720" error="true">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="720" error="true">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="720" error="true">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="720" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="720" error="true">'string','0','string','Select top of section',...</command>
<command batch="720" error="true">'Callback',@heightCallBack);</command>
<command batch="720" error="true">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="720" error="true">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="720" error="true">'pixel','position',[15 80 300 20],...</command>
<command batch="720" error="true">'string','0','string','Select bottom of section',...</command>
<command batch="720" error="true">'Callback',@heightCallBack);</command>
<command batch="720" error="true">% EXTEND MODEL BY</command>
<command batch="720" error="true">hExtendBy = uicontrol('style','editd','units',...</command>
<command batch="720" error="true">'pixel','position',[170 170 20 20],...</command>
<command batch="720" error="true">'string','0',...</command>
<command batch="720" error="true" execution_time="291">'Callback',@heightCallBack);</command>
<command batch="721" error="true">hPrompt = figure;</command>
<command batch="721" error="true">axis off;</command>
<command batch="721" error="true">name = 'Extend model';</command>
<command batch="721" error="true">%         set(hPrompt,'Resize','off');</command>
<command batch="721" error="true">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="721" error="true">set(hPrompt,'name',name);</command>
<command batch="721" error="true">set(hPrompt,'NumberTitle','off');</command>
<command batch="721" error="true">set(hPrompt,'MenuBar','none');</command>
<command batch="721" error="true">set(hPrompt,'ToolBar','none');</command>
<command batch="721" error="true">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="721" error="true">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="721" error="true">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="721" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="721" error="true">'string','0','string','Select top of section',...</command>
<command batch="721" error="true">'Callback',@heightCallBack);</command>
<command batch="721" error="true">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="721" error="true">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="721" error="true">'pixel','position',[15 80 300 20],...</command>
<command batch="721" error="true">'string','0','string','Select bottom of section',...</command>
<command batch="721" error="true">'Callback',@heightCallBack);</command>
<command batch="721" error="true">% EXTEND MODEL BY</command>
<command batch="721" error="true">hExtendBy = uicontrol('style','editd','units',...</command>
<command batch="721" error="true">'pixel','position',[15 110 300 20],...</command>
<command batch="721" error="true">'string','0',...</command>
<command batch="721" error="true" execution_time="305">'Callback',@heightCallBack);</command>
<command batch="722">hPrompt = figure;</command>
<command batch="722">axis off;</command>
<command batch="722">name = 'Extend model';</command>
<command batch="722">%         set(hPrompt,'Resize','off');</command>
<command batch="722">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="722">set(hPrompt,'name',name);</command>
<command batch="722">set(hPrompt,'NumberTitle','off');</command>
<command batch="722">set(hPrompt,'MenuBar','none');</command>
<command batch="722">set(hPrompt,'ToolBar','none');</command>
<command batch="722">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="722">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="722">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="722">'pixel','position',[15 50 300 20],...</command>
<command batch="722">'string','0','string','Select top of section',...</command>
<command batch="722">'Callback',@heightCallBack);</command>
<command batch="722">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="722">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="722">'pixel','position',[15 80 300 20],...</command>
<command batch="722">'string','0','string','Select bottom of section',...</command>
<command batch="722">'Callback',@heightCallBack);</command>
<command batch="722">% EXTEND MODEL BY</command>
<command batch="722">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="722">'pixel','position',[15 110 300 20],...</command>
<command batch="722">'string','0',...</command>
<command batch="722" execution_time="234">'Callback',@heightCallBack);</command>
<command batch="723" error="true">hPrompt = figure;</command>
<command batch="723" error="true">axis off;</command>
<command batch="723" error="true">name = 'Extend model';</command>
<command batch="723" error="true">%         set(hPrompt,'Resize','off');</command>
<command batch="723" error="true">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="723" error="true">set(hPrompt,'name',name);</command>
<command batch="723" error="true">set(hPrompt,'NumberTitle','off');</command>
<command batch="723" error="true">set(hPrompt,'MenuBar','none');</command>
<command batch="723" error="true">set(hPrompt,'ToolBar','none');</command>
<command batch="723" error="true">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="723" error="true">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="723" error="true">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="723" error="true">'pixel','position',[15 80 300 20],...</command>
<command batch="723" error="true">'string','0','string','Select top of section',...</command>
<command batch="723" error="true">'Callback',@heightCallBack);</command>
<command batch="723" error="true">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="723" error="true">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="723" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="723" error="true">'string','0','string','Select bottom of section',...</command>
<command batch="723" error="true">'Callback',@heightCallBack);</command>
<command batch="723" error="true">% EXTEND MODEL BY</command>
<command batch="723" error="true">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="723" error="true">'pixel','position',[15 30 300 20],...</command>
<command batch="723" error="true">'string','0',...</command>
<command batch="723" error="true">'Callback',@heightCallBack);</command>
<command batch="723" error="true">% GET MODEL INFORMATION</command>
<command batch="723" error="true">data = model.data; % unit</command>
<command batch="723" error="true">sliceHeights = model.sliceHeights; % unit</command>
<command batch="723" error="true">extend = model.guiExtend; % unit</command>
<command batch="723" error="true">point1 = model.guiExtendPoint1(3); % unit</command>
<command batch="723" error="true">point2 = model.guiExtendPoint2(3); % unit</command>
<command batch="723" error="true">numSlicePoints = model.numSlicePoints; % points</command>
<command batch="723" error="true" execution_time="890">numSlice = length(sliceHeights); % points</command>
<command batch="724">hPrompt = figure;</command>
<command batch="724">axis off;</command>
<command batch="724">name = 'Extend model';</command>
<command batch="724">%         set(hPrompt,'Resize','off');</command>
<command batch="724">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="724">set(hPrompt,'name',name);</command>
<command batch="724">set(hPrompt,'NumberTitle','off');</command>
<command batch="724">set(hPrompt,'MenuBar','none');</command>
<command batch="724">set(hPrompt,'ToolBar','none');</command>
<command batch="724">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="724">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="724">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="724">'pixel','position',[15 80 300 20],...</command>
<command batch="724">'string','0','string','Select top of section',...</command>
<command batch="724">'Callback',@heightCallBack);</command>
<command batch="724">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="724">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="724">'pixel','position',[15 50 300 20],...</command>
<command batch="724">'string','0','string','Select bottom of section',...</command>
<command batch="724">'Callback',@heightCallBack);</command>
<command batch="724">% EXTEND MODEL BY</command>
<command batch="724">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="724">'pixel','position',[15 30 300 20],...</command>
<command batch="724">'string','0',...</command>
<command batch="724" execution_time="234">'Callback',@heightCallBack);</command>
<command batch="725">hPrompt = figure;</command>
<command batch="725">axis off;</command>
<command batch="725">name = 'Extend model';</command>
<command batch="725">%         set(hPrompt,'Resize','off');</command>
<command batch="725">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="725">set(hPrompt,'name',name);</command>
<command batch="725">set(hPrompt,'NumberTitle','off');</command>
<command batch="725">set(hPrompt,'MenuBar','none');</command>
<command batch="725">set(hPrompt,'ToolBar','none');</command>
<command batch="725">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="725">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="725">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="725">'pixel','position',[15 80 300 20],...</command>
<command batch="725">'string','0','string','Select top of section',...</command>
<command batch="725">'Callback',@heightCallBack);</command>
<command batch="725">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="725">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="725">'pixel','position',[15 50 300 20],...</command>
<command batch="725">'string','0','string','Select bottom of section',...</command>
<command batch="725">'Callback',@heightCallBack);</command>
<command batch="725">% EXTEND MODEL BY</command>
<command batch="725">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="725">'pixel','position',[15 10 300 20],...</command>
<command batch="725">'string','0',...</command>
<command batch="725" execution_time="234">'Callback',@heightCallBack);</command>
<command batch="726">hPrompt = figure;</command>
<command batch="726">axis off;</command>
<command batch="726">name = 'Extend model';</command>
<command batch="726">%         set(hPrompt,'Resize','off');</command>
<command batch="726">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="726">set(hPrompt,'name',name);</command>
<command batch="726">set(hPrompt,'NumberTitle','off');</command>
<command batch="726">set(hPrompt,'MenuBar','none');</command>
<command batch="726">set(hPrompt,'ToolBar','none');</command>
<command batch="726">set(hPrompt,'Position',[2738 730 329 102]);</command>
<command batch="726">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="726">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="726">'pixel','position',[15 80 300 20],...</command>
<command batch="726">'string','0','string','Select top of section',...</command>
<command batch="726">'Callback',@heightCallBack);</command>
<command batch="726">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="726">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="726">'pixel','position',[15 50 300 20],...</command>
<command batch="726">'string','0','string','Select bottom of section',...</command>
<command batch="726">'Callback',@heightCallBack);</command>
<command batch="726">% EXTEND MODEL BY</command>
<command batch="726">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="726">'pixel','position',[15 20 300 20],...</command>
<command batch="726">'string','0',...</command>
<command batch="726" execution_time="249">'Callback',@heightCallBack);</command>
<command execution_time="15">get(hPrompt,'position')</command>
<command batch="727">hPrompt = figure;</command>
<command batch="727">axis off;</command>
<command batch="727">name = 'Extend model';</command>
<command batch="727">%         set(hPrompt,'Resize','off');</command>
<command batch="727">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="727">set(hPrompt,'name',name);</command>
<command batch="727">set(hPrompt,'NumberTitle','off');</command>
<command batch="727">set(hPrompt,'MenuBar','none');</command>
<command batch="727">set(hPrompt,'ToolBar','none');</command>
<command batch="727">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="727">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="727">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="727">'pixel','position',[15 80 300 20],...</command>
<command batch="727">'string','0','string','Select top of section',...</command>
<command batch="727">'Callback',@heightCallBack);</command>
<command batch="727">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="727">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="727">'pixel','position',[15 50 300 20],...</command>
<command batch="727">'string','0','string','Select bottom of section',...</command>
<command batch="727">'Callback',@heightCallBack);</command>
<command batch="727">% EXTEND MODEL BY</command>
<command batch="727">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="727">'pixel','position',[15 20 300 20],...</command>
<command batch="727">'string','0',...</command>
<command batch="727" execution_time="234">'Callback',@heightCallBack);</command>
<command batch="728">hPrompt = figure;</command>
<command batch="728">axis off;</command>
<command batch="728">name = 'Extend model';</command>
<command batch="728">set(hPrompt,'Resize','off');</command>
<command batch="728">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="728">set(hPrompt,'name',name);</command>
<command batch="728">set(hPrompt,'NumberTitle','off');</command>
<command batch="728">set(hPrompt,'MenuBar','none');</command>
<command batch="728">set(hPrompt,'ToolBar','none');</command>
<command batch="728">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="728">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="728">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="728">'pixel','position',[15 80 300 20],...</command>
<command batch="728">'string','0','string','Select top of section',...</command>
<command batch="728">'Callback',@heightCallBack);</command>
<command batch="728">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="728">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="728">'pixel','position',[15 50 300 20],...</command>
<command batch="728">'string','0','string','Select bottom of section',...</command>
<command batch="728">'Callback',@heightCallBack);</command>
<command batch="728">% EXTEND MODEL BY</command>
<command batch="728">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="728">'pixel','position',[15 20 300 20],...</command>
<command batch="728">'string','0',...</command>
<command batch="728" execution_time="281">'Callback',@heightCallBack);</command>
<command batch="729">hPrompt = figure;</command>
<command batch="729">axis off;</command>
<command batch="729">name = 'Extend model';</command>
<command batch="729">set(hPrompt,'Resize','off');</command>
<command batch="729">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="729">set(hPrompt,'name',name);</command>
<command batch="729">set(hPrompt,'NumberTitle','off');</command>
<command batch="729">set(hPrompt,'MenuBar','none');</command>
<command batch="729">set(hPrompt,'ToolBar','none');</command>
<command batch="729">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="729">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="729">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="729">'pixel','position',[15 80 300 20],...</command>
<command batch="729">'string','0','string','Select top of section',...</command>
<command batch="729">'Callback',@heightCallBack);</command>
<command batch="729">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="729">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="729">'pixel','position',[15 50 300 20],...</command>
<command batch="729">'string','0','string','Select bottom of section',...</command>
<command batch="729">'Callback',@heightCallBack);</command>
<command batch="729">% EXTEND MODEL BY (TEXT)</command>
<command batch="729">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="729">'pixel','position',[15 20 150 20],...</command>
<command batch="729">'string','Extend by (mm):');</command>
<command batch="729">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="729">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="729">'pixel','position',[15 175 150 20],...</command>
<command batch="729">'string','0',...</command>
<command batch="729" execution_time="249">'Callback',@heightCallBack);</command>
<command batch="730">hPrompt = figure;</command>
<command batch="730">axis off;</command>
<command batch="730">name = 'Extend model';</command>
<command batch="730">set(hPrompt,'Resize','off');</command>
<command batch="730">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="730">set(hPrompt,'name',name);</command>
<command batch="730">set(hPrompt,'NumberTitle','off');</command>
<command batch="730">set(hPrompt,'MenuBar','none');</command>
<command batch="730">set(hPrompt,'ToolBar','none');</command>
<command batch="730">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="730">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="730">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="730">'pixel','position',[15 80 300 20],...</command>
<command batch="730">'string','0','string','Select top of section',...</command>
<command batch="730">'Callback',@heightCallBack);</command>
<command batch="730">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="730">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="730">'pixel','position',[15 50 300 20],...</command>
<command batch="730">'string','0','string','Select bottom of section',...</command>
<command batch="730">'Callback',@heightCallBack);</command>
<command batch="730">% EXTEND MODEL BY (TEXT)</command>
<command batch="730">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="730">'pixel','position',[15 20 150 20],...</command>
<command batch="730">'string','Extend by (mm):');</command>
<command batch="730">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="730">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="730">'pixel','position',[165 20 150 20],...</command>
<command batch="730">'string','0',...</command>
<command batch="730" execution_time="265">'Callback',@heightCallBack);</command>
<command batch="731">hPrompt = figure;</command>
<command batch="731">axis off;</command>
<command batch="731">name = 'Extend model';</command>
<command batch="731">set(hPrompt,'Resize','off');</command>
<command batch="731">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="731">set(hPrompt,'name',name);</command>
<command batch="731">set(hPrompt,'NumberTitle','off');</command>
<command batch="731">set(hPrompt,'MenuBar','none');</command>
<command batch="731">set(hPrompt,'ToolBar','none');</command>
<command batch="731">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="731">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="731">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="731">'pixel','position',[15 80 300 20],...</command>
<command batch="731">'string','0','string','Select top of section',...</command>
<command batch="731">'Callback',@heightCallBack);</command>
<command batch="731">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="731">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="731">'pixel','position',[15 50 290 20],...</command>
<command batch="731">'string','0','string','Select bottom of section',...</command>
<command batch="731">'Callback',@heightCallBack);</command>
<command batch="731">% EXTEND MODEL BY (TEXT)</command>
<command batch="731">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="731">'pixel','position',[15 20 140 20],...</command>
<command batch="731">'string','Extend by (mm):');</command>
<command batch="731">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="731">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="731">'pixel','position',[165 20 150 20],...</command>
<command batch="731">'string','0',...</command>
<command batch="731" execution_time="250">'Callback',@heightCallBack);</command>
<command batch="732">hPrompt = figure;</command>
<command batch="732">axis off;</command>
<command batch="732">name = 'Extend model';</command>
<command batch="732">set(hPrompt,'Resize','off');</command>
<command batch="732">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="732">set(hPrompt,'name',name);</command>
<command batch="732">set(hPrompt,'NumberTitle','off');</command>
<command batch="732">set(hPrompt,'MenuBar','none');</command>
<command batch="732">set(hPrompt,'ToolBar','none');</command>
<command batch="732">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="732">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="732">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="732">'pixel','position',[15 80 300 20],...</command>
<command batch="732">'string','0','string','Select top of section',...</command>
<command batch="732">'Callback',@heightCallBack);</command>
<command batch="732">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="732">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="732">'pixel','position',[15 50 300 20],...</command>
<command batch="732">'string','0','string','Select bottom of section',...</command>
<command batch="732">'Callback',@heightCallBack);</command>
<command batch="732">% EXTEND MODEL BY (TEXT)</command>
<command batch="732">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="732">'pixel','position',[15 20 140 20],...</command>
<command batch="732">'string','Extend by (mm):');</command>
<command batch="732">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="732">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="732">'pixel','position',[165 20 140 20],...</command>
<command batch="732">'string','0',...</command>
<command batch="732" execution_time="265">'Callback',@heightCallBack);</command>
<command batch="733">hPrompt = figure;</command>
<command batch="733">axis off;</command>
<command batch="733">name = 'Extend model';</command>
<command batch="733">set(hPrompt,'Resize','off');</command>
<command batch="733">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="733">set(hPrompt,'name',name);</command>
<command batch="733">set(hPrompt,'NumberTitle','off');</command>
<command batch="733">set(hPrompt,'MenuBar','none');</command>
<command batch="733">set(hPrompt,'ToolBar','none');</command>
<command batch="733">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="733">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="733">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="733">'pixel','position',[15 80 300 20],...</command>
<command batch="733">'string','0','string','Select top of section',...</command>
<command batch="733">'Callback',@heightCallBack);</command>
<command batch="733">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="733">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="733">'pixel','position',[15 50 300 20],...</command>
<command batch="733">'string','0','string','Select bottom of section',...</command>
<command batch="733">'Callback',@heightCallBack);</command>
<command batch="733">% EXTEND MODEL BY (TEXT)</command>
<command batch="733">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="733">'pixel','position',[15 20 140 20],...</command>
<command batch="733">'string','Extend by (mm):');</command>
<command batch="733">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="733">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="733">'pixel','position',[175 20 140 20],...</command>
<command batch="733">'string','0',...</command>
<command batch="733" execution_time="265">'Callback',@heightCallBack);</command>
<command batch="734" error="true" execution_time="192291" repeat="4">templateLiner</command>
<command batch="734" error="true" execution_time="234419">templateLiner</command>
<command batch="735" execution_time="38416" repeat="3">templateLiner</command>
</session>
<session>
<command time_stamp="15143cd93ea">%-- 11/26/2015 7:38 AM --%</command>
<command error="true" execution_time="78" repeat="2">figs2tabs</command>
<command execution_time="251">h1 = figure;</command>
<command execution_time="62">h2 = figure;</command>
<command error="true" execution_time="188">figs2tabs([h1, h2])</command>
<command batch="736" error="true">f1 = figure('Name','Sin Wave');</command>
<command batch="736" error="true">plot(sin(1:100));</command>
<command batch="736" error="true">f2 = figure('Name','Random Points');</command>
<command batch="736" error="true">plot(magic(5))</command>
<command batch="736" error="true">f3 = msgbox('A message box');</command>
<command batch="736" error="true" execution_time="18043">tabbedFig = figs2tabs([f1,f2,f3])</command>
<command execution_time="1077">close all</command>
<command batch="737" error="true">f1 = figure('Name','Sin Wave');</command>
<command batch="737" error="true">plot(sin(1:100));</command>
<command batch="737" error="true">f2 = figure('Name','Random Points');</command>
<command batch="737" error="true">plot(magic(5))</command>
<command batch="737" error="true">f3 = msgbox('A message box');</command>
<command batch="737" error="true" execution_time="611">tabbedFig = figs2tabs([f1,f2,f3])</command>
<command error="true" execution_time="780">init_figure</command>
<command batch="738" repeat="4">f1 = figure('Name','Sin Wave');</command>
<command batch="738">plot(sin(1:100));</command>
<command batch="738">f2 = figure('Name','Random Points');</command>
<command batch="738">plot(magic(5))</command>
<command batch="738">f3 = msgbox('A message box');</command>
<command batch="738" execution_time="1765">tabbedFig = figs2tabs([f1,f2,f3])</command>
<command batch="739" error="true">1 = figure('Name','Sin Wave');</command>
<command batch="739" error="true" execution_time="31">plot(sin(1:100));</command>
<command batch="740">f1 = figure('Name','Sin Wave');</command>
<command batch="740" execution_time="78">plot(sin(1:100));</command>
<command execution_time="110">figs2tabs([f1])</command>
<command batch="741" error="true" execution_time="83047" repeat="3">templateLiner</command>
<command batch="741" error="true" execution_time="87034">clear all; close all;</command>
<command execution_time="31">close all</command>
<command execution_time="125">deploytool</command>
<command error="true" execution_time="54348">mcc -C -W cpplib:libmyadd2 -T link:lib myadd2.m (-C option is needed to generate .ctf file)</command>
<command execution_time="94" repeat="2">deploytool</command>
<command batch="742">mcc -C -W cpplib:libmyadd2 -T link:lib myadd2.m</command>
</session>
<session>
<command time_stamp="151449ddef6">%-- 11/26/2015 11:26 AM --%</command>
<command execution_time="5496">mcc -C -W cpplib:libmyadd2 -T link:lib myadd2.m</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command execution_time="184165">mcc -C -W cpplib:libmyadd2 -T link:lib myadd2.m</command>
</session>
<session>
<command time_stamp="15146da3a6e">%-- 11/26/2015 9:51 PM --%</command>
<command batch="743" error="true">f1 = figure('Name','Sin Wave');</command>
<command batch="743" error="true">plot(sin(1:100));</command>
<command batch="743" error="true">f2 = figure('Name','Random Points');</command>
<command batch="743" error="true">plot(magic(5))</command>
<command batch="743" error="true">f3 = msgbox('A message box');</command>
<command batch="743" error="true" execution_time="10706">tabbedFig = figs2tabs([f1,f2,f3])</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command batch="744">f1 = figure('Name','Sin Wave');</command>
<command batch="744">plot(sin(1:100));</command>
<command batch="744">f2 = figure('Name','Random Points');</command>
<command batch="744">plot(magic(5))</command>
<command batch="744">f3 = msgbox('A message box');</command>
<command batch="744" execution_time="905">tabbedFig = figs2tabs([f1,f2,f3])</command>
<command execution_time="31">tabbedFig</command>
<command execution_time="78">f1</command>
<command execution_time="16">f2</command>
<command execution_time="15">f3</command>
<command error="true" execution_time="491">guiAndTabInfo</command>
<command execution_time="206" repeat="2">myadd2</command>
<command error="true" execution_time="440" repeat="2">callbackexample</command>
</session>
<session>
<command time_stamp="15146f465a4">%-- 11/26/2015 10:20 PM --%</command>
<command error="true" execution_time="455" repeat="2">callbackexample</command>
<command batch="745" error="true">%% A TabPanel Example</command>
<command batch="745" error="true">% This example shows how to use tabs within a layout. It also shows how to</command>
<command batch="745" error="true">% use the TabPanel Callback property to update other GUI elements when the</command>
<command batch="745" error="true">% visible tab is changed.</command>
<command batch="745" error="true">%</command>
<command batch="745" error="true">% Copyright 2009-2013 The MathWorks, Inc.</command>
<command batch="745" error="true">%% Open the window</command>
<command batch="745" error="true">% Open a new figure window and remove the toolbar and menus</command>
<command batch="745" error="true">window = figure( 'Name', 'A TabPanel example', ...</command>
<command batch="745" error="true">'MenuBar', 'none', ...</command>
<command batch="745" error="true">'Toolbar', 'none', ...</command>
<command batch="745" error="true">'NumberTitle', 'off' );</command>
<command batch="745" error="true">%% Create the layout</command>
<command batch="745" error="true">% The layout involves two panels side by side. This is done using a</command>
<command batch="745" error="true">% flexible horizontal box. The left-hand side is filled with a standard</command>
<command batch="745" error="true">% panel and the right-hand side with some tabs.</command>
<command batch="745" error="true">hbox = uix.HBoxFlex('Parent', window, 'Spacing', 3);</command>
<command batch="745" error="true">panel = uix.Panel( ...</command>
<command batch="745" error="true">'Parent', hbox, ...</command>
<command batch="745" error="true">'Padding', 5, ...</command>
<command batch="745" error="true">'Title', 'Left' );</command>
<command batch="745" error="true">tabpanel = uix.TabPanel( 'Parent', ...</command>
<command batch="745" error="true">hbox, ...</command>
<command batch="745" error="true">'Padding', 0);</command>
<command batch="745" error="true">%% Add a list on the left</command>
<command batch="745" error="true">% Note that we link the callbacks from the list to the tab selection and</command>
<command batch="745" error="true">% the tab callback to the list such that they are kept in sync.</command>
<command batch="745" error="true">panellist = uicontrol( 'Style', 'list', ...</command>
<command batch="745" error="true">'Parent', panel, ...</command>
<command batch="745" error="true">'String', {'1', '2', '3'}, ...</command>
<command batch="745" error="true">'BackgroundColor', 'w', ...</command>
<command batch="745" error="true">'Callback', @(a,b) set( tabpanel, 'Selection', get( a, 'Value' ) ) );</command>
<command batch="745" error="true">set( tabpanel, 'SelectionChangeCallback', @(a,b) set( panellist, 'Value', b.NewValue ) );</command>
<command batch="745" error="true">%% Create some contents</command>
<command batch="745" error="true">% Each tab is filled with a list box showing some numbers</command>
<command batch="745" error="true">htab1 = uix.Panel( 'Parent', tabpanel, 'Padding', 5, 'Title', '1');</command>
<command batch="745" error="true">uicontrol( 'Style', 'listbox', 'Parent', htab1, ...</command>
<command batch="745" error="true">'String', {'1', '1', '1'}, ...</command>
<command batch="745" error="true">'BackgroundColor', 'w' );</command>
<command batch="745" error="true">htab2 = uix.Panel( 'Parent', tabpanel, 'Padding', 5, 'Title', '2');</command>
<command batch="745" error="true">uicontrol( 'Style', 'listbox', 'Parent', htab2, ...</command>
<command batch="745" error="true">'String', {'2', '2', '2'}, ...</command>
<command batch="745" error="true">'BackgroundColor', 'w' );</command>
<command batch="745" error="true">htab3 = uix.Panel( 'Parent', tabpanel, 'Padding', 5, 'Title', '3');</command>
<command batch="745" error="true">uicontrol( 'Style', 'listbox', 'Parent', htab3, ...</command>
<command batch="745" error="true">'String', {'3', '3', '3'}, ...</command>
<command batch="745" error="true">'BackgroundColor', 'w' );</command>
<command batch="745" error="true">%% Update the tab titles</command>
<command batch="745" error="true">tabpanel.TabTitles = {'1', '2', '3'};</command>
<command batch="745" error="true">%% Show the first tab</command>
<command batch="745" error="true" execution_time="2318">tabpanel.Selection = 1;</command>
<command error="true" execution_time="199">myadd2</command>
<command execution_time="63" repeat="2">main</command>
</session>
<session>
<command time_stamp="151470de672">%-- 11/26/2015 10:47 PM --%</command>
<command execution_time="254">main</command>
<command error="true" execution_time="370">jFrame.dispose()</command>
</session>
<session>
<command time_stamp="1514aad9c62">%-- 11/27/2015 3:41 PM --%</command>
<command execution_time="152">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD');</command>
<command error="true" execution_time="200" repeat="4">main</command>
</session>
<session>
<command time_stamp="1514ad8edba">%-- 11/27/2015 4:28 PM --%</command>
<command execution_time="110" repeat="2">main</command>
<command execution_time="737">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="260" repeat="5">main</command>
<command error="true" execution_time="1206">foler</command>
<command execution_time="20" repeat="2">folder</command>
<command execution_time="60">javaaddpath([folder '\ContactEditor.jar']);</command>
<command error="true" execution_time="692">jFrame = contacteditor.JavaWindow();</command>
<command error="true" execution_time="30">[folder '\ContactEditor.jar'])</command>
<command execution_time="20">[folder '\ContactEditor.jar']</command>
<command execution_time="70">javaaddpath([folder '\ContactEditor.jar']);</command>
<command error="true" execution_time="390">contacteditor.JavaWindow()</command>
<command error="true" execution_time="380">examplewindow.JavaWindow()</command>
<command execution_time="240">main</command>
<command execution_time="355">examplewindow.JavaWindow()</command>
<command execution_time="515">main</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command error="true" execution_time="140" repeat="2">main</command>
<command execution_time="125">javaclasspath('-dynamic')</command>
<command execution_time="47">javaclasspath</command>
<command execution_time="249" repeat="2">main</command>
<command error="true" execution_time="335">jFrame.dispose()</command>
<command error="true" execution_time="331">JFrame.dispose()</command>
<command error="true" execution_time="315">JFrame.canvas2()</command>
<command error="true" execution_time="315">jFrame.canvas2()</command>
</session>
<session>
<command time_stamp="1514bba11aa">%-- 11/27/2015 8:34 PM --%</command>
<command execution_time="2732">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="397">main</command>
<command error="true" execution_time="419">jFrame.dispose()</command>
<command error="true" execution_time="109">main</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command error="true" execution_time="203">main</command>
</session>
<session>
<command time_stamp="1514bc63d1b">%-- 11/27/2015 8:47 PM --%</command>
<command execution_time="733">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command error="true" execution_time="187" repeat="3">main</command>
<command error="true" execution_time="1196">jFrame</command>
<command execution_time="406">main</command>
<command error="true" execution_time="62">jFrame.getOpenFileButton</command>
<command execution_time="211">main</command>
</session>
<session>
<command time_stamp="1514be413c7">%-- 11/27/2015 9:20 PM --%</command>
<command execution_time="228">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="290">main</command>
<command error="true" execution_time="343">web('https://github.com/fosnigtr/limbRevolutionCAD/wiki')</command>
<command batch="746" error="true">url = 'http://www.mathworks.com';</command>
<command batch="746" error="true" execution_time="47">web(url)</command>
</session>
<session>
<command time_stamp="1514bfc4f8a">%-- 11/27/2015 9:46 PM --%</command>
<command batch="747" error="true">url = 'http://www.mathworks.com';</command>
<command batch="747" error="true" execution_time="250">web(url)</command>
<command execution_time="10614">web</command>
<command execution_time="31">url = 'http://www.mathworks.com';</command>
<command error="true" execution_time="47">web(url,'-browswer');</command>
<command batch="748">url = 'http://www.mathworks.com';</command>
<command batch="748" execution_time="1466">web(url,'-browser')</command>
<command execution_time="31">url = 'https://github.com/fosnigtr/limbRevolutionCAD/wiki';</command>
<command execution_time="203">web(url,'-browser')</command>
<command execution_time="453">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="313">main</command>
</session>
<session>
<command time_stamp="1514e226a47">%-- 11/28/2015 7:47 AM --%</command>
<command execution_time="455">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="453">main</command>
</session>
<session>
<command time_stamp="1514e3be897">%-- 11/28/2015 8:15 AM --%</command>
<command batch="749">% add and remove nodes from the treeModel and update the display</command>
<command batch="749">import javax.swing.*</command>
<command batch="749">import javax.swing.tree.*;</command>
<command batch="749">% figure window</command>
<command batch="749">f = figure('Units', 'normalized');</command>
<command batch="749">b1 = uicontrol( 'string','add Node', ...</command>
<command batch="749">'units' , 'normalized', ...</command>
<command batch="749">'position', [0 0.5 0.5 0.5], ...</command>
<command batch="749">'callback', @b1_cb);</command>
<command batch="749">b2 = uicontrol( 'string','remove Node', ...</command>
<command batch="749">'units' , 'normalized', ...</command>
<command batch="749">'position', [0.5 0.5 0.5 0.5], ...</command>
<command batch="749" execution_time="811">'callback', @b2_cb);</command>
<command batch="750" error="true">%[I,map] = imread([matlab_work_path, '/checkedIcon.gif']);</command>
<command batch="750" error="true">[I,map] = checkedIcon;</command>
<command batch="750" error="true" execution_time="1883">javaImage_checked = im2java(I,map);</command>
<command execution_time="493">uitree_demo</command>
<command execution_time="110">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="281">main</command>
<command execution_time="32">rootNode = uitreenode('v0','root', 'File List', [], 0);</command>
</session>
<session>
<command time_stamp="1514e660362">%-- 11/28/2015 9:01 AM --%</command>
<command execution_time="407">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="297">main</command>
</session>
<session>
<command time_stamp="1514e6e187b">%-- 11/28/2015 9:10 AM --%</command>
<command execution_time="743">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="417" repeat="2">main</command>
<command execution_time="39" repeat="2">node</command>
<command execution_time="19">mtree = handle(jFrame.getDesignTree());</command>
<command execution_time="25">mtree</command>
<command error="true" execution_time="234">mtree.setRoot(node);</command>
<command execution_time="172">main</command>
</session>
<session>
<command time_stamp="15158852e26">%-- 11/30/2015 8:11 AM --%</command>
<command execution_time="161">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="564">main</command>
</session>
<session>
<command time_stamp="15158e16b5b">%-- 11/30/2015 9:52 AM --%</command>
<command error="true" execution_time="4767" repeat="2">RandDCode</command>
<command batch="751">hPrompt = figure;</command>
<command batch="751">axis off;</command>
<command batch="751">name = 'Extend model';</command>
<command batch="751">set(hPrompt,'Resize','off');</command>
<command batch="751">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="751">set(hPrompt,'name',name);</command>
<command batch="751">set(hPrompt,'NumberTitle','off');</command>
<command batch="751">set(hPrompt,'MenuBar','none');</command>
<command batch="751">set(hPrompt,'ToolBar','none');</command>
<command batch="751">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="751">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="751">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="751">'pixel','position',[15 80 300 20],...</command>
<command batch="751">'string','0','string','Select top of section',...</command>
<command batch="751">'Callback',@topCallBack);</command>
<command batch="751">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="751">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="751">'pixel','position',[15 50 300 20],...</command>
<command batch="751">'string','0','string','Select bottom of section',...</command>
<command batch="751">'Callback',@bottomCallBack);</command>
<command batch="751">% EXTEND MODEL BY (TEXT)</command>
<command batch="751">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="751">'pixel','position',[15 20 140 20],...</command>
<command batch="751">'string','Extend by (mm):');</command>
<command batch="751">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="751">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="751">'pixel','position',[175 20 140 20],...</command>
<command batch="751">'string','0',...</command>
<command batch="751" execution_time="15614">'Callback',@extendByCallBack);</command>
<command execution_time="1232">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="2389">main</command>
</session>
<session>
<command time_stamp="1515a820ce9">%-- 11/30/2015 5:27 PM --%</command>
<command execution_time="2233">main</command>
<command execution_time="4448">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="655">main</command>
<command error="true" execution_time="31">handle(jFrame.dispose())</command>
<command error="true" execution_time="31">h = handle(jFrame.dispose());</command>
<command error="true" execution_time="31">h = handle(jFrame.dispose(),'CallbackProperties');</command>
<command execution_time="16">jFrame.dispose()</command>
</session>
<session>
<command time_stamp="1515a85dd7b">%-- 11/30/2015 5:31 PM --%</command>
<command error="true" execution_time="1640" repeat="2">contextMenuExample</command>
<command batch="752" repeat="2">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="752">hUI = uicontrol('style','text','units',...</command>
<command batch="752">'pixel','position',[15 80 300 20],...</command>
<command batch="752" execution_time="156">'string','0','string','test');</command>
<command batch="753">hPrompt = figure;</command>
<command batch="753">axis off;</command>
<command batch="753">name = 'Extend model';</command>
<command batch="753">set(hPrompt,'Resize','off');</command>
<command batch="753">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="753">set(hPrompt,'name',name);</command>
<command batch="753">set(hPrompt,'NumberTitle','off');</command>
<command batch="753">set(hPrompt,'MenuBar','none');</command>
<command batch="753">set(hPrompt,'ToolBar','none');</command>
<command batch="753">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="753">set(hPrompt,'WindowButtonMotionFcn',@mouseMove);</command>
<command batch="753">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="753">hUI = uicontrol('style','text','units',...</command>
<command batch="753">'pixel','position',[15 80 300 20],...</command>
<command batch="753" execution_time="281">'string','0','string','test');</command>
<command batch="754">hPrompt = figure;</command>
<command batch="754">axis off;</command>
<command batch="754">name = 'Extend model';</command>
<command batch="754">set(hPrompt,'Resize','off');</command>
<command batch="754">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="754">set(hPrompt,'name',name);</command>
<command batch="754">set(hPrompt,'NumberTitle','off');</command>
<command batch="754">set(hPrompt,'MenuBar','none');</command>
<command batch="754">set(hPrompt,'ToolBar','none');</command>
<command batch="754">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="754">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="754">hUI = uicontrol('style','text','units',...</command>
<command batch="754">'pixel','position',[15 80 300 20],...</command>
<command batch="754" execution_time="343">'string','0','string','test');</command>
<command execution_time="187" repeat="6">contextMenuExample</command>
<command execution_time="30">[~, I] = min(1:10)</command>
<command execution_time="26079">templateLiner</command>
<command execution_time="30">model</command>
<command error="true" execution_time="823">[~,~,z,~] = getCord(hOjbect);</command>
<command execution_time="151" repeat="2">[~,~,z,~] = getCord(hObject);</command>
<command execution_time="30">abs([-1,-2])</command>
<command execution_time="30">norm([-1,-2])</command>
<command execution_time="30">sqrt(-1^2+-2^2)</command>
<command execution_time="28">sqrt(1^2+2^2)</command>
</session>
<session>
<command time_stamp="1515ad3b0a8">%-- 11/30/2015 6:56 PM --%</command>
<command error="true" execution_time="27934" repeat="12">templateLiner</command>
<command execution_time="150">close all</command>
<command error="true" execution_time="51845" repeat="9">templateLiner</command>
<command batch="755">hFigCoordGUI = figure;</command>
<command batch="755">axis off;</command>
<command batch="755">name = 'ML, AP and height indicator';</command>
<command batch="755">% set(hFigCoordGUI,'Resize','off');</command>
<command batch="755">set(hFigCoordGUI,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="755">set(hFigCoordGUI,'name',name);</command>
<command batch="755">set(hFigCoordGUI,'NumberTitle','off');</command>
<command batch="755">set(hFigCoordGUI,'MenuBar','none');</command>
<command batch="755">set(hFigCoordGUI,'ToolBar','none');</command>
<command batch="755">set(hFigCoordGUI,'Position',[2738 520 329 112]);</command>
<command batch="755">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="755">model.hCoordUI = uicontrol('style','text','units',...</command>
<command batch="755">'pixel','position',[15 80 300 20],...</command>
<command batch="755" execution_time="340">'string','0','string','test');</command>
<command execution_time="30">get(hFigCoordGUI,'Position')</command>
<command batch="756">hFigCoordGUI = figure;</command>
<command batch="756">axis off;</command>
<command batch="756">name = 'ML, AP and height indicator';</command>
<command batch="756">% set(hFigCoordGUI,'Resize','off');</command>
<command batch="756">set(hFigCoordGUI,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="756">set(hFigCoordGUI,'name',name);</command>
<command batch="756">set(hFigCoordGUI,'NumberTitle','off');</command>
<command batch="756">set(hFigCoordGUI,'MenuBar','none');</command>
<command batch="756">set(hFigCoordGUI,'ToolBar','none');</command>
<command batch="756">set(hFigCoordGUI,'Position',[2738 589 329 43]);</command>
<command batch="756">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="756">model.hCoordUI = uicontrol('style','text','units',...</command>
<command batch="756">'pixel','position',[15 80 300 20],...</command>
<command batch="756" execution_time="340">'string','0','string','test');</command>
<command batch="757">hFigCoordGUI = figure;</command>
<command batch="757">axis off;</command>
<command batch="757">name = 'ML, AP and height indicator';</command>
<command batch="757">% set(hFigCoordGUI,'Resize','off');</command>
<command batch="757">set(hFigCoordGUI,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="757">set(hFigCoordGUI,'name',name);</command>
<command batch="757">set(hFigCoordGUI,'NumberTitle','off');</command>
<command batch="757">set(hFigCoordGUI,'MenuBar','none');</command>
<command batch="757">set(hFigCoordGUI,'ToolBar','none');</command>
<command batch="757">set(hFigCoordGUI,'Position',[2738 589 329 43]);</command>
<command batch="757">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="757">model.hCoordUI = uicontrol('style','text','units',...</command>
<command batch="757">'pixel','position',[5 80 300 20],...</command>
<command batch="757" execution_time="447">'string','0','string','test');</command>
<command batch="758">hFigCoordGUI = figure;</command>
<command batch="758">axis off;</command>
<command batch="758">name = 'ML, AP and height indicator';</command>
<command batch="758">% set(hFigCoordGUI,'Resize','off');</command>
<command batch="758">set(hFigCoordGUI,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="758">set(hFigCoordGUI,'name',name);</command>
<command batch="758">set(hFigCoordGUI,'NumberTitle','off');</command>
<command batch="758">set(hFigCoordGUI,'MenuBar','none');</command>
<command batch="758">set(hFigCoordGUI,'ToolBar','none');</command>
<command batch="758">set(hFigCoordGUI,'Position',[2738 589 329 43]);</command>
<command batch="758">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="758">model.hCoordUI = uicontrol('style','text','units',...</command>
<command batch="758">'pixel','position',[15 5 300 20],...</command>
<command batch="758" execution_time="350">'string','0','string','test');</command>
<command batch="759">% ML, AP AND HEIGHT UI</command>
<command batch="759">hFigCoordGUI = figure;</command>
<command batch="759">axis off;</command>
<command batch="759">name = 'ML, AP and height indicator';</command>
<command batch="759">% set(hFigCoordGUI,'Resize','off');</command>
<command batch="759">set(hFigCoordGUI,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="759">set(hFigCoordGUI,'name',name);</command>
<command batch="759">set(hFigCoordGUI,'NumberTitle','off');</command>
<command batch="759">set(hFigCoordGUI,'MenuBar','none');</command>
<command batch="759">set(hFigCoordGUI,'ToolBar','none');</command>
<command batch="759">set(hFigCoordGUI,'Position',[2738 589 329 43]);</command>
<command batch="759">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="759">model.hCoordUI = uicontrol('style','text','units',...</command>
<command batch="759">'pixel','position',[15 10 300 20],...</command>
<command batch="759" execution_time="370">'string','0','string','test');</command>
<command error="true" execution_time="244751" repeat="2">templateLiner</command>
</session>
<session>
<command time_stamp="1515db09d4e">%-- 12/1/2015 8:17 AM --%</command>
<command error="true" execution_time="109">error</command>
<command execution_time="5996">errordlg('hello')</command>
<command error="true" execution_time="36649" repeat="5">templateLiner</command>
<command execution_time="47">model.LANDMARK</command>
<command execution_time="4676">templateLiner</command>
<command execution_time="15">model</command>
<command execution_time="14217" repeat="2">templateLiner</command>
<command execution_time="31">model</command>
<command batch="760">[~,~,~,idxLandMark] = getCord(hObject);</command>
<command batch="760">model.tmpLandMarks(idxLandMark:idxLandMark+model.numSlicePoints)=0;</command>
<command batch="760">set(model.handlePatch,'CData',model.highlight);</command>
<command batch="760" execution_time="272">drawnow;</command>
<command batch="761">[~,~,~,idxLandMark] = getCord(hObject);</command>
<command batch="761">model.tmpLandMarks(idxLandMark:idxLandMark+model.numSlicePoints)=0;</command>
<command batch="761">set(model.handlePatch,'CData',model.tmpLandMarks);</command>
<command batch="761" execution_time="452">drawnow;</command>
<command execution_time="16">idxLandMark</command>
<command error="true" execution_time="36356" repeat="4">templateLiner</command>
<command execution_time="47">numLandMarks</command>
<command execution_time="15">length(numLandMarks)/90</command>
<command error="true" execution_time="35678">templateLiner</command>
<command execution_time="32">size(numLandMarks)</command>
<command execution_time="16">model</command>
<command execution_time="36688" repeat="4">templateLiner</command>
<command execution_time="31" repeat="2">numLandmarks</command>
<command error="true" execution_time="21455" repeat="2">templateLiner</command>
<command execution_time="15">numLandmarks</command>
<command batch="762" error="true">case numLandmarks ~= 2</command>
<command batch="762" error="true" execution_time="78">errordlg('Choose two landmarks');</command>
<command execution_time="31">numLandmarks</command>
<command batch="763" error="true" execution_time="102728" repeat="4">templateLiner</command>
<command batch="763" error="true" execution_time="517953">datacursormode on</command>
<command batch="764" error="true">templateLiner</command>
<command batch="764" error="true" execution_time="240223">norm([1.723 49.33])</command>
<command execution_time="6505" repeat="2">templateLiner</command>
<command execution_time="31">norm(model.data(1,1:2))</command>
<command execution_time="32">norm(model.data(end,1:2))</command>
<command execution_time="31">model</command>
<command execution_time="31">5*6+1</command>
</session>
<session>
<command time_stamp="1515e413199">%-- 12/1/2015 10:55 AM --%</command>
<command error="true" execution_time="30084" repeat="4">templateLiner</command>
<command execution_time="34">model</command>
<command execution_time="18">extendBy = round(handle.Value/model.sliceHeightStep)*model.sliceHeightStep;</command>
<command batch="765">pointA = locLandmark(1);</command>
<command batch="765" execution_time="24">pointB = locLandmark(1+model.numSlicePoints);</command>
<command execution_time="19">pointA</command>
<command execution_time="23">pointB</command>
<command execution_time="224">figure; plot(locLandmark)</command>
<command batch="766">bottomOfSection = locLandmark(1);</command>
<command batch="766" execution_time="35">topOfSection = locLandmark(1+model.numSlicePoints);</command>
<command execution_time="16">orgBottom = model.data(1:bottomOfSection,:);</command>
<command execution_time="84">figure; plot(orgBottom(:,3),orgBottom(:,1))</command>
<command execution_time="31">axis equal</command>
<command error="true" execution_time="359">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="31">orgTop = model.data(topOfSection:end,:);</command>
<command execution_time="78">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="31">axis equal</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">axis equal</command>
<command batch="767">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="767" execution_time="47">orgTop = model.data(topOfSection+1:end,:);</command>
<command error="true" execution_time="112">orgTop = orgTop(:,3)+extendBy+model.sliceStep;</command>
<command execution_time="31">orgTop = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command error="true" execution_time="78">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command batch="768">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="768">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="768" execution_time="32">orgTop(:,3) = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command execution_time="78">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="16">axis equal</command>
<command execution_time="31">extendBy</command>
<command error="true" execution_time="78">handl.Value</command>
<command execution_time="15">handle.Value</command>
<command execution_time="31">handle</command>
<command batch="769">extendBy = round(str2num(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="769">bottomOfSection = locLandmark(1);</command>
<command batch="769">topOfSection = locLandmark(1+model.numSlicePoints);</command>
<command batch="769">%                 % DETERMIN THE TOP AND BOTTOM OF SECTION</command>
<command batch="769">%                 if pointA &gt; pointB</command>
<command batch="769">%                     topOfSection = pointA;</command>
<command batch="769">%                     bottomOfSection = pointB;</command>
<command batch="769">%                 elseif pointA &lt; pointB</command>
<command batch="769">%                     topOfSection = pointB;</command>
<command batch="769">%                     bottomOfSection = pointA;</command>
<command batch="769">%                 end</command>
<command batch="769">% GET SECTION BELOW AND ABOVE SECTION SELECTED TO</command>
<command batch="769">% EXTEND</command>
<command batch="769">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="769">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="769" execution_time="196">orgTop(:,3) = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command execution_time="78">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="16">axis equal</command>
<command execution_time="16">extendBy</command>
<command execution_time="16">216.4+extendBy</command>
<command execution_time="31">ans + model.sliceHeightStep</command>
<command batch="770" error="true">section = model.data(bottomOfSection:topOfSection,1:2);</command>
<command batch="770" error="true" execution_time="62">numPoints = round(extendBy/model.sliceStep);</command>
<command execution_time="15">numPoints = round(extendBy/model.sliceHeightStep);</command>
<command execution_time="15">numPoints</command>
<command execution_time="31">extendBy/model.sliceHeightStep</command>
<command execution_time="78">figure; plot(section(:,1))</command>
<command execution_time="16">axis equal</command>
<command execution_time="94">figure; plot(section(:,1))</command>
<command batch="771">tmpLen = length(section);</command>
<command batch="771">v = 1:tmpLen;</command>
<command batch="771">dx = tmpLen/numPoints;</command>
<command batch="771" execution_time="46">xq = 1:dx:tmpLen;</command>
<command batch="772" error="true">newSectionX = interp1(v,section(:,1),xq);</command>
<command batch="772" error="true">newSectionY = interp1(v,section(:,2),xq);</command>
<command batch="772" error="true" execution_time="187">newSectionZ = section(1,3):model.sliceSetp:section(1,3)+extendBy;</command>
<command execution_time="15">newSectionX = interp1(v,section(:,1),xq);</command>
<command execution_time="15">newSectionY = interp1(v,section(:,2),xq);</command>
<command batch="773" error="true">section = model.data(bottomOfSection:topOfSection,:);</command>
<command batch="773" error="true">numPoints = extendBy/model.sliceHeightStep;</command>
<command batch="773" error="true">% EXTEND SECTION</command>
<command batch="773" error="true">tmpLen = length(section);</command>
<command batch="773" error="true">v = 1:tmpLen;</command>
<command batch="773" error="true">dx = tmpLen/numPoints;</command>
<command batch="773" error="true">xq = 1:dx:tmpLen;</command>
<command batch="773" error="true">newSectionX = interp1(v,section(:,1),xq);</command>
<command batch="773" error="true">newSectionY = interp1(v,section(:,2),xq);</command>
<command batch="773" error="true" execution_time="582">newSectionZ = section(1,3):model.sliceSetp:section(1,3)+extendBy;</command>
<command execution_time="16">newSectionZ = section(1,3):model.sliceHeightStep:section(1,3)+extendBy;</command>
<command error="true" execution_time="156">figure; plot(newSectionZ,newSectionX)</command>
<command execution_time="31">newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command execution_time="16">size(newSectionZ)</command>
<command batch="774">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="774" execution_time="31">size(newSectionZ,2),1);</command>
<command execution_time="16">size(newSectionZ)</command>
<command execution_time="31">90*12</command>
<command error="true" execution_time="78">figure; plot(newSectionZ,newSectionX)</command>
<command execution_time="16">size(newSectionX)</command>
<command execution_time="16">size(xq)</command>
<command execution_time="15">size(v)</command>
<command error="true" execution_time="36423">templateLiner</command>
<command batch="775">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="775">bottomOfSection = locLandmark(1);</command>
<command batch="775" execution_time="47">topOfSection = locLandmark(1+model.numSlicePoints);</command>
<command batch="776">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="776">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="776" execution_time="47">orgTop(:,3) = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command batch="777">section = model.data(bottomOfSection:topOfSection,:);</command>
<command batch="777" execution_time="32">numPoints = extendBy/model.sliceHeightStep;</command>
<command batch="778">tmpLen = length(section);</command>
<command batch="778">v = 1:tmpLen;</command>
<command batch="778">dx = tmpLen/numPoints;</command>
<command batch="778" execution_time="47">xq = 1:dx:tmpLen;</command>
<command execution_time="16">size(xq)</command>
<command execution_time="16">tmpLen = size(section,1)/model.numSlicePoints;</command>
<command execution_time="16">tmpLen</command>
<command execution_time="31">size(section)</command>
<command execution_time="16">2071/90</command>
<command execution_time="16">topOfSection-bottomOfSection</command>
<command execution_time="31">ans / 90</command>
<command execution_time="15">2071/91</command>
<command execution_time="78">figure; plot(locLandmark)</command>
<command execution_time="16">91*2</command>
<command error="true" execution_time="449">size(locLandmar) / 90</command>
<command execution_time="16">size(locLandmark) / 90</command>
<command error="true" execution_time="400">size(locLandMark)</command>
<command execution_time="20">size(locLandmark)</command>
<command execution_time="16">180/90</command>
<command execution_time="16">90*2</command>
<command execution_time="15">topOfSection-bottomOfSection</command>
<command execution_time="31">ans/ 90</command>
<command execution_time="15">21-10</command>
<command execution_time="15">21-11</command>
<command execution_time="31">topOfSection-bottomOfSection+1</command>
<command execution_time="16">ans/90</command>
<command execution_time="32">topOfSection-bottomOfSection-1</command>
<command execution_time="31">ans / 90</command>
<command batch="779">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="779">bottomOfSection = locLandmark(1);</command>
<command batch="779" execution_time="46">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command batch="780">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="780">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="780" execution_time="59">orgTop(:,3) = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command batch="781">section = model.data(bottomOfSection:topOfSection,:);</command>
<command batch="781" execution_time="34">numPoints = extendBy/model.sliceHeightStep;</command>
<command execution_time="22">numPoints</command>
<command execution_time="16">tmpLen = size(section,1)/model.numSlicePoints;</command>
<command execution_time="31">tmpLen</command>
<command execution_time="19">size(section,1)</command>
<command execution_time="16">2162/90</command>
<command execution_time="16">2160/90</command>
<command execution_time="47">2*model.numSlicePoints</command>
<command execution_time="15">size(locLandmark)</command>
<command execution_time="16">locLandmark(end)-locLandmark(1)</command>
<command execution_time="31">2160/90</command>
<command error="true" execution_time="40">locLandmark1)</command>
<command execution_time="31">locLandmark(1)</command>
<command execution_time="15">locLandmark(end)</command>
<command execution_time="32">bottomOfSection</command>
<command execution_time="31">topOfSection</command>
<command execution_time="16">section = model.data(bottomOfSection:topOfSection,:);</command>
<command execution_time="15">size(section)</command>
<command error="true" execution_time="4320">size(1:20)</command>
<command error="true" execution_time="880">length(bottomOfSection:topOfSection)</command>
<command error="true" execution_time="30694" repeat="3">templateLiner</command>
<command batch="782">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="782">bottomOfSection = locLandmark(1);</command>
<command batch="782" execution_time="31">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command batch="783">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="783">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="783">orgTop(:,3) = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command batch="783">% GET SECTION TO EXTEND</command>
<command batch="783" execution_time="63">section = model.data(bottomOfSection:topOfSection,:);</command>
<command execution_time="16">size(section)/90</command>
<command execution_time="15">size(orgBottom)</command>
<command execution_time="31">1912/90</command>
<command execution_time="16">size(orgTop) / 90</command>
<command error="true" execution_time="5208">templateLiner</command>
<command execution_time="78">figure;</command>
<command error="true" execution_time="78">hline = line(1:10,1:10,1:10);</command>
<command execution_time="62">figure;</command>
<command execution_time="31">hline = line(1:10,1:10,1:10);</command>
<command execution_time="16">hline2 = line(sind(1:.1:360),sind(1:.1:360),sind(1:.1:360));</command>
<command error="true" execution_time="63">set(gca,'Children',hline2)</command>
<command execution_time="312">run([docroot '/techdoc/ref/examples/draw_lines']);</command>
<command error="true" execution_time="62">open([docroot '/techdoc/ref/examples/draw_lines']);</command>
<command error="true" execution_time="32">open([docroot '\techdoc\ref\examples\draw_lines']);</command>
<command execution_time="187">run([docroot '/techdoc/ref/examples/draw_lines']);</command>
<command error="true" execution_time="638" repeat="11">templateLiner</command>
<command error="true" execution_time="31">size(model.data)</command>
<command execution_time="15">model</command>
<command error="true" execution_time="644">templateLiner</command>
<command execution_time="31">model</command>
</session>
<session>
<command time_stamp="1515f3fbff8">%-- 12/1/2015 3:33 PM --%</command>
<command execution_time="9643" repeat="2">templateLiner</command>
<command execution_time="16">model</command>
<command error="true" execution_time="296">tmpData = reshape(model.data,model.numSlicePoints,model.numSliceHeights);</command>
<command execution_time="31">model</command>
</session>
<session>
<command time_stamp="1515f431045">%-- 12/1/2015 3:36 PM --%</command>
<command execution_time="8651" repeat="2">templateLiner</command>
<command error="true" execution_time="76">tmpData = reshape(model.data,model.numSlicePoints,length(model.sliceHeights));</command>
<command execution_time="16">model</command>
<command execution_time="33">90*121</command>
<command execution_time="31">tmpData = reshape(model.data,model.numSlicePoints,length(model.sliceHeights),3);</command>
<command error="true" execution_time="679">tmpdata(1:5,1:5,1)</command>
<command execution_time="15">tmpData(1:5,1:5,1)</command>
<command error="true" execution_time="295">modle.data(1,1)</command>
<command execution_time="30">model.data(1,1)</command>
<command execution_time="19">model.data(91,1)</command>
<command execution_time="34">model.data(2,1)</command>
<command error="true" execution_time="439">idxCurrentView = round(model.deltaX/model.angleStep);</command>
</session>
<session>
<command time_stamp="1515f4c27b1">%-- 12/1/2015 3:46 PM --%</command>
<command batch="784" error="true">templateLiner</command>
<command batch="784" error="true" execution_time="91231">campos</command>
<command execution_time="16015" repeat="3">templateLiner</command>
<command execution_time="16">campos</command>
<command execution_time="31">tmp</command>
<command execution_time="78">figure;</command>
<command execution_time="62">plot(campos)</command>
<command execution_time="78">figure</command>
<command execution_time="32">line(1:10,1:10)</command>
<command execution_time="78">figure</command>
<command error="true" execution_time="109">line(cat(1,campos(1),tmp(:,1)),cat(1,campos(1),tmp(:,1)),cat(1,campos(3),tmp(:,3)))</command>
<command execution_time="28">campos</command>
<command execution_time="15">line(cat(1,11.5,tmp(:,1)),cat(1,-2239,tmp(:,1)),cat(1,108.2,tmp(:,3)))</command>
<command execution_time="31">tmp</command>
<command execution_time="15">line([11.5 39.4 39.4],[-2239.8 -2239.8 -4.9],[108.2,239.3,239.3])</command>
<command execution_time="78">figure; plot([11.5 39.4 39.4],[-2239.8 -2239.8 -4.9])</command>
<command execution_time="47">hold on; plot([-2239.8 -2239.8 -4.9],[108.2,239.3,239.3])</command>
<command error="true" execution_time="31">[x y z] = campos;</command>
<command execution_time="31">pos = campos;</command>
<command execution_time="16">pos</command>
<command error="true" execution_time="745">size(v)</command>
<command error="true" execution_time="241">v</command>
<command execution_time="16">v = [x' y' z'];</command>
<command execution_time="32">size(v)</command>
</session>
<session>
<command time_stamp="1515fa1c27f">%-- 12/1/2015 5:20 PM --%</command>
<command error="true" execution_time="437474">templateLiner</command>
</session>
<session>
<command time_stamp="15162c5d160">%-- 12/2/2015 7:58 AM --%</command>
<command error="true" execution_time="108727" repeat="9">templateLiner</command>
<command execution_time="1482">main</command>
<command execution_time="163">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="614">main</command>
<command batch="785">templateLiner</command>
</session>
<session>
<command time_stamp="15163158573">%-- 12/2/2015 9:25 AM --%</command>
<command batch="786" error="true">templateLiner</command>
<command batch="786" error="true">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command batch="786" error="true" execution_time="240496">main</command>
<command execution_time="6430">templateLiner</command>
<command execution_time="51">campos</command>
<command execution_time="15">tmp</command>
<command execution_time="23">campos</command>
<command execution_time="22">tmp</command>
</session>
<session>
<command time_stamp="15163662c4e">%-- 12/2/2015 10:53 AM --%</command>
<command execution_time="12">ones(10,10)-ones(10,10)</command>
<command error="true" execution_time="988">ones(5,5,2)-one(5,5)</command>
<command error="true" execution_time="32">ones(5,5,2)-ones(5,5)</command>
<command error="true" execution_time="31">bsxfun(@minus,ones(5,5,2)-ones(5,5))</command>
<command execution_time="16">bsxfun(@minus,ones(5,5,2),ones(5,5))</command>
<command execution_time="16">foo = ans;</command>
<command execution_time="31">size(foo)</command>
<command execution_time="16">foo(5,1,1) = 100;</command>
<command execution_time="31">max(foo)</command>
<command error="true" execution_time="16">max(:)</command>
<command execution_time="32">max(foo(:))</command>
<command execution_time="15">[a b] = max(foo(:))</command>
<command batch="787">M = randn(10,10,10,10);</command>
<command batch="787">[C,I] = max(M(:));</command>
<command batch="787">C</command>
<command batch="787" execution_time="80">M(I)</command>
<command execution_time="63">[I1,I2,I3,I4] = ind2sub(size(M),I);</command>
<command execution_time="15">I1</command>
<command execution_time="31">I2</command>
<command execution_time="31">I3</command>
<command execution_time="31">I4</command>
<command execution_time="31">M(I1,I2,I3,I4)</command>
<command execution_time="31">ind2sub(size(M),I);</command>
<command execution_time="15">ind2sub(size(M),I)</command>
<command execution_time="16">foo = ones(5,5,5); foo(1,2,1) = 100;</command>
<command execution_time="16">foo</command>
<command execution_time="15">find(foo==100)</command>
<command execution_time="31">ind2sub(size(foo),ans)</command>
<command execution_time="31">[x y z] = ind2sub(size(foo),ans)</command>
<command execution_time="31">[x y ~] = ind2sub(size(foo),ans)</command>
<command error="true" execution_time="16981">templateLiner</command>
<command execution_time="31">size(model.data')</command>
<command execution_time="15">size(camPos)</command>
<command execution_time="47">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command batch="788">for idx = 1:101</command>
<command batch="788">a(:,:,idx) = abs(bsxfun(@minus,model.data',v(idx,:)'));</command>
<command batch="788" execution_time="281">end</command>
<command execution_time="109">c = sqrt(sum(bsxfun(@minus,a,b).^2,1));</command>
<command execution_time="31">size(c)</command>
<command execution_time="15">size(a)</command>
<command execution_time="16">size(b)</command>
<command batch="789" error="true">for idx = 1:101</command>
<command batch="789" error="true">a(:,:,idx) = sqrt(sum(bsxfun(@minus,model.data',v(idx,:)').^2));</command>
<command batch="789" error="true" execution_time="78">end</command>
<command execution_time="15">clear a</command>
<command batch="790">for idx = 1:101</command>
<command batch="790">a(:,:,idx) = sqrt(sum(bsxfun(@minus,model.data',v(idx,:)').^2));</command>
<command batch="790" execution_time="156">end</command>
<command execution_time="15">size(a)</command>
<command execution_time="78">c = sqrt(sum(bsxfun(@minus,a,b).^2,1));</command>
<command execution_time="31">size(c)</command>
<command batch="791">minC = min(c(:));</command>
<command batch="791">idxC = find(c==minC);</command>
<command batch="791" execution_time="47">[~, idxLandmark, ~] = ind2sub(size(c),idxC);</command>
<command execution_time="15">idxLandmark</command>
</session>
<session>
<command time_stamp="15163910961">%-- 12/2/2015 11:40 AM --%</command>
<command execution_time="31148" repeat="3">templateLiner</command>
<command execution_time="31">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command execution_time="16">size(b)</command>
<command execution_time="327">figure; plot(b)</command>
<command batch="792">for idx = 1:101</command>
<command batch="792">a(:,:,idx) = sqrt(sum(bsxfun(@minus,model.data',v(idx,:)').^2));</command>
<command batch="792" execution_time="156">end</command>
<command execution_time="32">size(a)</command>
<command execution_time="281">figure; imagesc(squeeze(ans))</command>
<command execution_time="78">figure; imagesc(squeeze(a))</command>
<command execution_time="78">c = sqrt(sum(bsxfun(@minus,a,b).^2,1));</command>
<command execution_time="15">size(c)</command>
<command execution_time="78">figure; imagesc(squeeze(c))</command>
<command batch="793">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command batch="793">% lastM = 1e6;</command>
<command batch="793">% for idx = 1:101</command>
<command batch="793">%         [m, loc] = min(sum(abs(bsxfun(@minus,model.data',v(idx,:)')),1));</command>
<command batch="793">%     if m &lt; lastM</command>
<command batch="793">%         lastM = m;</command>
<command batch="793">%           idxLandMark = loc;</command>
<command batch="793">%     end</command>
<command batch="793">% end</command>
<command batch="793">for idx = 1:101</command>
<command batch="793">a(:,:,idx) = sqrt(sum(bsxfun(@minus,model.data',v(idx,:)').^2));</command>
<command batch="793">end</command>
<command batch="793" execution_time="358">c = sqrt(sum(bsxfun(@minus,a,b).^2,1));</command>
<command execution_time="16">size(a)</command>
<command execution_time="22">size(b)</command>
<command execution_time="24">size(c)</command>
<command execution_time="19">foo = ones(1,5,5); foo(1,1,1) = .5;</command>
<command execution_time="31">foo</command>
<command execution_time="19">[i j k] = ind2sub(size(foo),find(foo==0.5))</command>
<command execution_time="16">foo = ones(1,5,5); foo(1,5,1) = .5;</command>
<command execution_time="31">[i j k] = ind2sub(size(foo),find(foo==0.5))</command>
<command execution_time="34">min(foo(:))</command>
</session>
<session>
<command time_stamp="15163e7569a">%-- 12/2/2015 1:14 PM --%</command>
<command execution_time="6153" repeat="4">templateLiner</command>
<command execution_time="16">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command execution_time="127">figure; plot(b)</command>
<command execution_time="31">size(b)</command>
<command batch="794">camPos = campos;</command>
<command batch="794" execution_time="35">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command execution_time="81">figure; plot(b)</command>
<command batch="795">camPos = campos;</command>
<command batch="795" execution_time="31">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command execution_time="88">figure; plot(b)</command>
<command batch="796">camPos = campos;</command>
<command batch="796" execution_time="34">b = sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1));</command>
<command execution_time="94">figure; plot(b)</command>
<command batch="797">for idx = 1:101</command>
<command batch="797">a(:,:,idx) = sqrt(sum(bsxfun(@minus,model.data',v(idx,:)').^2));</command>
<command batch="797" execution_time="168">end</command>
<command error="true" execution_time="333">size(c)</command>
<command execution_time="15">size(a)</command>
<command execution_time="31">size(b)</command>
<command batch="798">b = squeeze(sqrt(sum(bsxfun(@minus,model.data',camPos').^2,1)));</command>
<command batch="798">% lastM = 1e6;</command>
<command batch="798">% for idx = 1:101</command>
<command batch="798">%         [m, loc] = min(sum(abs(bsxfun(@minus,model.data',v(idx,:)')),1));</command>
<command batch="798">%     if m &lt; lastM</command>
<command batch="798">%         lastM = m;</command>
<command batch="798">%           idxLandMark = loc;</command>
<command batch="798">%     end</command>
<command batch="798">% end</command>
<command batch="798">for idx = 1:101</command>
<command batch="798">a(:,:,idx) = sqrt(sum(bsxfun(@minus,model.data',v(idx,:)').^2));</command>
<command batch="798">end</command>
<command batch="798" execution_time="245">a = squeeze(a);</command>
<command execution_time="27">size(a)</command>
<command execution_time="24">size(b)</command>
<command error="true" execution_time="37">c = sqrt(bsxfun(@plus,a.^2,b.^2));</command>
<command execution_time="31">c = sqrt(bsxfun(@plus,a.^2,b'.^2));</command>
<command execution_time="25">sqrt(ones(4,4))</command>
<command execution_time="49">foo = rand(5,5)</command>
<command execution_time="34">sqrt(foo)</command>
<command execution_time="16">sqrt(0.8147)</command>
</session>
<session>
<command time_stamp="15163f9333b">%-- 12/2/2015 1:34 PM --%</command>
<command execution_time="9520" repeat="2">templateLiner</command>
<command execution_time="15">size(c)</command>
<command execution_time="16">size(a)</command>
<command execution_time="31">size(b)</command>
<command execution_time="110">figure; imagesc(c)</command>
<command batch="799">minC = min(c(:));</command>
<command batch="799">idxC = find(c==minC);</command>
<command batch="799" execution_time="452">[idxLandmark,~] = ind2sub(size(c),idxC);</command>
<command execution_time="15">idxLandmark</command>
<command execution_time="94">figure; imagesc(c)</command>
<command batch="800">minC = min(c(:));</command>
<command batch="800">idxC = find(c==minC);</command>
<command batch="800" execution_time="46">[idxLandmark,~] = ind2sub(size(c),idxC);</command>
<command execution_time="31">idxLandmark</command>
</session>
<session>
<command time_stamp="15163ff1e41">%-- 12/2/2015 1:40 PM --%</command>
<command execution_time="8362" repeat="2">templateLiner</command>
<command execution_time="125">figure; imagesc(c)</command>
<command error="true" execution_time="700">idxLandmark</command>
<command execution_time="1248">[idxLandmark,~] = ind2sub(size(c),idxC);</command>
<command execution_time="16">idxLandmark</command>
<command execution_time="31">size(c)</command>
</session>
<session>
<command time_stamp="1516402a9c4">%-- 12/2/2015 1:44 PM --%</command>
<command error="true" execution_time="2409481" repeat="2">templateLiner</command>
<command batch="801">[n e f] = createIcosahedron;</command>
<command batch="801" execution_time="250">drawMesh(n, f);</command>
<command batch="802">V = [0        0         0;...</command>
<command batch="802">0.8507         0    0.5257;...</command>
<command batch="802">0.2629    0.8090    0.5257;...</command>
<command batch="802">-0.6882    0.5000    0.5257;...</command>
<command batch="802">-0.6882   -0.5000    0.5257;...</command>
<command batch="802">0.2629   -0.8090    0.5257;...</command>
<command batch="802">0.6882    0.5000    1.3764;...</command>
<command batch="802">-0.2629    0.8090    1.3764;...</command>
<command batch="802">-0.8507    0.0000    1.3764;...</command>
<command batch="802">-0.2629   -0.8090    1.3764;...</command>
<command batch="802">0.6882   -0.5000    1.3764;...</command>
<command batch="802">0         0    1.9021];</command>
<command batch="802">% faces</command>
<command batch="802">F = [1     3     2;...</command>
<command batch="802">1     4     3;...</command>
<command batch="802">1     5     4;...</command>
<command batch="802">1     6     5;...</command>
<command batch="802">1     2     6;...</command>
<command batch="802">2     3     7;...</command>
<command batch="802">3     4     8;...</command>
<command batch="802">4     5     9;...</command>
<command batch="802">5     6    10;...</command>
<command batch="802">6     2    11;...</command>
<command batch="802">7     3     8;...</command>
<command batch="802">8     4     9;...</command>
<command batch="802">9     5    10;...</command>
<command batch="802">10     6    11;...</command>
<command batch="802">11     2     7;...</command>
<command batch="802">7     8    12;...</command>
<command batch="802">8     9    12;...</command>
<command batch="802">9    10    12;...</command>
<command batch="802">10    11    12;...</command>
<command batch="802">11     7    12];</command>
<command batch="802" execution_time="374">patch('Faces',F,'Vertices',V);</command>
<command batch="803" error="true">V = [0        0         0;...</command>
<command batch="803" error="true">0.8507         0    0.5257;...</command>
<command batch="803" error="true">0.2629    0.8090    0.5257;...</command>
<command batch="803" error="true">-0.6882    0.5000    0.5257;...</command>
<command batch="803" error="true">-0.6882   -0.5000    0.5257;...</command>
<command batch="803" error="true">0.2629   -0.8090    0.5257;...</command>
<command batch="803" error="true">0.6882    0.5000    1.3764;...</command>
<command batch="803" error="true">-0.2629    0.8090    1.3764;...</command>
<command batch="803" error="true">-0.8507    0.0000    1.3764;...</command>
<command batch="803" error="true">-0.2629   -0.8090    1.3764;...</command>
<command batch="803" error="true">0.6882   -0.5000    1.3764;...</command>
<command batch="803" error="true">0         0    1.9021];</command>
<command batch="803" error="true">% faces</command>
<command batch="803" error="true">F = [1     3     2;...</command>
<command batch="803" error="true">1     4     3;...</command>
<command batch="803" error="true">1     5     4;...</command>
<command batch="803" error="true">1     6     5;...</command>
<command batch="803" error="true">1     2     6;...</command>
<command batch="803" error="true">2     3     7;...</command>
<command batch="803" error="true">3     4     8;...</command>
<command batch="803" error="true">4     5     9;...</command>
<command batch="803" error="true">5     6    10;...</command>
<command batch="803" error="true">6     2    11;...</command>
<command batch="803" error="true">7     3     8;...</command>
<command batch="803" error="true">8     4     9;...</command>
<command batch="803" error="true">9     5    10;...</command>
<command batch="803" error="true">10     6    11;...</command>
<command batch="803" error="true">11     2     7;...</command>
<command batch="803" error="true">7     8    12;...</command>
<command batch="803" error="true">8     9    12;...</command>
<command batch="803" error="true">9    10    12;...</command>
<command batch="803" error="true">10    11    12;...</command>
<command batch="803" error="true">11     7    12];</command>
<command batch="803" error="true">handlPatch = patch('Faces',F,'Vertices',V);</command>
<command batch="803" error="true">light('Style','infinite');</command>
<command batch="803" error="true">model.hLight = camlight('headlight');</command>
<command batch="803" error="true">set(handlePatch,'FaceColor',[0.870588235294118 0.623529411764706 0.0431372549019608] );</command>
<command batch="803" error="true">set(model.handlePatch,'CDataMapping','scaled');</command>
<command batch="803" error="true">set(model.handlePatch,'FaceLighting','gouraud');</command>
<command batch="803" error="true" execution_time="1477">set(model.handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="804" error="true">V = [0        0         0;...</command>
<command batch="804" error="true">0.8507         0    0.5257;...</command>
<command batch="804" error="true">0.2629    0.8090    0.5257;...</command>
<command batch="804" error="true">-0.6882    0.5000    0.5257;...</command>
<command batch="804" error="true">-0.6882   -0.5000    0.5257;...</command>
<command batch="804" error="true">0.2629   -0.8090    0.5257;...</command>
<command batch="804" error="true">0.6882    0.5000    1.3764;...</command>
<command batch="804" error="true">-0.2629    0.8090    1.3764;...</command>
<command batch="804" error="true">-0.8507    0.0000    1.3764;...</command>
<command batch="804" error="true">-0.2629   -0.8090    1.3764;...</command>
<command batch="804" error="true">0.6882   -0.5000    1.3764;...</command>
<command batch="804" error="true">0         0    1.9021];</command>
<command batch="804" error="true">% faces</command>
<command batch="804" error="true">F = [1     3     2;...</command>
<command batch="804" error="true">1     4     3;...</command>
<command batch="804" error="true">1     5     4;...</command>
<command batch="804" error="true">1     6     5;...</command>
<command batch="804" error="true">1     2     6;...</command>
<command batch="804" error="true">2     3     7;...</command>
<command batch="804" error="true">3     4     8;...</command>
<command batch="804" error="true">4     5     9;...</command>
<command batch="804" error="true">5     6    10;...</command>
<command batch="804" error="true">6     2    11;...</command>
<command batch="804" error="true">7     3     8;...</command>
<command batch="804" error="true">8     4     9;...</command>
<command batch="804" error="true">9     5    10;...</command>
<command batch="804" error="true">10     6    11;...</command>
<command batch="804" error="true">11     2     7;...</command>
<command batch="804" error="true">7     8    12;...</command>
<command batch="804" error="true">8     9    12;...</command>
<command batch="804" error="true">9    10    12;...</command>
<command batch="804" error="true">10    11    12;...</command>
<command batch="804" error="true">11     7    12];</command>
<command batch="804" error="true">handlPatch = patch('Faces',F,'Vertices',V);</command>
<command batch="804" error="true">light('Style','infinite');</command>
<command batch="804" error="true">model.hLight = camlight('headlight');</command>
<command batch="804" error="true">set(handlePatch,'FaceColor',[0.870588235294118 0.623529411764706 0.0431372549019608] );</command>
<command batch="804" error="true">set(handlePatch,'FaceLighting','gouraud');</command>
<command batch="804" error="true" execution_time="941">set(handlePatch,'EdgeColor',[0 0 0]);</command>
<command batch="805" error="true">V = [0        0         0;...</command>
<command batch="805" error="true">0.8507         0    0.5257;...</command>
<command batch="805" error="true">0.2629    0.8090    0.5257;...</command>
<command batch="805" error="true">-0.6882    0.5000    0.5257;...</command>
<command batch="805" error="true">-0.6882   -0.5000    0.5257;...</command>
<command batch="805" error="true">0.2629   -0.8090    0.5257;...</command>
<command batch="805" error="true">0.6882    0.5000    1.3764;...</command>
<command batch="805" error="true">-0.2629    0.8090    1.3764;...</command>
<command batch="805" error="true">-0.8507    0.0000    1.3764;...</command>
<command batch="805" error="true">-0.2629   -0.8090    1.3764;...</command>
<command batch="805" error="true">0.6882   -0.5000    1.3764;...</command>
<command batch="805" error="true">0         0    1.9021];</command>
<command batch="805" error="true">% faces</command>
<command batch="805" error="true">F = [1     3     2;...</command>
<command batch="805" error="true">1     4     3;...</command>
<command batch="805" error="true">1     5     4;...</command>
<command batch="805" error="true">1     6     5;...</command>
<command batch="805" error="true">1     2     6;...</command>
<command batch="805" error="true">2     3     7;...</command>
<command batch="805" error="true">3     4     8;...</command>
<command batch="805" error="true">4     5     9;...</command>
<command batch="805" error="true">5     6    10;...</command>
<command batch="805" error="true">6     2    11;...</command>
<command batch="805" error="true">7     3     8;...</command>
<command batch="805" error="true">8     4     9;...</command>
<command batch="805" error="true">9     5    10;...</command>
<command batch="805" error="true">10     6    11;...</command>
<command batch="805" error="true">11     2     7;...</command>
<command batch="805" error="true">7     8    12;...</command>
<command batch="805" error="true">8     9    12;...</command>
<command batch="805" error="true">9    10    12;...</command>
<command batch="805" error="true">10    11    12;...</command>
<command batch="805" error="true">11     7    12];</command>
<command batch="805" error="true">handlPatch = patch('Faces',F,'Vertices',V);</command>
<command batch="805" error="true">light('Style','infinite');</command>
<command batch="805" error="true">model.hLight = camlight('headlight');</command>
<command batch="805" error="true">set(handlePatch,'FaceColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="805" error="true">set(handlePatch,'FaceLighting','gouraud');</command>
<command batch="805" error="true" execution_time="941">set(handlePatch,'EdgeColor',[1 1 1]);</command>
<command batch="806">V = [0        0         0;...</command>
<command batch="806">0.8507         0    0.5257;...</command>
<command batch="806">0.2629    0.8090    0.5257;...</command>
<command batch="806">-0.6882    0.5000    0.5257;...</command>
<command batch="806">-0.6882   -0.5000    0.5257;...</command>
<command batch="806">0.2629   -0.8090    0.5257;...</command>
<command batch="806">0.6882    0.5000    1.3764;...</command>
<command batch="806">-0.2629    0.8090    1.3764;...</command>
<command batch="806">-0.8507    0.0000    1.3764;...</command>
<command batch="806">-0.2629   -0.8090    1.3764;...</command>
<command batch="806">0.6882   -0.5000    1.3764;...</command>
<command batch="806">0         0    1.9021];</command>
<command batch="806">% faces</command>
<command batch="806">F = [1     3     2;...</command>
<command batch="806">1     4     3;...</command>
<command batch="806">1     5     4;...</command>
<command batch="806">1     6     5;...</command>
<command batch="806">1     2     6;...</command>
<command batch="806">2     3     7;...</command>
<command batch="806">3     4     8;...</command>
<command batch="806">4     5     9;...</command>
<command batch="806">5     6    10;...</command>
<command batch="806">6     2    11;...</command>
<command batch="806">7     3     8;...</command>
<command batch="806">8     4     9;...</command>
<command batch="806">9     5    10;...</command>
<command batch="806">10     6    11;...</command>
<command batch="806">11     2     7;...</command>
<command batch="806">7     8    12;...</command>
<command batch="806">8     9    12;...</command>
<command batch="806">9    10    12;...</command>
<command batch="806">10    11    12;...</command>
<command batch="806">11     7    12];</command>
<command batch="806">handlePatch = patch('Faces',F,'Vertices',V);</command>
<command batch="806">light('Style','infinite');</command>
<command batch="806">model.hLight = camlight('headlight');</command>
<command batch="806">set(handlePatch,'FaceColor',[0.870588235294118 0.623529411764706 0.0431372549019608]);</command>
<command batch="806">set(handlePatch,'FaceLighting','gouraud');</command>
<command batch="806" execution_time="484">set(handlePatch,'EdgeColor',[1 1 1]);</command>
<command error="true" execution_time="63">getCord</command>
<command execution_time="109" repeat="5">drawOnSurfaceTest</command>
<command error="true" execution_time="17521">ginput</command>
<command execution_time="94" repeat="5">drawOnSurfaceTest</command>
<command error="true" execution_time="391997">templateLiner</command>
<command execution_time="312">drawOnSurfaceTest</command>
<command execution_time="63">model.axes1</command>
</session>
<session>
<command time_stamp="151688c829d">%-- 12/3/2015 10:53 AM --%</command>
<command execution_time="31">cosd(180)</command>
<command execution_time="31">cosd(90)</command>
<command execution_time="31">cosd(91)</command>
<command execution_time="16">cosd(180+90)</command>
<command execution_time="31">cosd(180+89)</command>
<command execution_time="31">cosd(180+91)</command>
<command batch="807">model.data = [0        0         0;...</command>
<command batch="807">0.8507         0    0.5257;...</command>
<command batch="807">0.2629    0.8090    0.5257;...</command>
<command batch="807">-0.6882    0.5000    0.5257;...</command>
<command batch="807">-0.6882   -0.5000    0.5257;...</command>
<command batch="807">0.2629   -0.8090    0.5257;...</command>
<command batch="807">0.6882    0.5000    1.3764;...</command>
<command batch="807">-0.2629    0.8090    1.3764;...</command>
<command batch="807">-0.8507    0.0000    1.3764;...</command>
<command batch="807">-0.2629   -0.8090    1.3764;...</command>
<command batch="807">0.6882   -0.5000    1.3764;...</command>
<command batch="807">0         0    1.9021];</command>
<command batch="807">% faces</command>
<command batch="807">model.F = [1     3     2;...</command>
<command batch="807">1     4     3;...</command>
<command batch="807">1     5     4;...</command>
<command batch="807">1     6     5;...</command>
<command batch="807">1     2     6;...</command>
<command batch="807">2     3     7;...</command>
<command batch="807">3     4     8;...</command>
<command batch="807">4     5     9;...</command>
<command batch="807">5     6    10;...</command>
<command batch="807">6     2    11;...</command>
<command batch="807">7     3     8;...</command>
<command batch="807">8     4     9;...</command>
<command batch="807">9     5    10;...</command>
<command batch="807">10     6    11;...</command>
<command batch="807">11     2     7;...</command>
<command batch="807">7     8    12;...</command>
<command batch="807">8     9    12;...</command>
<command batch="807">9    10    12;...</command>
<command batch="807">10    11    12;...</command>
<command batch="807" execution_time="218">11     7    12];</command>
<command error="true" execution_time="94">model.data(model.f)</command>
<command execution_time="31">model.data(model.F)</command>
<command execution_time="32">size(ans)</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="32">size(model.data')</command>
<command execution_time="31">model.data(model.F')</command>
<command execution_time="15">model.data(model.F',:)</command>
<command execution_time="32">size(ans)</command>
<command error="true" execution_time="1253">drawOnSurfaceTest</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="94" repeat="6">drawOnSurfaceTest</command>
<command execution_time="16">idx</command>
<command execution_time="31">model.F(idx,2)-model.F(idx,1),model.F(idx,3)-model.F(idx,1)</command>
<command execution_time="16">foo = model.data(model.F',:);</command>
<command execution_time="31">size(foo)</command>
<command execution_time="16">foo1 = reshape(foo,3,60);</command>
<command execution_time="31">foo1(:,1:3)</command>
<command execution_time="31">foo(1:3,:)</command>
<command execution_time="15">foo(1:10,:)</command>
<command execution_time="93" repeat="2">drawOnSurfaceTest</command>
<command batch="808" error="true">tmp = get(model.axes1,'currentpoint');</command>
<command batch="808" error="true">V1 = model.data(model.F(:,2),1:3)-modle.data(model.F(:,1),1:3);</command>
<command batch="808" error="true" execution_time="78">V2 = model.data(model.F(:,3),1:3)-modle.data(model.F(:,1),1:3);</command>
<command batch="809">V1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="809" execution_time="32">V2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command error="true" execution_time="472">N = cross(v1,v2,2);</command>
<command batch="810" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="810" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="810" error="true" execution_time="78">N = cross(v1,v2,2);</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command batch="811">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="811">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="811" execution_time="62">N = cross(v1,v2,2);</command>
<command error="true" execution_time="94">CFV = bsxfun(@minus,model.data',tmp(1,:));</command>
<command execution_time="31">tmp = get(model.axes1,'currentpoint');</command>
<command error="true" execution_time="63">CFV = bsxfun(@minus,model.data',tmp(1,:));</command>
<command execution_time="31">size(model.data)</command>
<command execution_time="31">size(tmp)</command>
<command execution_time="16">CFV = bsxfun(@minus,model.data',tmp(1,:)');</command>
<command error="true" execution_time="62">backFace = bsxfun(@times,N',CFV);</command>
<command execution_time="31">size(N')</command>
<command execution_time="31">size(CFV)</command>
<command execution_time="31">size(model.F)</command>
<command execution_time="32">size(model.data(model.F,:))</command>
<command execution_time="32">size(model.data(model.F(1),:))</command>
<command execution_time="15">size(model.data(model.F(:,1),:))</command>
<command execution_time="15">CFV = bsxfun(@minus,model.data(model.F(:,1))',tmp(1,:)');</command>
<command execution_time="15">backFace = bsxfun(@times,N',CFV);</command>
<command execution_time="31">size(backFace)</command>
<command error="true" execution_time="374">backFAce</command>
<command execution_time="20">backFace</command>
<command batch="812" error="true">backFaces = bsxfun(@times,N',CFV);</command>
<command batch="812" error="true">idxVerticesBackFaces = model.F(backFaces'&lt;0);</command>
<command batch="812" error="true">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="812" error="true">windowedData = model.data';</command>
<command batch="812" error="true" execution_time="47">windowedData = windowedData(idxVerticesBackFaces,:);</command>
<command execution_time="93">drawOnSurfaceTest</command>
<command batch="813" error="true">tmp = get(model.axes1,'currentpoint');</command>
<command batch="813" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="813" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="813" error="true">backFaces = bsxfun(@times,N',CFV);</command>
<command batch="813" error="true">idxVerticesBackFaces = model.F(backFaces'&lt;0);</command>
<command batch="813" error="true">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="813" error="true">windowedData = model.data';</command>
<command batch="813" error="true">windowedData = windowedData(idxVerticesBackFaces,:);   N = cross(v1,v2,2);</command>
<command batch="813" error="true" execution_time="78">CFV = bsxfun(@minus,model.data(model.F(:,1))',tmp(1,:)');</command>
<command batch="814" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="814" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="814" error="true">N = cross(v1,v2,2);</command>
<command batch="814" error="true">CFV = bsxfun(@minus,model.data(model.F(:,1))',tmp(1,:)');</command>
<command batch="814" error="true">backFaces = bsxfun(@times,N',CFV);</command>
<command batch="814" error="true">idxVerticesBackFaces = model.F(backFaces'&lt;0);</command>
<command batch="814" error="true">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="814" error="true">windowedData = model.data';</command>
<command batch="814" error="true" execution_time="125">windowedData = windowedData(idxVerticesBackFaces,:);</command>
<command execution_time="16">idxVerticesBackFaces = model.F(backFaces'&lt;0);</command>
<command execution_time="15">windowedData = model.data';</command>
<command error="true" execution_time="31">windowedData = windowedData(idxVerticesBackFaces,:);</command>
<command execution_time="32">idxVerticesBackFaces</command>
<command execution_time="16">backFaces</command>
<command execution_time="15">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command execution_time="31">backFaces</command>
<command error="true" execution_time="31">idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command batch="815">tmp = get(model.axes1,'currentpoint');</command>
<command batch="815">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="815">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="815">N = cross(v1,v2,2);</command>
<command batch="815">CFV = bsxfun(@minus,model.data(model.F(:,1))',tmp(1,:)');</command>
<command batch="815">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="815" execution_time="78">idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command execution_time="32">idxVerticesFrontFaces</command>
<command execution_time="16">model.F(1,:)</command>
<command execution_time="16">model.F(12,:)</command>
<command error="true" execution_time="32">indowedData = windowedData(idxVerticesFrontFaces,:);</command>
<command error="true" execution_time="47">windowedData = windowedData(idxVerticesFrontFaces,:);</command>
<command batch="816" error="true">windowedData = model.data';</command>
<command batch="816" error="true" execution_time="63">windowedData = windowedData(idxVerticesFrontFaces,:);</command>
<command batch="817" error="true">idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="817" error="true" execution_time="46">prod(size(idxVerticesFrontFaces)),1):</command>
<command batch="818">idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="818" execution_time="16">prod(size(idxVerticesFrontFaces)),1);</command>
<command execution_time="16">size(idxVerticesFrontFaces)</command>
<command batch="819" error="true">windowedData = model.data';</command>
<command batch="819" error="true" execution_time="31">windowedData = windowedData(idxVerticesFrontFaces,:);</command>
<command execution_time="15">idxVerticesFrontFaces</command>
<command error="true" execution_time="361">size(windowData)</command>
<command execution_time="31">size(windowedData)</command>
<command execution_time="31">windowedData = model.data(idxVerticesFrontFaces,:);</command>
<command execution_time="109" repeat="2">drawOnSurfaceTest</command>
<command error="true" execution_time="381">size(windowData)</command>
<command execution_time="31">size(windowedData)</command>
<command execution_time="31">size(v)</command>
<command execution_time="15">a(:,:,idx) = sqrt(sum(bsxfun(@minus,windowedData,v(idx,:)).^2));</command>
<command execution_time="32">a</command>
<command error="true" execution_time="376">windowData</command>
<command execution_time="31">windowedData</command>
<command execution_time="16">v(1,:)</command>
<command execution_time="16">v(1,1)-windowedData(1,1)</command>
<command error="true" execution_time="47">a(:,:,idx) = sqrt(sum(bsxfun(@minus,windowedData',v(idx,:)').^2));</command>
<command execution_time="31">sqrt(sum(bsxfun(@minus,windowedData',v(idx,:)').^2));</command>
<command execution_time="32">ans(1,:)</command>
<command error="true" execution_time="31">foo =sqrt(sum(bsxfun(@minus,windowedData',v(idx,:)').^2));</command>
<command execution_time="111">drawOnSurfaceTest</command>
<command execution_time="15">a(:,:,idx) = sqrt(sum(bsxfun(@minus,windowedData',v(idx,:)').^2));</command>
<command execution_time="31">a</command>
<command execution_time="47">m = rand(3,1); bsxfun(@minus,ones(3,4),m)</command>
<command execution_time="32">m</command>
<command execution_time="31">1 - m(1)</command>
<command execution_time="16">1-m(2)</command>
<command execution_time="16">m = rand(1,3); bsxfun(@minus,ones(4,3),m)</command>
<command execution_time="94" repeat="2">drawOnSurfaceTest</command>
<command batch="820">idxLandmark = idxVerticesFrontFaces(idx);</command>
<command batch="820">% GET CARTESIAN COORDINATES</command>
<command batch="820">x = model.data(idxLandmark,1);</command>
<command batch="820">y = model.data(idxLandmark,2);</command>
<command batch="820" execution_time="62">z = model.data(idxLandmark,3);</command>
<command execution_time="15">x</command>
<command execution_time="16">y</command>
<command execution_time="31">z</command>
<command execution_time="16">idx</command>
<command execution_time="15">minC</command>
<command execution_time="16">idxC</command>
<command execution_time="109">drawOnSurfaceTest</command>
<command error="true" execution_time="10301">templateLiner</command>
</session>
<session>
<command time_stamp="151692ffcfc">%-- 12/3/2015 1:52 PM --%</command>
<command error="true" execution_time="150252" repeat="2">templateLiner</command>
<command execution_time="299" repeat="3">drawOnSurfaceTest</command>
<command error="true" execution_time="342">axes1</command>
<command execution_time="47">model.axes1</command>
<command execution_time="281" repeat="3">drawOnSurfaceTest</command>
<command error="true" execution_time="31">modles.axes1</command>
<command execution_time="31">model.axes1</command>
<command execution_time="93" repeat="2">drawOnSurfaceTest</command>
<command error="true" execution_time="47">windowedData</command>
<command execution_time="1731">windowedData = model.data(idxVerticesFrontFaces,:);</command>
<command execution_time="31">windowedData</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command execution_time="31">windowedData1</command>
<command execution_time="31">size(windowedData1)</command>
<command execution_time="16">size(windowedData)</command>
<command execution_time="94" repeat="3">drawOnSurfaceTest</command>
<command error="true" execution_time="31">windowedData</command>
<command execution_time="16">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command execution_time="16">windowedData</command>
<command execution_time="93">drawOnSurfaceTest</command>
<command error="true" execution_time="31">windowedData</command>
<command execution_time="32">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command execution_time="31">windowedData</command>
<command execution_time="31">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command execution_time="31">windowedData</command>
<command execution_time="15" repeat="2">backFaces</command>
<command execution_time="93">drawOnSurfaceTest</command>
<command execution_time="31">backFaces</command>
<command execution_time="15" repeat="2">campos</command>
<command execution_time="93">drawOnSurfaceTest</command>
<command execution_time="16">backFaces</command>
<command execution_time="16">cosd(180)</command>
<command execution_time="21">size(N)</command>
<command execution_time="16">size(v1)</command>
<command execution_time="16">cross([0,0,1],[0,-1,0])</command>
<command execution_time="15">size(model.F)</command>
<command execution_time="15">N</command>
<command execution_time="16">model.data</command>
<command execution_time="78">drawOnSurfaceTest</command>
<command execution_time="16">N</command>
<command execution_time="15">backFaces</command>
<command execution_time="31">size(N)</command>
<command execution_time="16">size(CFV)</command>
<command execution_time="15">N'</command>
<command execution_time="15">CFV</command>
<command execution_time="15">bsxfun(@times,N',CFV)</command>
<command execution_time="31">model.data(model.F(:,1))</command>
<command execution_time="15">size(model.data)</command>
<command error="true" execution_time="269">size(F)</command>
<command execution_time="15">model.data(model.F(:,1))'</command>
<command execution_time="16">model.F(:,1)</command>
<command execution_time="16">model.data(ans,:)</command>
<command execution_time="16">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command execution_time="31">CFV</command>
<command error="true" execution_time="31">model.data(F(:,1),:)</command>
<command execution_time="16">model.data(model.F(:,1),:)</command>
<command execution_time="16">campos</command>
<command error="true" execution_time="31">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos);</command>
<command execution_time="16">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command execution_time="15">backFaces</command>
<command execution_time="16">idxVerticesBackFaces = model.F(backFaces'&lt;0,:);</command>
<command error="true" execution_time="522">idxVeticesBackFaces</command>
<command execution_time="25">idxVerticesBackFaces</command>
<command execution_time="16">idxVerticesBackFaces = model.F(backFaces&lt;0,:);</command>
<command execution_time="31">idxVerticesBackFaces</command>
<command execution_time="16">model.F</command>
<command execution_time="16">model.data</command>
<command batch="821">idxVerticesBackFaces = reshape(idxVerticesBackFaces,...</command>
<command batch="821">prod(size(idxVerticesBackFaces)),1);</command>
<command batch="821">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="821" execution_time="31">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command execution_time="15">windowedData</command>
<command execution_time="16">size(backFaces)</command>
<command execution_time="16">backFaces&lt;0</command>
<command execution_time="16">backFaces</command>
<command execution_time="16">idxVerticesBackFaces</command>
<command execution_time="15">idxVerticesBackFaces = model.F(find(backFaces&lt;0),:);</command>
<command execution_time="31">idxVerticesBackFaces</command>
<command execution_time="16">model.F</command>
<command batch="822">idxVerticesBackFaces = model.F(backFaces&gt;=0,:);</command>
<command batch="822">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="822">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="822">idxVerticesBackFaces = reshape(idxVerticesBackFaces,...</command>
<command batch="822">prod(size(idxVerticesBackFaces)),1);</command>
<command batch="822">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="822" execution_time="78">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command execution_time="16">windowedData</command>
<command execution_time="31">backFaces&lt;0</command>
<command execution_time="15">idxVerticesBackFaces = model.F(backFaces&lt;0,:);</command>
<command execution_time="15">idxVerticesBackFaces</command>
<command execution_time="31">backFaces</command>
<command execution_time="16">size(bsxfun(@times,N',CFV))</command>
<command execution_time="16">bsxfun(@times,N',CFV)</command>
<command execution_time="31">backFaces</command>
<command execution_time="16">N</command>
<command execution_time="16">CFV</command>
<command execution_time="32">size(v1)</command>
<command execution_time="31">v1</command>
<command execution_time="16">v2</command>
<command execution_time="31">cross(v1(1,:),v2(1,:))</command>
<command execution_time="32">N(1,:)</command>
<command execution_time="16">cross(v1(2,:),v2(2,:))</command>
<command execution_time="16">N(2,:)</command>
<command batch="823">CFV = bsxfun(@minus,model.data(model.F(:,2),:)',campos');</command>
<command batch="823">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="823">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="823">idxVerticesBackFaces = model.F(backFaces&lt;0,:);</command>
<command batch="823">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="823">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="823">idxVerticesBackFaces = reshape(idxVerticesBackFaces,...</command>
<command batch="823">prod(size(idxVerticesBackFaces)),1);</command>
<command batch="823">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="823" execution_time="93">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command error="true" execution_time="390">winowedData</command>
<command execution_time="20">windowedData</command>
<command execution_time="16">backFaces</command>
<command batch="824">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="824">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="824">N = cross(v1,v2,2);</command>
<command batch="824">%         N(6,3) = -1;</command>
<command batch="824">CFV = bsxfun(@minus,model.data(model.F(:,2),:)',campos');</command>
<command batch="824">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="824">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="824">idxVerticesBackFaces = model.F(backFaces&lt;0,:);</command>
<command batch="824">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="824">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="824">idxVerticesBackFaces = reshape(idxVerticesBackFaces,...</command>
<command batch="824">prod(size(idxVerticesBackFaces)),1);</command>
<command batch="824">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="824" execution_time="156">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command execution_time="16">windowedData</command>
<command execution_time="31">backFaces</command>
<command batch="825">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="825">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="825">N = cross(v1,v2,2);</command>
<command batch="825" execution_time="46">N(6,3) = -1;</command>
<command execution_time="32">N</command>
<command execution_time="78">normalizeVector3d([0 1 1])</command>
<command batch="826">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="826">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="826" execution_time="46">N = normalizeVector3d(cross(v1,v2,2));</command>
<command execution_time="32">N</command>
<command execution_time="16">v1</command>
<command execution_time="31">v2</command>
<command execution_time="16">cross(v1(end,:),v2(end,:))</command>
<command execution_time="16">cross(v1(end,:),-1.*v2(end,:))</command>
<command execution_time="16">cross(-1.*v1(end,:),v2(end,:))</command>
<command execution_time="47">-1*v1(end,:)</command>
<command batch="827">model.data = [ ...</command>
<command batch="827">0 0 0 ;</command>
<command batch="827">1 0 0 ;</command>
<command batch="827">1 1 0 ;</command>
<command batch="827">0 1 0 ;</command>
<command batch="827">0 0 1 ;</command>
<command batch="827">1 0 1 ;</command>
<command batch="827">1 1 1 ;</command>
<command batch="827">0 1 1];</command>
<command batch="827">model.F = [ ...</command>
<command batch="827">1 2 6 5 ;</command>
<command batch="827">2 3 7 6 ;</command>
<command batch="827">3 4 8 7 ;</command>
<command batch="827">4 1 5 8 ;</command>
<command batch="827">1 2 3 4 ;</command>
<command batch="827" execution_time="125">8 7 6 5];</command>
<command batch="828">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="828">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="828" execution_time="47">N = normalizeVector3d(cross(v1,v2,2));</command>
<command execution_time="15">N</command>
<command execution_time="109">drawOnSurfaceTest</command>
<command batch="829" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="829" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="829" error="true">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="829" error="true">CFV = bsxfun(@minus,model.data(model.F(:,2),:)',campos');</command>
<command batch="829" error="true">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="829" error="true">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="829" error="true">idxVerticesBackFaces = model.F(backFaces&lt;0,:);</command>
<command batch="829" error="true">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="829" error="true">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="829" error="true">idxVerticesBackFaces = reshape(idxVerticesBackFaces,...</command>
<command batch="829" error="true">prod(size(idxVerticesBackFaces)),1);</command>
<command batch="829" error="true">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="829" error="true" execution_time="1342">windowedData = model.data(idxVerticesBackFaces,:);</command>
<command batch="830" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="830" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="830" error="true" execution_time="1231">N = normalizeVector3d(cross(v1,v2,2));</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command execution_time="33">windowedData</command>
<command execution_time="15">backFaces</command>
<command execution_time="15">idxVerticesBackFaces</command>
<command error="true" execution_time="27477" repeat="3">templateLiner</command>
<command execution_time="94" repeat="2">drawOnSurfaceTest</command>
<command execution_time="31">campos</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command execution_time="16">campos</command>
<command execution_time="156">drawOnSurfaceTest</command>
<command batch="831" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="831" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="831" error="true">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="831" error="true">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="831" error="true">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="831" error="true">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="831" error="true">idxVerticesfrontFaces = model.F(fontFaces&lt;0,:);</command>
<command batch="831" error="true">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="831" error="true">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="831" error="true">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="831" error="true">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="831" error="true">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="831" error="true" execution_time="1342">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="78">drawOnSurfaceTest</command>
<command batch="832" error="true">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="832" error="true">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="832" error="true">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="832" error="true">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="832" error="true">backFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="832" error="true">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="832" error="true">idxVerticesfrontFaces = model.F(fontFaces&lt;0,:);</command>
<command batch="832" error="true">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="832" error="true">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="832" error="true">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="832" error="true">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="832" error="true">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="832" error="true" execution_time="563">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command batch="833">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="833">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="833">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="833">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="833">frontFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="833">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="833">idxVerticesfrontFaces = model.F(frontFaces&lt;0,:);</command>
<command batch="833">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="833">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="833">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="833">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="833">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="833" execution_time="140">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="31">windowedData</command>
<command batch="834">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="834">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="834">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="834">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="834">frontFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="834">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="834">idxVerticesfrontFaces = model.F(frontFaces&lt;0,:);</command>
<command batch="834">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="834">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="834">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="834">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="834">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="834" execution_time="141">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="16">windowedData = model.data(idxVerticesfrontFaces,:)</command>
<command batch="835">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="835">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="835">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="835">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="835">frontFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="835">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="835">idxVerticesfrontFaces = model.F(frontFaces&lt;0,:);</command>
<command batch="835">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="835">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="835">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="835">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="835">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="835" execution_time="140">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="16">windowedData</command>
<command batch="836">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="836">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="836">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="836">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="836">frontFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="836">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="836">idxVerticesfrontFaces = model.F(frontFaces&lt;0,:);</command>
<command batch="836">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="836">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="836">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="836">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="836">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="836" execution_time="124">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="15">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="32">windowedData</command>
<command execution_time="31" repeat="2">campos</command>
<command batch="837">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="837">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="837">N = normalizeVector3d(cross(v1,v2,2));</command>
<command batch="837">CFV = bsxfun(@minus,model.data(model.F(:,1),:)',campos');</command>
<command batch="837">frontFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="837">%         idxVerticesFrontFaces = model.F(backFaces'&lt;0,:);</command>
<command batch="837">idxVerticesfrontFaces = model.F(frontFaces&lt;0,:);</command>
<command batch="837">%         idxVerticesFrontFaces = reshape(idxVerticesFrontFaces,...</command>
<command batch="837">%             prod(size(idxVerticesFrontFaces)),1);</command>
<command batch="837">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="837">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="837">%         idxFrontFace = find(backFace &lt; 0);</command>
<command batch="837" execution_time="141">windowedData = model.data(idxVerticesfrontFaces,:);</command>
<command execution_time="16">windowedData</command>
</session>
<session>
<command time_stamp="15169c8f6c4">%-- 12/3/2015 4:39 PM --%</command>
<command execution_time="156">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD\javaGUI');</command>
<command execution_time="749">drawOnSurfaceTest</command>
<command execution_time="16" repeat="3">campos</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command execution_time="16">campos</command>
<command batch="838" execution_time="18052" repeat="2">templateLiner</command>
</session>
<session>
<command time_stamp="1516d38f642">%-- 12/4/2015 8:40 AM --%</command>
<command execution_time="37030" repeat="3">templateLiner</command>
<command execution_time="22">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command execution_time="26">extendBy</command>
<command batch="839">bottomOfSection = locLandmark(1);</command>
<command batch="839" execution_time="29">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command execution_time="405">figure; plot(locLandmark)</command>
<command execution_time="26">bottomOfSection</command>
<command execution_time="27">model.data(bottomOfSection,:)</command>
<command execution_time="26">model.data(topOfSection)</command>
<command execution_time="24">model.data(topOfSection,:)</command>
<command execution_time="25">model</command>
<command execution_time="24">bottomOfSection / 90</command>
<command execution_time="22">13 * 90</command>
<command batch="840">bottomOfSection = round(locLandmark(1)/model.numSlicePoints)...</command>
<command batch="840">*model.numSlicePoints; % round vertex index to the nearest slice index (results in 0.9 mm resolution)</command>
<command batch="840">topOfSection = round(locLandmark(2*model.numSlicePoints)/model.numSlicePoints)...</command>
<command batch="840" execution_time="47">*model.numSlicePoints;</command>
<command execution_time="15">bottomOfSection</command>
<command execution_time="16">topOfSection</command>
<command execution_time="31">6390/90</command>
<command batch="841">orgBottom = model.data(1:bottomOfSection-model.numSlicePoints,:);</command>
<command batch="841" execution_time="40">orgTop = model.data(topOfSection+model.numSlicePoints:end,:);</command>
<command execution_time="31763">templateLiner</command>
<command batch="842">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="842">bottomOfSection = locLandmark(1);</command>
<command batch="842" execution_time="45">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command execution_time="25">bottomOfSection / 90</command>
<command execution_time="24">topOfSection / 90</command>
<command error="true" execution_time="2434">locLandMark(model.numSlicePoints+1)</command>
<command execution_time="25">locLandmark(model.numSlicePoints+1)</command>
<command execution_time="25">ans / 90</command>
<command error="true" execution_time="470">locLandMark(180)</command>
<command execution_time="25">locLandmark(180)</command>
<command execution_time="25">ans / 90</command>
<command execution_time="29">size(locLandmark)</command>
<command execution_time="24">6270/90</command>
<command execution_time="22">69/90</command>
<command execution_time="24">6298/90</command>
<command execution_time="23">7/4</command>
<command execution_time="24">19/4</command>
<command execution_time="20">(1-1)*90+1</command>
<command execution_time="20">(5-1)*90+1</command>
<command execution_time="30">4*90</command>
<command execution_time="20759" repeat="3">templateLiner</command>
<command execution_time="30">idxLandmark = (tmpIdx-1) * model.numSlicePoints + 1</command>
<command execution_time="30">size(model.data)</command>
<command execution_time="30371">templateLiner</command>
<command batch="843">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="843">bottomOfSection = locLandmark(1);</command>
<command batch="843" execution_time="50">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command execution_time="20">bottomOfSection / 90</command>
<command execution_time="30">topOfSection / 90</command>
<command error="true" execution_time="30">model.datat(bottomOfSection,:)</command>
<command execution_time="30">model.data(bottomOfSection,:)</command>
<command execution_time="20">model.data(topOfSection,:)</command>
<command execution_time="17202">templateLiner</command>
<command execution_time="280">[~,~,~,idxLandmark] = getCord(hObject);</command>
<command execution_time="20">tmpIdx = round(idxLandmark/model.numSlicePoints);</command>
<command execution_time="30">tmpIdx</command>
<command execution_time="20">idxLandmark</command>
<command error="true" execution_time="30">ans / 90</command>
<command execution_time="30">idxLandmark / 90</command>
<command batch="844">tmpIdx = round(idxLandmark/model.numSlicePoints); % round vertex index to the nearest slice index (results in 0.9 mm resolution)</command>
<command batch="844" execution_time="30">idxLandmark = (tmpIdx-1) * model.numSlicePoints + 1;</command>
<command execution_time="40">idxLandmark</command>
<command execution_time="30">model.data(idxLandmark,:)</command>
<command execution_time="20">model.data(1,:)</command>
<command execution_time="20">model.data(91,:)</command>
<command execution_time="20">model.data(90*3+1,:)</command>
<command execution_time="20">model.data(90*4+1,:)</command>
<command execution_time="20">model.data(90*6+1,:)</command>
<command execution_time="38501">templateLiner</command>
<command batch="845">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep; % extend by multiples of height resolution (mm)</command>
<command batch="845">bottomOfSection = locLandmark(1);</command>
<command batch="845" execution_time="50">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command execution_time="30">model.data(topOfSection,:)</command>
<command execution_time="20">model.data(bottomOfSection,:)</command>
<command execution_time="260">figure; plot(locLandmark)</command>
<command execution_time="20">model.data(6211,:)</command>
<command execution_time="30">cat(2,ones(5,5),[])</command>
<command execution_time="30">1/2</command>
<command execution_time="20">1:2</command>
<command execution_time="50">1:.5:2</command>
<command execution_time="20">0:.5:2</command>
<command execution_time="20">1:5</command>
<command execution_time="20">0:.4:5</command>
<command execution_time="20">size(ans)</command>
<command error="true" execution_time="26326" repeat="2">templateLiner</command>
<command error="true" execution_time="340">tempLen</command>
<command execution_time="30">tmpLen</command>
<command execution_time="20">size(section)</command>
<command execution_time="30">2880/90</command>
<command batch="846" error="true">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpLen);</command>
<command batch="846" error="true" execution_time="50">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpLen);</command>
<command execution_time="20">tmpLen</command>
<command execution_time="10">tmpLen = size(section,1);</command>
<command batch="847" error="true">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpLen);</command>
<command batch="847" error="true" execution_time="50">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpLen);</command>
<command execution_time="20">size(section(:,1))</command>
<command execution_time="30">2880/90</command>
<command execution_time="30">tmpLen</command>
<command error="true" execution_time="30">reshape(section(:,1),model.numSlicePoints,tmpLen);</command>
<command execution_time="20">model.numSlicePoints</command>
<command execution_time="40">model.numSlicePoints * tmpLen</command>
<command execution_time="20">tmpLen / 90</command>
<command batch="848" error="true">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="848" error="true">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="848" error="true" execution_time="70">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command error="true" execution_time="330" repeat="2">tempLen</command>
<command execution_time="36459" repeat="2">templateLiner</command>
<command execution_time="20">1:5</command>
<command execution_time="20">1:5+3</command>
<command execution_time="30">1:1/3:5</command>
<command execution_time="30">size(ans)</command>
<command execution_time="20">numPoints</command>
<command batch="849" error="true">numPoints = round(extendBy/model.sliceHeightStep); % extend in steps equal to step resolution</command>
<command batch="849" error="true">% EXTEND SECTION</command>
<command batch="849" error="true">tmpLen = size(section,1);</command>
<command batch="849" error="true">v = 1:tmpLen;</command>
<command batch="849" error="true" execution_time="330">xq = linspace(1:tmpLen,tmpLen+numPoints);</command>
<command execution_time="30">tmpLen+numPoints</command>
<command execution_time="20">tmpLen</command>
<command batch="850">tmpLen = size(section,1);</command>
<command batch="850">v = 1:tmpLen;</command>
<command batch="850" execution_time="40">xq = linspace(1,tmpLen,tmpLen+numPoints);</command>
<command batch="851">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="851">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="851" execution_time="40">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="852" error="true">newSectionX = zeros(model.numSlicePoints,model.numSliceHeights);</command>
<command batch="852" error="true">newSectionY = zeros(model.numSlicePoints,model.numSliceHeights);</command>
<command batch="852" error="true">% EXTEND SECTION</command>
<command batch="852" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="852" error="true">newSectionX(idx,:) = interp1(v,tmpSectionX(idx,:),xq);</command>
<command batch="852" error="true">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="852" error="true" execution_time="400">end</command>
<command execution_time="30">size(xq)</command>
<command execution_time="20">max(xq)</command>
<command execution_time="20">max(v)</command>
<command execution_time="20">min(v)</command>
<command execution_time="20">min(xq)</command>
<command error="true" execution_time="40">interp1(v,tmpSectionX(idx,:),xq);</command>
<command error="true" execution_time="30">interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command execution_time="20">size(tmpSectionX)</command>
<command execution_time="30">size(v)</command>
<command execution_time="20">tmpNumSliceHeights</command>
<command batch="853" error="true">tmpLen = size(section,1);</command>
<command batch="853" error="true">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="853" error="true">v = 1:tmpNumSliceHeights;</command>
<command batch="853" error="true">xq = linspace(1,tmpLen,tmpNumSliceHeights+numPoints);</command>
<command batch="853" error="true">% RESHAPE THE NEW X AND Y SECTIONS FOR INTERPOLATION</command>
<command batch="853" error="true">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="853" error="true">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="853" error="true">% INITIALIZE BUFFERS</command>
<command batch="853" error="true">newSectionX = zeros(model.numSlicePoints,model.numSliceHeights);</command>
<command batch="853" error="true">newSectionY = zeros(model.numSlicePoints,model.numSliceHeights);</command>
<command batch="853" error="true">% EXTEND SECTION</command>
<command batch="853" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="853" error="true">newSectionX(idx,:) = interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command batch="853" error="true">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="853" error="true" execution_time="260">end</command>
<command execution_time="20">interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command execution_time="20">interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="854" error="true">newSectionX = zeros(model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="854" error="true">newSectionY = zeros(model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="854" error="true">% EXTEND SECTION</command>
<command batch="854" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="854" error="true">newSectionX(idx,:) = interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command batch="854" error="true">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="854" error="true" execution_time="100">end</command>
<command execution_time="30">size(newSectionX)</command>
<command execution_time="20">size(xq)</command>
<command batch="855" error="true">tmpLen = size(section,1);</command>
<command batch="855" error="true">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="855" error="true">tmpNewNumSliceHeights = tmpNumSliceHeights+numPoints;</command>
<command batch="855" error="true">v = 1:tmpNumSliceHeights;</command>
<command batch="855" error="true">xq = linspace(1,tmpLen,tmpNewNumSliceHeights);</command>
<command batch="855" error="true">% RESHAPE THE NEW X AND Y SECTIONS FOR INTERPOLATION</command>
<command batch="855" error="true">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="855" error="true">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="855" error="true">% INITIALIZE BUFFERS</command>
<command batch="855" error="true">newSectionX = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="855" error="true">newSectionY = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="855" error="true">% EXTEND SECTION</command>
<command batch="855" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="855" error="true">newSectionX(idx,:) = interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command batch="855" error="true">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="855" error="true" execution_time="70">end</command>
<command execution_time="35370">templateLiner</command>
<command batch="856" error="true">newSectionY = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="856" error="true">% EXTEND SECTION</command>
<command batch="856" error="true">for idx = 1:model.numSliceHeights</command>
<command batch="856" error="true">newSectionX(idx,:) = interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command batch="856" error="true">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="856" error="true" execution_time="130">end</command>
<command error="true" execution_time="360">size(newSection)</command>
<command execution_time="20">size(newSectionX)</command>
<command execution_time="20">size(xq)</command>
<command error="true" execution_time="20">size( interp1(v,squeeze(tmpSectionX(idx,:)),xq))</command>
<command execution_time="20">size(tmpSectionX)</command>
<command execution_time="20">idx</command>
<command execution_time="20">model.numSlicePoints</command>
<command batch="857">for idx = 1:model.numSlicePoints</command>
<command batch="857">newSectionX(idx,:) = interp1(v,squeeze(tmpSectionX(idx,:)),xq);</command>
<command batch="857">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="857" execution_time="80">end</command>
<command execution_time="20">size(newSectionX)</command>
<command execution_time="10">size(xq)</command>
<command execution_time="80">figure; plot(newSectionX(1,:))</command>
<command execution_time="180">figure; imagesc(newSectionX)</command>
<command execution_time="30">idx</command>
<command error="true" execution_time="90">figure; imatesc(tmpSectionX)</command>
<command execution_time="80">figure; imagesc(tmpSectionX)</command>
<command execution_time="80">figure; imagesc(newSectionY)</command>
<command execution_time="90">figure; plot(interp1(v,tmpSectionX(1,:),xq))</command>
<command error="true" execution_time="100">figure; imatesc(tmpSection)</command>
<command error="true" execution_time="80">figure; imatesc(tmpSectionX)</command>
<command execution_time="80">figure; imagesc(tmpSectionX)</command>
<command execution_time="20">interp1(v,tmpSectionX(1,:),xq)</command>
<command execution_time="20">interp1(v,tmpSectionX(2,:),xq)</command>
<command execution_time="20">v</command>
<command execution_time="20">xq</command>
<command batch="858">tmpLen = size(section,1);</command>
<command batch="858">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="858">tmpNewNumSliceHeights = tmpNumSliceHeights+numPoints;</command>
<command batch="858">v = 1:tmpNumSliceHeights;</command>
<command batch="858">xq = linspace(1,tmpNumSliceHeights,tmpNewNumSliceHeights);</command>
<command batch="858">% RESHAPE THE NEW X AND Y SECTIONS FOR INTERPOLATION</command>
<command batch="858">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="858">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="858">% INITIALIZE BUFFERS</command>
<command batch="858">newSectionX = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="858">newSectionY = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="858">% EXTEND SECTION</command>
<command batch="858">for idx = 1:model.numSlicePoints</command>
<command batch="858">newSectionX(idx,:) = interp1(v,tmpSectionX(idx,:),xq);</command>
<command batch="858">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="858" execution_time="220">end</command>
<command execution_time="80">figure; imagesc(newSectionX)</command>
<command execution_time="80">figure; imagesc(newSectionY)</command>
<command execution_time="80">figure; imagesc(tmpSectionY)</command>
<command execution_time="20">newSectionZ = section(1,3):model.sliceHeightStep:section(end,3)+extendBy;</command>
<command execution_time="20">diff(newSectionZ)</command>
<command execution_time="20">model.sliceHeightStep</command>
<command execution_time="38">newSectionX</command>
<command execution_time="20">tmpNumSliceHeights</command>
<command execution_time="20">size(newSectionZ)</command>
<command execution_time="20">tmpNewNumSliceHeights</command>
<command execution_time="20">newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command execution_time="30">size(newSectionZ)</command>
<command execution_time="20">repmat(ones(5,1),2)</command>
<command batch="859">newSectionZ = section(1,3):model.sliceHeightStep:section(end,3)+extendBy;</command>
<command batch="859" execution_time="30">newSectionZ = repmat(newSectionZ,model.numSlicePoints,2);</command>
<command execution_time="20">size(newSectionZ)</command>
<command execution_time="20">newSectionZ = section(1,3):model.sliceHeightStep:section(end,3)+extendBy;</command>
<command execution_time="20">size(newSectionZ)</command>
<command batch="860" error="true">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="860" error="true" execution_time="50">tmpNewNumSliceHeights,1);</command>
<command execution_time="20">newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command batch="861">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="861" execution_time="30">tmpNewNumSliceHeights,1);</command>
<command execution_time="20">size(newSectionZ)</command>
<command execution_time="90">figure; plot(newSectionZ)</command>
<command execution_time="100">figure; plot(section(:,3),section(:,1))</command>
<command error="true" execution_time="180">figure; plot(newSectionZ,newSectionX)</command>
<command execution_time="20">size(newSectionZ)</command>
<command execution_time="20">size(newSectionX)</command>
<command batch="862">newSectionX = reshape(newSectionX,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="862" execution_time="30">newSectionY = reshape(newSectionY,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command execution_time="20">size(newSectionX)</command>
<command execution_time="80">figure; plot(newSectionZ,newSectionX)</command>
<command execution_time="30">122.6+5</command>
<command execution_time="20">122.6+extendBy</command>
<command execution_time="20">extendBy</command>
<command execution_time="70">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="20">131.7-128.1</command>
<command execution_time="20">model.sliceHeightStep</command>
<command execution_time="20">ans * 2</command>
<command batch="863">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ],...</command>
<command batch="863" execution_time="30">orgTop);</command>
<command error="true" execution_time="140">figure; imagesc(model.data(:,3),model.data(:,1))</command>
<command execution_time="80">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="864">model.faces = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="864">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-2))');</command>
<command batch="864">model.faces = bsxfun(@plus,model.faces,[0,1,1+model.numSlicePoints,model.numSlicePoints]);</command>
<command batch="864">% UPDATE COLOR MAP</command>
<command batch="864">model.numFaces = size(model.faces,1);</command>
<command batch="864">model.highlight = ones(1,model.numFaces);</command>
<command batch="864">set(model.handlePatch,'CData',model.highlight);</command>
<command batch="864">% DRAW SCENE</command>
<command batch="864">set(model.handlePatch,'vertices',model.data,'faces',model.faces);</command>
<command batch="864">drawnow;</command>
<command batch="864">% SAVE DATA</command>
<command batch="864">guidata(hObject,model);</command>
<command batch="864">close(handle.Parent);</command>
<command batch="864">uiresume;</command>
<command batch="864">model.tmpLandmarks(locLandmark) = 1;</command>
<command batch="864">set(model.handlePatch,'CData',model.tmpLandmarks);</command>
<command batch="864" execution_time="840">drawnow;</command>
<command error="true" execution_time="27265" repeat="2">templateLiner</command>
<command execution_time="20">size(newSectionZ)</command>
<command execution_time="20">tmpNewNumSliceHeights</command>
<command execution_time="20">size(newSectionX)</command>
<command execution_time="10">2160/90</command>
<command execution_time="20">section(end,3)+extendBy</command>
<command execution_time="20">ans/ model.sliceHeightStep</command>
<command execution_time="20">tmpNewNumSliceHeights</command>
<command execution_time="20">size(section(1,3):model.sliceHeightStep:73)</command>
<command execution_time="20">73 * model.sliceHeightStep</command>
<command execution_time="20">size(section(1,3):model.sliceHeightStep:131.6640)</command>
<command execution_time="30711">templateLiner</command>
<command execution_time="20">extendBy = round(str2double(handle.String)/model.sliceHeightStep)*model.sliceHeightStep;</command>
<command execution_time="20">extendBy</command>
<command execution_time="20">extendBy / model.sliceHeightStep</command>
<command batch="865">bottomOfSection = locLandmark(1);</command>
<command batch="865" execution_time="30">topOfSection = locLandmark(2*model.numSlicePoints);</command>
<command execution_time="20">model.data(bottomOfSection,:)</command>
<command execution_time="20">model.data(topOfSection,:)</command>
<command execution_time="20">model.data(topOfSection-89,:)</command>
<command execution_time="30">model.data(topOfSection+1,:)</command>
<command batch="866">if bottomOfSection == 1</command>
<command batch="866">orgBottom = [];</command>
<command batch="866">elseif bottomOfSection == model.numSlicePoints*(model.numSliceHeights-1)+1</command>
<command batch="866">orgBottom = [];</command>
<command batch="866">else</command>
<command batch="866">orgBottom = model.data(1:bottomOfSection-1,:);</command>
<command batch="866">end</command>
<command batch="866">if topOfSection == model.numSlicePoints</command>
<command batch="866">orgTop = [];</command>
<command batch="866">elseif topOfSection == model.numSlicePoints*model.numSliceHeights</command>
<command batch="866">orgTop = [];</command>
<command batch="866">else</command>
<command batch="866">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="866">orgTop(:,3) = orgTop(:,3)+extendBy+model.sliceHeightStep;</command>
<command batch="866" execution_time="110">end</command>
<command execution_time="20">section = model.data(bottomOfSection:topOfSection,:);</command>
<command execution_time="20">section(1,3) - orgBottom(end,3)</command>
<command execution_time="20">model.sliceHeightStep</command>
<command execution_time="20">orgTop(1,3) - section(end,3)</command>
<command execution_time="80">figure; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="80">figure; plot(section(:,3),section(:,1))</command>
<command execution_time="20">model.data(topOfSection+1,3) - section(end,3)</command>
<command batch="867">section = model.data(bottomOfSection:topOfSection,:);</command>
<command batch="867" execution_time="30">numPoints = round(extendBy/model.sliceHeightStep); % extend in steps equal to step resolution</command>
<command execution_time="20">numPoints</command>
<command batch="868">tmpLen = size(section,1);</command>
<command batch="868">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="868">tmpNewNumSliceHeights = tmpNumSliceHeights+numPoints;</command>
<command batch="868">v = 1:tmpNumSliceHeights;</command>
<command batch="868">xq = linspace(1,tmpNumSliceHeights,tmpNewNumSliceHeights);</command>
<command batch="868">% RESHAPE THE NEW X AND Y SECTIONS FOR INTERPOLATION</command>
<command batch="868">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="868">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="868">% INITIALIZE BUFFERS</command>
<command batch="868">newSectionX = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="868">newSectionY = zeros(model.numSlicePoints,tmpNewNumSliceHeights);</command>
<command batch="868">% EXTEND SECTION</command>
<command batch="868">for idx = 1:model.numSlicePoints</command>
<command batch="868">newSectionX(idx,:) = interp1(v,tmpSectionX(idx,:),xq);</command>
<command batch="868">newSectionY(idx,:) = interp1(v,tmpSectionY(idx,:),xq);</command>
<command batch="868" execution_time="190">end</command>
<command batch="869" error="true">newSectionX = reshape(newSectionX,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="869" error="true">newSectionY = reshape(newSectionY,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="869" error="true">newSectionZ = section(1,3):model.sliceHeightStep:section(end,3)+extendBy;</command>
<command batch="869" error="true">newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command batch="869" error="true">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="869" error="true" execution_time="100">tmpNewNumSliceHeights,1);</command>
<command batch="870" error="true">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="870" error="true" execution_time="50">tmpNewNumSliceHeights,1);</command>
<command execution_time="30">size(newSectionZ)</command>
<command execution_time="30">size(newSectionX)</command>
<command execution_time="30">1890/90</command>
<command error="true" execution_time="50">section(1,3)/model.sliceHeighStep</command>
<command execution_time="20">section(1,3)/model.sliceHeightStep</command>
<command execution_time="20">section(end,3)/model.sliceHeightStep</command>
<command execution_time="78">figure; plot(diff(model.data(:,3)))</command>
</session>
<session>
<command time_stamp="15177e52dbd">%-- 12/6/2015 10:24 AM --%</command>
<command execution_time="631">main</command>
<command error="true" execution_time="1200">templacte liner</command>
<command batch="871" error="true">templateLiner</command>
<command batch="871" error="true" execution_time="53991">close all</command>
<command batch="872" execution_time="112426" repeat="2">templateLiner</command>
</session>
<session>
<command time_stamp="15177ee0a1e">%-- 12/6/2015 10:34 AM --%</command>
<command batch="873">templateLiner</command>
<command batch="873" execution_time="136861">templateLiner</command>
<command error="true" execution_time="55559">templateLiner</command>
<command execution_time="405">main</command>
<command batch="874">templateLiner</command>
</session>
<session>
<command time_stamp="1517dce76c7">%-- 12/7/2015 1:57 PM --%</command>
<command error="true" execution_time="38996" repeat="2">templateLiner</command>
<command execution_time="219">close all</command>
<command error="true" execution_time="97176" repeat="4">templateLiner</command>
<command execution_time="66">close all</command>
<command execution_time="25808" repeat="2">templateLiner</command>
<command batch="875" error="true">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="875" error="true" execution_time="49">tmpNewNumSliceHeights,1);</command>
<command execution_time="35">size(newSectionZ)</command>
<command execution_time="23">section(1,3)/model.sliceHeightStep</command>
<command error="true" execution_time="20">section(end,3)model.sliceHeightStep</command>
<command execution_time="20">section(end,3)/model.sliceHeightStep</command>
<command execution_time="24">length(46:model.sliceHeightStep:67)</command>
<command error="true" execution_time="49" repeat="2">model.numSlicePoints * model.tmpnewNumSliceHeights</command>
<command error="true" execution_time="1353">model.numSlicePoints * tmpnewNumSliceHeights</command>
<command execution_time="15">model.numSlicePoints * tmpNewNumSliceHeights</command>
<command execution_time="31">length(46:model.sliceHeightStep:67+extendBy)</command>
<command error="true" execution_time="6596211" repeat="3">templateLiner</command>
<command execution_time="3481">geom_lighting</command>
<command execution_time="265">drawOnSurfaceTest</command>
</session>
<session>
<command time_stamp="15181c14dc8">%-- 12/8/2015 8:21 AM --%</command>
<command error="true" execution_time="94">backFaceCullingTest</command>
<command execution_time="94" repeat="4">drawOnSurfaceTest</command>
<command error="true" execution_time="1461">cameraUpVector</command>
<command execution_time="46">camup</command>
<command error="true" execution_time="3512">templateLiner</command>
<command execution_time="93" repeat="13">drawOnSurfaceTest</command>
<command execution_time="16">N</command>
<command batch="876">N = [ 0    -1     0;...</command>
<command batch="876">1     0     0;...</command>
<command batch="876">0     1     0;...</command>
<command batch="876">-1     0     0;...</command>
<command batch="876">0     0    -1;...</command>
<command batch="876" execution_time="63">0     0     1]</command>
<command execution_time="94" repeat="2">drawOnSurfaceTest</command>
<command execution_time="31">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command execution_time="31">v1</command>
<command execution_time="31">v2</command>
<command execution_time="32">cross([1 0 0],[1 0 1])</command>
<command execution_time="31">cross(v1,v2,2)</command>
<command error="true" execution_time="31">surfnorm(model.data(:,1),model.data(:,2,), model.data(:,3))</command>
<command error="true" execution_time="432">surfnorm(model.data(:,1),model.data(:,2), model.data(:,3))</command>
<command execution_time="63">faceNormal(model.data,model.F)</command>
<command execution_time="16">camup</command>
<command batch="877">N = [ 0    -1     0;...</command>
<command batch="877">1     0     0;...</command>
<command batch="877">0     1     0;...</command>
<command batch="877">-1     0     0;...</command>
<command batch="877">0     0    -1;...</command>
<command batch="877" execution_time="62">0     0     1];</command>
<command batch="878">frontFaces = sum(bsxfun(@times,N',(campos-camtarget)'),1);</command>
<command batch="878">idxVerticesfrontFaces = model.F(frontFaces&gt;0,:);</command>
<command batch="878">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="878">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="878" execution_time="47">windowedData = model.data(idxVerticesfrontFaces,:)</command>
<command batch="879">N = cross(v1,v2,2)</command>
<command batch="879">%         CFV = bsxfun(@minus,model.data(model.F(:,1),:)',(campos-camtarget)');</command>
<command batch="879">%         frontFaces = sum(bsxfun(@times,N',CFV),1);</command>
<command batch="879">frontFaces = sum(bsxfun(@times,N',(campos-camtarget)'),1);</command>
<command batch="879">idxVerticesfrontFaces = model.F(frontFaces&gt;0,:);</command>
<command batch="879">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="879">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="879" execution_time="93">windowedData = model.data(idxVerticesfrontFaces,:)</command>
</session>
<session>
<command time_stamp="151822262d7">%-- 12/8/2015 10:07 AM --%</command>
<command execution_time="780" repeat="2">drawOnSurfaceTest</command>
<command execution_time="16">campos - camtarget</command>
<command execution_time="32">camup</command>
<command execution_time="95" repeat="3">drawOnSurfaceTest</command>
<command execution_time="15">camup</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command error="true" execution_time="914">N = normals(model.data,model.F);</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command error="true" execution_time="361">N = normals(model.data,model.F);</command>
<command execution_time="94">drawOnSurfaceTest</command>
<command batch="880" repeat="2">v1 = model.data(model.F(:,2),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="880">v2 = model.data(model.F(:,3),1:3)-model.data(model.F(:,1),1:3);</command>
<command batch="880">N = cross(v1,v2,2)</command>
<command batch="880">N2 = normals(model.data,model.F);</command>
<command batch="880">BC = barycenter(model.data,model.F);</command>
<command batch="880" execution_time="171">back_facing = sum(N2.*bsxfun(@minus,BC,campos),2)&gt;0</command>
<command execution_time="16">N2</command>
<command execution_time="31">back_facing = sum(N2.*bsxfun(@minus,BC,campos),2)&lt;=0</command>
<command batch="881">idxVerticesfrontFaces = model.F(back_facing,:);</command>
<command batch="881">idxVerticesfrontFaces = reshape(idxVerticesfrontFaces,...</command>
<command batch="881">prod(size(idxVerticesfrontFaces)),1);</command>
<command batch="881" execution_time="47">windowedData = model.data(idxVerticesfrontFaces,:)</command>
<command execution_time="78" repeat="2">drawOnSurfaceTest</command>
<command execution_time="16">model.F(back_facing,:)</command>
<command execution_time="93" repeat="8">drawOnSurfaceTest</command>
<command execution_time="7303" repeat="9">templateLiner</command>
<command execution_time="16">idx</command>
<command execution_time="31">size(model.data)</command>
<command error="true" execution_time="381">idxLandMark(idx)</command>
<command execution_time="15">idxVerticesfrontFaces(idx)</command>
<command execution_time="16">size(idxVerticesfrontFaces)</command>
<command execution_time="16">idxC</command>
<command execution_time="46">idxC = find(a==minC);</command>
<command execution_time="15">idxC</command>
</session>
<session>
<command time_stamp="151827f343d">%-- 12/8/2015 11:49 AM --%</command>
<command error="true" execution_time="344">getCord</command>
<command execution_time="10050" repeat="3">templateLiner</command>
<command execution_time="15">size(a)</command>
<command execution_time="282">figure; imagesc(squeeze(a))</command>
<command execution_time="32">size(a)</command>
<command execution_time="31">minC = min(a(:))</command>
<command execution_time="31">idxC = find(a==minC)</command>
<command execution_time="47">[idxLandmark,~] = ind2sub(size(a),idxC)</command>
<command batch="882">idxC = idxC(1); % choose only a point from a single face</command>
<command batch="882" execution_time="31">[idxLandmark,~] = ind2sub(size(a),idxC)</command>
<command execution_time="31">idxC</command>
<command execution_time="16">size(a)</command>
<command batch="883">a = squeeze(a);</command>
<command batch="883">minC = min(a(:));</command>
<command batch="883">idxC = find(a==minC);</command>
<command batch="883">idxC = idxC(1); % choose only a point from a single face</command>
<command batch="883" execution_time="78">[idxLandmark,~] = ind2sub(size(a),idxC)</command>
<command execution_time="15">idxC</command>
<command execution_time="32">size(a)</command>
<command execution_time="16">ind2sub(size(a),idxC)</command>
<command batch="884">minC = min(a(:));</command>
<command batch="884">idxC = find(a==minC);</command>
<command batch="884">idxC = idxC(1); % choose only a point from a single face</command>
<command batch="884" execution_time="62">[idxLandmark,~] = ind2sub(size(a),idxC);</command>
<command execution_time="31">idxLandmark</command>
<command batch="885">a = squeeze(a);</command>
<command batch="885">minC = min(a(:));</command>
<command batch="885">idxC = find(a==minC);</command>
<command batch="885">idxC = idxC(1); % choose only a point from a single face</command>
<command batch="885" execution_time="78">[idxLandmark,~] = ind2sub(size(a),idxC);</command>
<command execution_time="15">idxC = idxC(1); % choose only a point from a single face</command>
<command execution_time="31">idxLandmark</command>
<command execution_time="78">figure; imagesc(a)</command>
<command execution_time="16">[x y] = min(a(:))</command>
<command execution_time="16">size(a)</command>
<command execution_time="31">ind2sub(size(a),y)</command>
<command execution_time="15">foo = zeros(5,5); foo(2) = 1;</command>
<command execution_time="32">foo</command>
<command execution_time="15">find(foo==1)</command>
<command execution_time="16">foo = zeros(5,5); foo(3,5) = 1;</command>
<command execution_time="15">foo</command>
<command execution_time="16">find(foo==1)</command>
<command execution_time="15">ind2sub(size(foo),ans)</command>
<command execution_time="31">foo(23)</command>
</session>
<session>
<command time_stamp="1518296bfb2">%-- 12/8/2015 12:14 PM --%</command>
<command execution_time="5636" repeat="2">templateLiner</command>
<command execution_time="15">ind2sub(size(a),idxC)</command>
<command execution_time="16">[x y] = ind2sub(size(a),idxC)</command>
<command error="true" execution_time="681">idxLandmark</command>
<command execution_time="15">[idxLandmark,~] = ind2sub(size(a),idxC)</command>
<command execution_time="125">figure; imagesc(a)</command>
<command execution_time="16">windowedData(idxLandmark,1)</command>
<command execution_time="31">windowedData(idxLandmark,3)</command>
</session>
<session>
<command time_stamp="15182a84b51">%-- 12/8/2015 12:34 PM --%</command>
<command error="true" execution_time="305712" repeat="11">templateLiner</command>
<command batch="886">hPrompt = figure;</command>
<command batch="886">axis off;</command>
<command batch="886">name = 'Add trimlines';</command>
<command batch="886">set(hPrompt,'Resize','off');</command>
<command batch="886">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="886">set(hPrompt,'name',name);</command>
<command batch="886">set(hPrompt,'NumberTitle','off');</command>
<command batch="886">set(hPrompt,'MenuBar','none');</command>
<command batch="886">set(hPrompt,'ToolBar','none');</command>
<command batch="886">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="886">% PUSH BUTTON (START ADD TRIMLINES)</command>
<command batch="886">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="886">'pixel','position',[15 80 300 20],...</command>
<command batch="886">'string','0','string','Draw trimlines',...</command>
<command batch="886">'Callback',@drawTrimLines);</command>
<command batch="886">% PUSH BUTTON (ADD TRIMLINES)</command>
<command batch="886">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="886">'pixel','position',[15 50 300 20],...</command>
<command batch="886">'string','0','string','Add trimlines',...</command>
<command batch="886" execution_time="281">'Callback',@addTrimLines);</command>
<command batch="887">hPrompt = figure;</command>
<command batch="887">axis off;</command>
<command batch="887">name = 'Trim Lines';</command>
<command batch="887">set(hPrompt,'Resize','off');</command>
<command batch="887">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="887">set(hPrompt,'name',name);</command>
<command batch="887">set(hPrompt,'NumberTitle','off');</command>
<command batch="887">set(hPrompt,'MenuBar','none');</command>
<command batch="887">set(hPrompt,'ToolBar','none');</command>
<command batch="887">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="887">% PUSH BUTTON (START ADD TRIMLINES)</command>
<command batch="887">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="887">'pixel','position',[15 80 300 20],...</command>
<command batch="887">'string','0','string','Draw trimlines',...</command>
<command batch="887">'Callback',@drawTrimLines);</command>
<command batch="887">% PUSH BUTTON (ADD TRIMLINES)</command>
<command batch="887">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="887">'pixel','position',[15 50 300 20],...</command>
<command batch="887">'string','0','string','Add trimlines',...</command>
<command batch="887">'Callback',@addTrimLines);</command>
<command batch="887">% PUSH BUTTON (OK)</command>
<command batch="887">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="887">'pixel','position',[15 20 300 20],...</command>
<command batch="887">'string','0','string','OK',...</command>
<command batch="887" execution_time="296">'Callback',@OK);</command>
<command batch="888" error="true" execution_time="387069" repeat="4">templateLiner</command>
<command batch="888" error="true" execution_time="117781">size(ans)</command>
<command execution_time="24829" repeat="16">templateLiner</command>
<command error="true" execution_time="351">size(newTLx)</command>
<command execution_time="16">size(newTLX)</command>
<command execution_time="156">figure; plot(newTLX)</command>
<command execution_time="15">newTLZ = interp1(v,model.trimlines(:,3),xq);</command>
<command execution_time="31">newTLZ</command>
<command execution_time="31">model.trimlines</command>
<command execution_time="21">model.trimlines = model.trimlines(model.trimlines&gt;0);</command>
<command execution_time="19">model.trimlines</command>
<command execution_time="26702" repeat="2">templateLiner</command>
<command execution_time="31">model.trimLines</command>
<command execution_time="15">tmp</command>
<command error="true" execution_time="1039">treated_liver = treated &amp; liver;</command>
<command execution_time="27180">templateLiner</command>
<command execution_time="31">model.trimLines</command>
<command execution_time="16">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command execution_time="16">tmp</command>
<command batch="889">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="889">[m n] = size(model.trimLines);</command>
<command batch="889">v = 1:m;</command>
<command batch="889">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="889">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="889">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="889">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="889" execution_time="78">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command execution_time="78">figure; plot(newTLX)</command>
<command execution_time="78">figure; plot(newTLX,newTLY)</command>
<command execution_time="31892">templateLiner</command>
<command batch="890">trimLineExpand = 10; % mm</command>
<command batch="890" execution_time="31">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command execution_time="15">model.trimLines</command>
<command execution_time="43345" repeat="2">templateLiner</command>
<command batch="891">trimLineExpand = 10; % mm</command>
<command batch="891" execution_time="32">tmp = find(model.trimLines&gt;0);</command>
<command execution_time="31">model.trimLines</command>
<command execution_time="31">model.trimLines = model.trimLines(tmp);</command>
<command batch="892" error="true">[m n] = size(model.trimLines);</command>
<command batch="892" error="true">v = 1:m;</command>
<command batch="892" error="true">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="892" error="true">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="892" error="true">%             newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="892" error="true">%             newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="892" error="true" execution_time="234">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command execution_time="15">m</command>
<command batch="893" error="true">[m n] = size(model.trimLines);</command>
<command batch="893" error="true">v = 1:m;</command>
<command batch="893" error="true">xq = linspace(1,n,model.numSlicePoints);</command>
<command batch="893" error="true">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="893" error="true">%             newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="893" error="true">%             newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="893" error="true" execution_time="125">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command execution_time="16">n</command>
<command execution_time="32">xq</command>
<command error="true" execution_time="31">newTLZ = interp1(v,model.trimLines,xq);</command>
<command execution_time="16">model.trimLines</command>
<command error="true" execution_time="231">x</command>
<command execution_time="15">v</command>
<command batch="894">[m n] = size(model.trimLines);</command>
<command batch="894">v = 1:n;</command>
<command batch="894">xq = linspace(1,n,model.numSlicePoints);</command>
<command batch="894">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="894">%             newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="894">%             newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="894" execution_time="78">newTLZ = interp1(v,model.trimLines,xq);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command batch="895" error="true">tmpDataHeight = reshape(mold.data(:,3),model.numSlicePoints,model.numSliceHeights);</command>
<command batch="895" error="true">addTrimLines = (trimLineExpand-1) + bsxfun(@ge,tmpDataHeight,newTLZ);</command>
<command batch="895" error="true">addTrimLines = reshape(addTrimLines,model.numSlicePoints*model.numSliceHeights,3);</command>
<command batch="895" error="true">model.data(:,1) = model.data(:,1) + addTrimLines;</command>
<command batch="895" error="true" execution_time="78">model.data(:,3) = model.data(:,2) + addTrimLines;</command>
<command error="true" execution_time="94">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,model.numSliceHeights);</command>
<command execution_time="16">size(model.data(:,3))</command>
<command execution_time="31">model.numSlicePoints</command>
<command execution_time="31">model.numSliceHeights</command>
<command execution_time="16">model</command>
<command batch="896" error="true" repeat="2">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="896" error="true" execution_time="46">model.numSliceHeights/model.numSliceHeights);</command>
<command execution_time="16">model.numSliceHeights/model.numSliceHeights</command>
<command batch="897">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="897" execution_time="31">model.numSliceHeights/model.numSlicePoints);</command>
<command execution_time="32">size(tmpDataHeight)</command>
<command error="true" execution_time="63">addTrimLines = (trimLineExpand-1) + bsxfun(@ge,tmpDataHeight,newTLZ);</command>
<command execution_time="16">size(tmpDataHeight)</command>
<command execution_time="16">size(newTLZ)</command>
<command execution_time="16">addTrimLines = (trimLineExpand-1) + bsxfun(@ge,tmpDataHeight,newTLZ');</command>
<command execution_time="16">addTrimLines(1,:)</command>
<command execution_time="16">tmpDataHeight(1,:)</command>
<command execution_time="78">figure; plot(model.data(:,3))</command>
<command execution_time="78">figure; imagesc(tmpDataHeight)</command>
<command execution_time="16">size(addTrimLines)</command>
<command execution_time="94">figure; imagesc(addTrimLines)</command>
<command execution_time="16">addTrimLines = trimLineExpand * bsxfun(@ge,tmpDataHeight,newTLZ');</command>
<command execution_time="95">figure; imagesc(addTrimLines)</command>
<command execution_time="16">addTrimLines = reshape(addTrimLines,model.numSliceHeights,1);</command>
<command batch="898">model.data(:,1) = model.data(:,1) + addTrimLines;</command>
<command batch="898" execution_time="31">model.data(:,3) = model.data(:,2) + addTrimLines;</command>
<command batch="899">set(model.handlePatch,'vertices',model.data);</command>
<command batch="899" execution_time="218">drawnow;</command>
<command execution_time="172">close all</command>
<command execution_time="30252">templateLiner</command>
<command batch="900">trimLineExpand = 10; % mm</command>
<command batch="900" execution_time="31">tmp = find(model.trimLines&gt;0);</command>
<command execution_time="31">model.trimLines</command>
<command batch="901">model.trimLines = model.trimLines(tmp);</command>
<command batch="901">[m n] = size(model.trimLines);</command>
<command batch="901">v = 1:n;</command>
<command batch="901">xq = linspace(1,n,model.numSlicePoints);</command>
<command batch="901">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="901">%             newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="901">%             newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="901">newTLZ = interp1(v,model.trimLines,xq);</command>
<command batch="901">% ADD TRIM LINES</command>
<command batch="901">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="901">model.numSliceHeights/model.numSlicePoints);</command>
<command batch="901">addTrimLines = trimLineExpand * bsxfun(@ge,tmpDataHeight,newTLZ');</command>
<command batch="901">addTrimLines = reshape(addTrimLines,model.numSliceHeights,1);</command>
<command batch="901">model.data(:,1) = model.data(:,1) + addTrimLines;</command>
<command batch="901">model.data(:,2) = model.data(:,2) + addTrimLines;</command>
<command batch="901">% DRAW SCENE</command>
<command batch="901">set(model.handlePatch,'vertices',model.data);</command>
<command batch="901" execution_time="344">drawnow;</command>
<command execution_time="27798" repeat="3">templateLiner</command>
<command batch="902" error="true">model.data(:,1) = model.data(:,1) .* ...</command>
<command batch="902" error="true" execution_time="1607">((model.data(:,1) + addTrimLines) / model.data(:,1));</command>
<command execution_time="1139">((model.data(:,1) + addTrimLines) / model.data(:,1));</command>
<command execution_time="109">size(ans)</command>
<command batch="903">model.data(:,1) = model.data(:,1) .* ...</command>
<command batch="903">((model.data(:,1) + addTrimLines) ./ model.data(:,1));</command>
<command batch="903">model.data(:,2) = model.data(:,2) .* ...</command>
<command batch="903" execution_time="47">((model.data(:,2) + addTrimLines) ./ model.data(:,2));</command>
<command batch="904">set(model.handlePatch,'vertices',model.data);</command>
<command batch="904" execution_time="188">drawnow;</command>
<command execution_time="28905" repeat="2">templateLiner</command>
<command execution_time="31">size(addTrimLines)</command>
<command execution_time="93">figure; plot(addTrimLines)</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="78">figure; imagesc(addTrimLines)</command>
<command execution_time="78">figure; plot(addTrimLines)</command>
<command execution_time="15">min(addTrimLines)</command>
<command execution_time="32839">templateLiner</command>
<command execution_time="94">figure; plot(addTrimLines)</command>
<command batch="905">set(model.handlePatch,'vertices',model.data);</command>
<command batch="905" execution_time="156">drawnow;</command>
<command execution_time="24229" repeat="6">templateLiner</command>
<command error="true" execution_time="16">adjustCir( hObject );</command>
<command execution_time="31">guidata(hObject,model);</command>
<command execution_time="15">adjustCir( hObject );</command>
<command execution_time="16">size(model.guiPerRed)</command>
<command execution_time="16">size(model.data)</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command execution_time="78">adjustCir( hObject );</command>
<command execution_time="78">figure; imagesc(model.data(:,1:2))</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="906">model = guidata(hObject);</command>
<command batch="906" execution_time="31">set(model.handlePatch,'vertices',model.data);</command>
<command execution_time="78">close all</command>
<command execution_time="92397" repeat="2">templateLiner</command>
<command batch="907">trimLineExpand = 2; % mm</command>
<command batch="907">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="907">tmp = find(model.trimLines&gt;0);</command>
<command batch="907">model.trimLines = model.trimLines(tmp);</command>
<command batch="907">[m n] = size(model.trimLines);</command>
<command batch="907">v = 1:n;</command>
<command batch="907">xq = linspace(1,n,model.numSlicePoints);</command>
<command batch="907">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="907" execution_time="109">newTLZ = interp1(v,model.trimLines,xq);</command>
<command execution_time="94">figure; plot(newTLZ)</command>
<command execution_time="16">size(model.trimLines)</command>
<command execution_time="65819">templateLiner</command>
<command execution_time="15">newTLZ = interp1(v,model.trimLines,xq);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="15">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command error="true" execution_time="62">foo = circshift(newTLZ,length(newTLZ)-theta);</command>
<command execution_time="141">figure; plot(circshift(newTLZ,length(newTLZ)-theta))</command>
<command execution_time="31">theta</command>
<command execution_time="31">length(newTLZ)-theta</command>
<command execution_time="32">size(newTLZ)</command>
<command error="true" execution_time="31">length(newTLZ)-theta)</command>
<command execution_time="31">length(newTLZ)-theta</command>
<command execution_time="31">newTLZ = circshift(newTLZ,length(newTLZ)-theta);</command>
<command execution_time="62">hold on; plot(newTLZ)</command>
<command error="true" execution_time="31">figure; plot(circshift(newTLZ,5)</command>
<command execution_time="78">figure; plot(circshift(newTLZ,5))</command>
<command execution_time="31">hold on; plot(circshift(newTLZ,5))</command>
<command execution_time="31">hold on; plot(circshift(newTLZ,10))</command>
<command execution_time="31">hold on; plot(circshift(newTLZ,100))</command>
<command execution_time="31">hold on; plot(circshift(newTLZ,200))</command>
<command execution_time="15">hold on; plot(circshift(newTLZ',200))</command>
<command execution_time="16">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="15">hold on; plot(newTLZ)</command>
<command execution_time="31">theta</command>
<command execution_time="55277" repeat="3">templateLiner</command>
<command execution_time="78">figure; plot(model.trimLines(:,1),model.trimLines(:,2))</command>
<command execution_time="31">size(model.trimLines)</command>
<command execution_time="31">3/15</command>
<command execution_time="31">theta</command>
<command execution_time="31">17/90</command>
<command error="true" execution_time="141">figure; plot(newTLZ)</command>
<command execution_time="16">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command execution_time="94">figure; plot(newTLZ)</command>
<command execution_time="16">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command batch="908">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="908">numSlices);</command>
<command batch="908">model.guiPerRed = trimLineExpand * bsxfun(@ge,tmpDataHeight,newTLZ);</command>
<command batch="908">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="908">model.guiPerRed = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed); % unit vector</command>
<command batch="908">model.guiPerRed = 1+(model.guiPerRed./tmpData);</command>
<command batch="908">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command batch="908">guidata(hObject,model);</command>
<command batch="908">adjustCir( hObject );</command>
<command batch="908">%             addTrimLines = reshape(addTrimLines,model.numSliceHeights,1);</command>
<command batch="908">%             model.data(:,1) = model.data(:,1) .* ...</command>
<command batch="908">%                 ((model.data(:,1) + addTrimLines) ./ model.data(:,1));</command>
<command batch="908">%             model.data(:,2) = model.data(:,2) .* ...</command>
<command batch="908">%                 ((model.data(:,2) + addTrimLines) ./ model.data(:,2));</command>
<command batch="908">% DRAW SCENE</command>
<command batch="908">model = guidata(hObject);</command>
<command batch="908">set(model.handlePatch,'vertices',model.data);</command>
<command batch="908" execution_time="359">drawnow;</command>
<command execution_time="94">figure; imagesc(model.data)</command>
<command execution_time="31">theta</command>
<command execution_time="32">90/3</command>
<command execution_time="75701">templateLiner</command>
<command batch="909">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="909">newTLZ = circshift(newTLZ',37);%length(newTLZ)-theta</command>
<command batch="909">% ADD TRIM LINES</command>
<command batch="909">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="909">numSlices);</command>
<command batch="909">model.guiPerRed = trimLineExpand * bsxfun(@ge,tmpDataHeight,newTLZ);</command>
<command batch="909">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="909">model.guiPerRed = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed); % unit vector</command>
<command batch="909">model.guiPerRed = 1+(model.guiPerRed./tmpData);</command>
<command batch="909">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command batch="909">guidata(hObject,model);</command>
<command batch="909">adjustCir( hObject );</command>
<command batch="909">%             addTrimLines = reshape(addTrimLines,model.numSliceHeights,1);</command>
<command batch="909">%             model.data(:,1) = model.data(:,1) .* ...</command>
<command batch="909">%                 ((model.data(:,1) + addTrimLines) ./ model.data(:,1));</command>
<command batch="909">%             model.data(:,2) = model.data(:,2) .* ...</command>
<command batch="909">%                 ((model.data(:,2) + addTrimLines) ./ model.data(:,2));</command>
<command batch="909">% DRAW SCENE</command>
<command batch="909">model = guidata(hObject);</command>
<command batch="909">set(model.handlePatch,'vertices',model.data);</command>
<command batch="909" execution_time="375">drawnow;</command>
<command batch="910" error="true" execution_time="374932" repeat="6">templateLiner</command>
<command batch="910" error="true" execution_time="365704">hl = line();</command>
<command execution_time="31">hl = line();</command>
<command execution_time="78">hl</command>
<command error="true" execution_time="34971">templateLiner</command>
<command execution_time="499">errordlg('hello')</command>
<command error="true" execution_time="257">exist(a)</command>
<command execution_time="31">exist('a')</command>
<command execution_time="32">a = [];</command>
<command execution_time="31">if a == []; a = 1; end</command>
<command execution_time="15">a</command>
<command error="true" execution_time="7254">templateLiner</command>
</session>
<session>
<command time_stamp="15186f3ad1a">%-- 12/9/2015 8:34 AM --%</command>
<command batch="911">hPrompt = figure;</command>
<command batch="911">axis off;</command>
<command batch="911">name = 'Trim lines';</command>
<command batch="911">set(hPrompt,'Resize','off');</command>
<command batch="911">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="911">set(hPrompt,'name',name);</command>
<command batch="911">set(hPrompt,'NumberTitle','off');</command>
<command batch="911">set(hPrompt,'MenuBar','none');</command>
<command batch="911">set(hPrompt,'ToolBar','none');</command>
<command batch="911">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="911">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="911">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="911">'pixel','position',[15 80 300 20],...</command>
<command batch="911">'string','0','string','Draw trim lines',...</command>
<command batch="911">'Callback',@drawTrimLines);</command>
<command batch="911">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="911">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="911">'pixel','position',[15 50 300 20],...</command>
<command batch="911">'string','0','string','Add trim lines',...</command>
<command batch="911">'Callback',@addTrimLines);</command>
<command batch="911">% PUSH BUTTON (OK)</command>
<command batch="911">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="911">'pixel','position',[15 20 140 20],...</command>
<command batch="911">'string','0','string','OK',...</command>
<command batch="911">'Callback',@OK);</command>
<command batch="911">% PUSH BUTTON (CANCEL)</command>
<command batch="911">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="911">'pixel','position',[15 170 140 20],...</command>
<command batch="911">'string','0','string','Cancel',...</command>
<command batch="911" execution_time="4769">'Callback',@Cancel);</command>
<command batch="912">hPrompt = figure;</command>
<command batch="912">axis off;</command>
<command batch="912">name = 'Trim lines';</command>
<command batch="912">%         set(hPrompt,'Resize','off');</command>
<command batch="912">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="912">set(hPrompt,'name',name);</command>
<command batch="912">set(hPrompt,'NumberTitle','off');</command>
<command batch="912">set(hPrompt,'MenuBar','none');</command>
<command batch="912">set(hPrompt,'ToolBar','none');</command>
<command batch="912">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="912">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="912">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="912">'pixel','position',[15 80 300 20],...</command>
<command batch="912">'string','0','string','Draw trim lines',...</command>
<command batch="912">'Callback',@drawTrimLines);</command>
<command batch="912">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="912">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="912">'pixel','position',[15 50 300 20],...</command>
<command batch="912">'string','0','string','Add trim lines',...</command>
<command batch="912">'Callback',@addTrimLines);</command>
<command batch="912">% PUSH BUTTON (OK)</command>
<command batch="912">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="912">'pixel','position',[15 20 140 20],...</command>
<command batch="912">'string','0','string','OK',...</command>
<command batch="912">'Callback',@OK);</command>
<command batch="912">% PUSH BUTTON (CANCEL)</command>
<command batch="912">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="912">'pixel','position',[15 170 140 20],...</command>
<command batch="912">'string','0','string','Cancel',...</command>
<command batch="912" execution_time="385">'Callback',@Cancel);</command>
<command batch="913">hPrompt = figure;</command>
<command batch="913">axis off;</command>
<command batch="913">name = 'Trim lines';</command>
<command batch="913">%         set(hPrompt,'Resize','off');</command>
<command batch="913">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="913">set(hPrompt,'name',name);</command>
<command batch="913">set(hPrompt,'NumberTitle','off');</command>
<command batch="913">set(hPrompt,'MenuBar','none');</command>
<command batch="913">set(hPrompt,'ToolBar','none');</command>
<command batch="913">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="913">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="913">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="913">'pixel','position',[15 80 300 20],...</command>
<command batch="913">'string','0','string','Draw trim lines',...</command>
<command batch="913">'Callback',@drawTrimLines);</command>
<command batch="913">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="913">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="913">'pixel','position',[15 50 300 20],...</command>
<command batch="913">'string','0','string','Add trim lines',...</command>
<command batch="913">'Callback',@addTrimLines);</command>
<command batch="913">% PUSH BUTTON (OK)</command>
<command batch="913">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="913">'pixel','position',[15 20 140 20],...</command>
<command batch="913">'string','0','string','OK',...</command>
<command batch="913">'Callback',@OK);</command>
<command batch="913">% PUSH BUTTON (CANCEL)</command>
<command batch="913">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="913">'pixel','position',[165 20 140 20],...</command>
<command batch="913">'string','0','string','Cancel',...</command>
<command batch="913" execution_time="368">'Callback',@Cancel);</command>
<command batch="914">hPrompt = figure;</command>
<command batch="914">axis off;</command>
<command batch="914">name = 'Trim lines';</command>
<command batch="914">%         set(hPrompt,'Resize','off');</command>
<command batch="914">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="914">set(hPrompt,'name',name);</command>
<command batch="914">set(hPrompt,'NumberTitle','off');</command>
<command batch="914">set(hPrompt,'MenuBar','none');</command>
<command batch="914">set(hPrompt,'ToolBar','none');</command>
<command batch="914">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="914">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="914">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="914">'pixel','position',[15 80 300 20],...</command>
<command batch="914">'string','0','string','Draw trim lines',...</command>
<command batch="914">'Callback',@drawTrimLines);</command>
<command batch="914">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="914">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="914">'pixel','position',[15 50 300 20],...</command>
<command batch="914">'string','0','string','Add trim lines',...</command>
<command batch="914">'Callback',@addTrimLines);</command>
<command batch="914">% PUSH BUTTON (OK)</command>
<command batch="914">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="914">'pixel','position',[15 20 140 20],...</command>
<command batch="914">'string','0','string','OK',...</command>
<command batch="914">'Callback',@OK);</command>
<command batch="914">% PUSH BUTTON (CANCEL)</command>
<command batch="914">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="914">'pixel','position',[170 20 140 20],...</command>
<command batch="914">'string','0','string','Cancel',...</command>
<command batch="914" execution_time="387">'Callback',@Cancel);</command>
<command batch="915">hPrompt = figure;</command>
<command batch="915">axis off;</command>
<command batch="915">name = 'Trim lines';</command>
<command batch="915">%         set(hPrompt,'Resize','off');</command>
<command batch="915">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="915">set(hPrompt,'name',name);</command>
<command batch="915">set(hPrompt,'NumberTitle','off');</command>
<command batch="915">set(hPrompt,'MenuBar','none');</command>
<command batch="915">set(hPrompt,'ToolBar','none');</command>
<command batch="915">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="915">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="915">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="915">'pixel','position',[15 80 300 20],...</command>
<command batch="915">'string','0','string','Draw trim lines',...</command>
<command batch="915">'Callback',@drawTrimLines);</command>
<command batch="915">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="915">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="915">'pixel','position',[15 50 300 20],...</command>
<command batch="915">'string','0','string','Add trim lines',...</command>
<command batch="915">'Callback',@addTrimLines);</command>
<command batch="915">% PUSH BUTTON (OK)</command>
<command batch="915">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="915">'pixel','position',[15 20 140 20],...</command>
<command batch="915">'string','0','string','OK',...</command>
<command batch="915">'Callback',@OK);</command>
<command batch="915">% PUSH BUTTON (CANCEL)</command>
<command batch="915">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="915">'pixel','position',[180 20 140 20],...</command>
<command batch="915">'string','0','string','Cancel',...</command>
<command batch="915" execution_time="388">'Callback',@Cancel);</command>
<command batch="916">hPrompt = figure;</command>
<command batch="916">axis off;</command>
<command batch="916">name = 'Trim lines';</command>
<command batch="916">%         set(hPrompt,'Resize','off');</command>
<command batch="916">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="916">set(hPrompt,'name',name);</command>
<command batch="916">set(hPrompt,'NumberTitle','off');</command>
<command batch="916">set(hPrompt,'MenuBar','none');</command>
<command batch="916">set(hPrompt,'ToolBar','none');</command>
<command batch="916">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="916">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="916">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="916">'pixel','position',[15 80 300 20],...</command>
<command batch="916">'string','0','string','Draw trim lines',...</command>
<command batch="916">'Callback',@drawTrimLines);</command>
<command batch="916">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="916">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="916">'pixel','position',[15 50 300 20],...</command>
<command batch="916">'string','0','string','Add trim lines',...</command>
<command batch="916">'Callback',@addTrimLines);</command>
<command batch="916">% PUSH BUTTON (OK)</command>
<command batch="916">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="916">'pixel','position',[15 20 140 20],...</command>
<command batch="916">'string','0','string','OK',...</command>
<command batch="916">'Callback',@OK);</command>
<command batch="916">% PUSH BUTTON (CANCEL)</command>
<command batch="916">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="916">'pixel','position',[176 20 140 20],...</command>
<command batch="916">'string','0','string','Cancel',...</command>
<command batch="916" execution_time="418">'Callback',@Cancel);</command>
<command execution_time="422862">templateLiner</command>
<command execution_time="297">figure; plot(newTLZ)</command>
<command batch="917" error="true">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="917" error="true" execution_time="62">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command execution_time="106864">templateLiner</command>
<command execution_time="31">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command execution_time="16">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command execution_time="31">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command execution_time="78">figure; plot(newTLY,newTLX)</command>
<command execution_time="62">figure; plot3(newTLX,newTLY,newTLZ)</command>
<command batch="918" error="true">hl2 = line('XData',newTLX,'YData',newTLY,'ZData',newTLZ,'Marker','-','Color','y');</command>
<command batch="918" error="true" execution_time="126">drawnow;</command>
<command execution_time="16">hl2 = line('XData',newTLX,'YData',newTLY,'ZData',newTLZ,'LineStyle','-','Color','y');</command>
<command execution_time="16" repeat="2">drawnow;</command>
<command batch="919">hl2 = line('XData',newTLX,'YData',newTLY,'ZData',newTLZ,'LineStyle','-','Color','y');</command>
<command batch="919" execution_time="47">drawnow;</command>
<command batch="920">hl2 = line('XData',newTLX,'YData',newTLY,'ZData',newTLZ,'LineStyle','-','Color','m');</command>
<command batch="920" execution_time="46">drawnow;</command>
<command batch="921">hl2 = line('XData',newTLX,'YData',newTLY,'ZData',newTLZ,'Marker','o','Color','m');</command>
<command batch="921" execution_time="47">drawnow;</command>
<command batch="922">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="922" execution_time="31">numSlices);</command>
<command execution_time="187">figure; imagesc(tmpDataHeight)</command>
<command execution_time="94">tmpDataHeight = reshape(model.data(:,1),model.numSlicePoints,numSlices)</command>
<command execution_time="78">figure; imagesc(tmpDataHeight)</command>
<command execution_time="15">tmpDataHeight = reshape(model.data(:,2),model.numSlicePoints,numSlices);</command>
<command execution_time="110">figure; imagesc(tmpDataHeight)</command>
<command error="true" execution_time="31">r = 1;</command>
<command execution_time="90013">templateLiner</command>
<command batch="923">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="923">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="923" execution_time="47">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="924">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="924">numSlices);</command>
<command batch="924">tmpDataX = reshape(model.data(:,1),model.numSlicePoints,...</command>
<command batch="924">numSlices);</command>
<command batch="924">tmpDataY = reshape(model.data(:,2),model.numSlicePoints,...</command>
<command batch="924">numSlices);</command>
<command batch="924">tmpDataR = sqrt(tmpDataX.^2 + tmpDataY.^2);</command>
<command batch="924" execution_time="78">difftmpDataR = diff(tmpDataR,1);</command>
<command execution_time="78">figure; imagesc(difftmpDataR)</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="15">length(newTLZ)-theta</command>
<command execution_time="16">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command error="true" execution_time="109">hold figure; plot(newTLZ)</command>
<command execution_time="15">hold on; plot(newTLZ)</command>
<command execution_time="46">newTLZ = circshift(newTLZ',-74);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="31">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command execution_time="31">newTLZ = circshift(newTLZ',10);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command execution_time="15">newTLZ = circshift(newTLZ',20);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="16">newTLZ = circshift(newTLZ',20);</command>
<command execution_time="15">hold on; plot(newTLZ)</command>
<command execution_time="15">newTLZ = circshift(newTLZ',50);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="31">newTLZ = circshift(newTLZ',100);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="16">newTLZ = circshift(newTLZ',25);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="16">newTLZ = circshift(newTLZ',25);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command execution_time="31">atand(model.trimLines(1,2)/model.trimLines(1,1))</command>
<command execution_time="328">atand(model.trimLines(1,1)/model.trimLines(1,2))</command>
<command execution_time="62">tand(model.trimLines(1,2)/model.trimLines(1,1))</command>
<command execution_time="31">model.trimLines</command>
<command execution_time="94">figure; plot(atand(model.trimLines(:,2)./model.trimLines(:,1)))</command>
<command execution_time="93">figure; plot(atand(model.trimLines(:,2)./model.trimLines(:,1)),'x')</command>
<command error="true" execution_time="31">figure; plot(atand(newTLY./newTLX,'x')</command>
<command error="true" execution_time="125">figure; plot(atand(newTLY./newTLX,'x'))</command>
<command execution_time="78">figure; plot(atand(newTLY./newTLX),'x')</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="16">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command execution_time="31">newTLZ = circshift(newTLZ',10);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="15">newTLZ = circshift(newTLZ',20);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command execution_time="31">theta</command>
<command execution_time="31">90-72</command>
<command execution_time="31">90-16</command>
<command execution_time="31">theta</command>
<command error="true" execution_time="1029">figure; plot(cirshift((atand(newTLY./newTLX))',length(newTLX)-theta),'x')</command>
<command execution_time="94">figure; plot(circshift((atand(newTLY./newTLX))',length(newTLX)-theta),'x')</command>
<command execution_time="16">theta / model.angleStep</command>
<command execution_time="16">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command execution_time="16">theta / model.angleStep</command>
<command error="true" execution_time="78">figure; plot(circshift((atand(newTLY./newTLX))',length(newTLX)-theta+2),'x')</command>
<command execution_time="31">length(newTLX)-theta</command>
<command batch="925">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="925" execution_time="31">theta = round(theta / model.angleStep)</command>
<command execution_time="78">figure; plot(circshift((atand(newTLY./newTLX))',length(newTLX)-theta+2),'x')</command>
<command batch="926">trimLineExpand = 2; % mm</command>
<command batch="926">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="926">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="926">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="926">theta = round(theta / model.angleStep)+2;</command>
<command batch="926">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="926">[m n] = size(model.trimLines);</command>
<command batch="926">v = 1:m;</command>
<command batch="926">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="926">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="926">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="926">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="926">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="926" execution_time="156">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command batch="927" error="true">rimLineExpand = 2; % mm</command>
<command batch="927" error="true">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="927" error="true">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="927" error="true">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="927" error="true">theta = round(theta / model.angleStep)-2;</command>
<command batch="927" error="true">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="927" error="true">[m n] = size(model.trimLines);</command>
<command batch="927" error="true">v = 1:m;</command>
<command batch="927" error="true">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="927" error="true">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="927" error="true">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="927" error="true">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="927" error="true">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="927" error="true" execution_time="47">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command batch="928">trimLineExpand = 2; % mm</command>
<command batch="928">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="928">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="928">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="928">theta = round(theta / model.angleStep)-2;</command>
<command batch="928">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="928">[m n] = size(model.trimLines);</command>
<command batch="928">v = 1:m;</command>
<command batch="928">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="928">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="928">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="928">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="928">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="928" execution_time="172">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="94">figure; plot(newTLZ)</command>
<command batch="929">trimLineExpand = 2; % mm</command>
<command batch="929">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="929">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="929">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="929">theta = round(theta / model.angleStep)-10;</command>
<command batch="929">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="929">[m n] = size(model.trimLines);</command>
<command batch="929">v = 1:m;</command>
<command batch="929">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="929">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="929">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="929">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="929">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="929" execution_time="140">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="93">figure; plot(newTLZ)</command>
<command batch="930">trimLineExpand = 2; % mm</command>
<command batch="930">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="930">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="930">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="930">theta = round(theta / model.angleStep)-20;</command>
<command batch="930">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="930">[m n] = size(model.trimLines);</command>
<command batch="930">v = 1:m;</command>
<command batch="930">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="930">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="930">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="930">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="930">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="930" execution_time="172">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command batch="931">trimLineExpand = 2; % mm</command>
<command batch="931">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="931">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="931">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="931">theta = round(theta / model.angleStep)-11;</command>
<command batch="931">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="931">[m n] = size(model.trimLines);</command>
<command batch="931">v = 1:m;</command>
<command batch="931">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="931">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="931">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="931">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="931">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="931" execution_time="203">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command batch="932">trimLineExpand = 2; % mm</command>
<command batch="932">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="932">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="932">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="932">theta = round(theta / model.angleStep);</command>
<command batch="932">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="932">[m n] = size(model.trimLines);</command>
<command batch="932">v = 1:m;</command>
<command batch="932">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="932">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="932">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="932">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="932">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="932" execution_time="203">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="93">figure; plot(newTLZ)</command>
<command batch="933">trimLineExpand = 2; % mm</command>
<command batch="933">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="933">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="933">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="933">theta = round(theta / model.angleStep);</command>
<command batch="933">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="933">[m n] = size(model.trimLines);</command>
<command batch="933">v = 1:m;</command>
<command batch="933">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="933">% INTERPLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="933">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="933">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="933" execution_time="140">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="32">newTLZ = circshift(newTLZ',length(newTLZ)-theta);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="31">model</command>
<command error="true" execution_time="125">figure; plot(atan2(newTLY./newTLX),'x')</command>
<command execution_time="78">figure; plot(atan2(newTLY,newTLX),'x')</command>
<command execution_time="109">figure; plot(atan2d(newTLY,newTLX),'x')</command>
<command execution_time="78">figure; imagesc(difftmpDataR)</command>
<command execution_time="93">figure; plot(newTLZ)</command>
<command execution_time="15">length(newTLZ)-theta</command>
<command error="true" execution_time="78">figure(diff(atan2(newTLY,newTLX)))</command>
<command execution_time="79">figure; plot(diff(atan2(newTLY,newTLX)))</command>
<command execution_time="83786">templateLiner</command>
<command batch="934">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="934">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="934">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="934" execution_time="47">[~, loc] = min(diff(atan2(newTLY,newTLX)));</command>
<command execution_time="32">loc</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command batch="935">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="935">numSlices);</command>
<command batch="935">tmpDataX = reshape(model.data(:,1),model.numSlicePoints,...</command>
<command batch="935">numSlices);</command>
<command batch="935">tmpDataY = reshape(model.data(:,2),model.numSlicePoints,...</command>
<command batch="935">numSlices);</command>
<command batch="935">tmpDataR = sqrt(tmpDataX.^2 + tmpDataY.^2);</command>
<command batch="935" execution_time="78">difftmpDataR = diff(tmpDataR,1);</command>
<command execution_time="78">figure; imagesc(difftmpDataR)</command>
<command execution_time="15">newTLZ = circshift(newTLZ',loc);</command>
<command execution_time="16">hold on; plot(newTLZ)</command>
<command execution_time="16">90-78</command>
<command execution_time="78">figure; plot(atan2(newTLY,newTLX))</command>
<command execution_time="16">[~, loc] = min(abs(atan2(newTLY,newTLX)));</command>
<command execution_time="31">loc</command>
<command execution_time="78">figure; plot(abs(atan2(newTLY,newTLX)))</command>
<command execution_time="78">figure; plot(abs(atan2d(newTLY,newTLX)))</command>
<command execution_time="78">figure; plot(atan2d(newTLY,newTLX));</command>
<command batch="936">trimLineExpand = 2; % mm</command>
<command batch="936">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="936">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="936">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="936">theta = round(theta/model.angleStep);</command>
<command batch="936">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="936">[m n] = size(model.trimLines);</command>
<command batch="936">v = 1:m;</command>
<command batch="936">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="936">% INTERPOLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="936">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="936">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="936">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="936" execution_time="156">[~, loc] = min(abs(atan2d(newTLY,newTLX)));</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="15">newTLZ = circshift(newTLZ',loc);</command>
<command execution_time="78">figure; plot(newTLZ)</command>
<command execution_time="31">loc</command>
<command execution_time="15">90-loc</command>
<command batch="937">trimLineExpand = 2; % mm</command>
<command batch="937">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="937">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="937">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="937">theta = round(theta/model.angleStep);</command>
<command batch="937">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="937">[m n] = size(model.trimLines);</command>
<command batch="937">v = 1:m;</command>
<command batch="937">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="937">% INTERPOLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="937">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="937">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="937">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="937">[~, loc] = min(abs(atan2d(newTLY,newTLX)));</command>
<command batch="937" execution_time="171">newTLZ = circshift(newTLZ',model.numSlicePoints-loc);</command>
<command execution_time="31">hold on; plot(newTLZ)</command>
<command execution_time="350614" repeat="2">templateLiner</command>
<command execution_time="16">model = guidata(hObject);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="93">figure; plot(model.data(:,3),model.guiPerRed(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.guiPerRed(:,2))</command>
<command batch="938" error="true">templateLiner</command>
<command batch="938" error="true">set(model.handlePatch,'vertices',model.data);</command>
<command batch="938" error="true" execution_time="79772">drawnow;</command>
<command execution_time="3526">templateLiner</command>
<command batch="939">set(model.handlePatch,'vertices',model.data);</command>
<command batch="939" execution_time="172">drawnow;</command>
<command execution_time="3781">templateLiner</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command error="true" execution_time="31">adjustCir( hObject );</command>
<command batch="940">guidata(hObject,model);</command>
<command batch="940" execution_time="32">adjustCir( hObject );</command>
<command execution_time="16">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">model=guidata(hObject);</command>
<command execution_time="31">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="4700">templateLiner</command>
<command batch="941">guidata(hObject,model);</command>
<command batch="941" execution_time="46">adjustCir( hObject );</command>
<command batch="942">model = guidata(hObject);</command>
<command batch="942">set(model.handlePatch,'vertices',model.data);</command>
<command batch="942" execution_time="172">drawnow;</command>
<command execution_time="89697" repeat="2">templateLiner</command>
<command batch="943">model = guidata(hObject);</command>
<command batch="943">set(model.handlePatch,'vertices',model.data);</command>
<command batch="943" execution_time="172">drawnow;</command>
<command execution_time="78">figure; plot(model.data(:,1),model.data(:,2))</command>
<command execution_time="83633">templateLiner</command>
<command batch="944">model = guidata(hObject);</command>
<command batch="944">set(model.handlePatch,'vertices',model.data);</command>
<command batch="944" execution_time="171">drawnow;</command>
<command execution_time="468">clear all; close all</command>
<command execution_time="94">load('innerMold.mat')</command>
<command execution_time="109">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="93">load('outerMold.mat')</command>
<command execution_time="16">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="109">load('innerMold2.mat')</command>
<command execution_time="16">modelInner = model;</command>
<command error="true" execution_time="94">figure; plot(modelInner(:,3),modelInner(:,1))</command>
<command execution_time="78">figure; plot(modelInner.data(:,3),modelInner.data(:,1))</command>
<command execution_time="32">load('innerMold.mat')</command>
<command execution_time="15">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="62">figure; plot(model.data(:,1),model.data(:,2))</command>
<command execution_time="62">figure; plot(modelInner.data(:,1),modelInner.data(:,2))</command>
<command execution_time="78">figure; plot(modelInner.data(:,3),modelInner.data(:,2))</command>
<command execution_time="14351" repeat="3">templateLiner</command>
<command batch="945">model = guidata(hObject);</command>
<command batch="945">set(model.handlePatch,'vertices',model.data);</command>
<command batch="945" execution_time="171">drawnow;</command>
<command execution_time="6140" repeat="2">templateLiner</command>
<command execution_time="15">model = guidata(hObject);</command>
<command execution_time="93">figure; plot(model.data(:,3),model.data(:,1))</command>
<command error="true" execution_time="105810" repeat="9">templateLiner</command>
<command execution_time="78">figure; plot3(newTLX,newTLY,newTLZ)</command>
<command execution_time="146167">templateLiner</command>
<command execution_time="16">newTLZ = circshift(newTLZ',model.numSlicePoints-loc);</command>
<command batch="946">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="946">numSlices);</command>
<command batch="946">tmpDataX = reshape(model.data(:,1),model.numSlicePoints,...</command>
<command batch="946">numSlices);</command>
<command batch="946">tmpDataY = reshape(model.data(:,2),model.numSlicePoints,...</command>
<command batch="946">numSlices);</command>
<command batch="946">tmpR = sqrt(tmpDataX.^2+tmpDataY.^2);</command>
<command batch="946" execution_time="64">tmpDataSlop = diff(tmpR,1);</command>
<command execution_time="78">figure; imagesc(tmpDataSlop)</command>
<command execution_time="16">model.guiPerRed = trimLineExpand * bsxfun(@ge,tmpDataHeight,newTLZ);</command>
<command execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command error="true" execution_time="379">size(tmpData)</command>
<command execution_time="16">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command execution_time="32">size(tmpData)</command>
<command execution_time="16">size(model.guiPerRed)</command>
<command error="true" execution_time="125">figure; imagesc(abs(tmpData)./tmpData)</command>
<command execution_time="78">figure; imagesc(abs(tmpData(:,:,1))./tmpData(:,:,1))</command>
<command error="true" execution_time="31">foo = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed);</command>
<command execution_time="32">bsxfun(@times,ones(2,2,2),[5,6;4,6])</command>
<command batch="947">model.guiPerRed = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed); % unit vector</command>
<command batch="947" execution_time="31">model.guiPerRed = 1+(model.guiPerRed./tmpData);</command>
<command error="true" execution_time="78">figure; imagesc(model.guiPerRed)</command>
<command execution_time="94">figure; imagesc(model.guiPerRed(:,:,1))</command>
<command execution_time="78">figure; imagesc(model.guiPerRed(:,:,2))</command>
<command execution_time="32" repeat="2">size(model.guiPerRed)</command>
<command execution_time="15">size(tmpData)</command>
<command batch="948">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="948">model.guiPerRed = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed); % unit vector</command>
<command batch="948">model.guiPerRed = 1+(model.guiPerRed./tmpData);</command>
<command batch="948">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command batch="948">guidata(hObject,model);</command>
<command batch="948">adjustCir( hObject );</command>
<command batch="948">% DRAW SCENE</command>
<command batch="948">model = guidata(hObject);</command>
<command batch="948">set(model.handlePatch,'vertices',model.data);</command>
<command batch="948" execution_time="249">drawnow;</command>
<command execution_time="83546" repeat="4">templateLiner</command>
<command execution_time="78">figure; plot3(newTLX,newTLY,newTLZ)</command>
<command execution_time="32">hold on; plot3(model.trimLines(:,1),model.trimLines(:,2),model.trimLines(:,3))</command>
<command batch="949">hSlider = figure;</command>
<command batch="949">axis off;</command>
<command batch="949">name = 'Cylindrical adapter alignment';</command>
<command batch="949">set(hSlider,'Resize','off');</command>
<command batch="949">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="949">set(hSlider,'name',name);</command>
<command batch="949">set(hSlider,'NumberTitle','off');</command>
<command batch="949">set(hSlider,'MenuBar','none');</command>
<command batch="949">set(hSlider,'ToolBar','none');</command>
<command batch="949">set(hSlider,'Position',[2738 631 329 201]);</command>
<command batch="949">% CYLINDRICAL ADAPTER HEIGHT</command>
<command batch="949">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="949">'pixel','position',[15 170 150 20],...</command>
<command batch="949">'string','Adapter (mm): extend by');</command>
<command batch="949">% CYLINDRICAL ADAPTER HEIGHT INPUT</command>
<command batch="949">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="949">'pixel','position',[170 170 20 20],...</command>
<command batch="949">'string','0',...</command>
<command batch="949">'Callback',@heightCallBack);</command>
<command batch="949">% CYLINDRICAL ADAPTER WIDTH</command>
<command batch="949">hCycAdapWidth = uicontrol('style','text','units',...</command>
<command batch="949">'pixel','position',[195 170 40 20],...</command>
<command batch="949">'string','radius');</command>
<command batch="949">% CYLINDRICAL ADAPTER WIDTH INPUT</command>
<command batch="949">hCycAdapWidthInput = uicontrol('style','edit','units',...</command>
<command batch="949">'pixel','position',[240 170 20 20],...</command>
<command batch="949">'string','27',...</command>
<command batch="949">'Callback',@widthCallBack);</command>
<command batch="949">% AP (I.E., X) UI SLIDER</command>
<command batch="949">hSli = uicontrol('style','slider','units',...</command>
<command batch="949">'pixel','position',[15 50 300 20],...</command>
<command batch="949">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="949">'Callback',@apSliderCallBack);</command>
<command batch="949">% AP (I.E., X) UI SLIDETER NAME</command>
<command batch="949">hSli = uicontrol('style','text','units',...</command>
<command batch="949">'pixel','position',[15 80 300 20],...</command>
<command batch="949">'string','A-P alignment');</command>
<command batch="949">% ML (I.E., Y) UI SLIDER</command>
<command batch="949">hSli = uicontrol('style','slider','units',...</command>
<command batch="949">'pixel','position',[15 110 300 20],...</command>
<command batch="949">'Max',1,'Min',-1,'Value',0,...</command>
<command batch="949">'Callback',@mlSliderCallBack);</command>
<command batch="949">% ML (I.E., Y) UI SLIDETER NAME</command>
<command batch="949">hSli = uicontrol('style','text','units',...</command>
<command batch="949">'pixel','position',[15 140 300 20],...</command>
<command batch="949" execution_time="499">'string','M-L alignment');</command>
<command batch="950">hPrompt = figure;</command>
<command batch="950">axis off;</command>
<command batch="950">name = 'Trim lines';</command>
<command batch="950">%         set(hPrompt,'Resize','off');</command>
<command batch="950">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="950">set(hPrompt,'name',name);</command>
<command batch="950">set(hPrompt,'NumberTitle','off');</command>
<command batch="950">set(hPrompt,'MenuBar','none');</command>
<command batch="950">set(hPrompt,'ToolBar','none');</command>
<command batch="950">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="950">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="950">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="950">'pixel','position',[15 80 300 20],...</command>
<command batch="950">'string','0','string','Draw trim lines',...</command>
<command batch="950">'Callback',@drawTrimLines);</command>
<command batch="950">% TRIMLINE EXTEND BY</command>
<command batch="950">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="950">'pixel','position',[15 50 150 20],...</command>
<command batch="950">'string','Extend by (mm)');</command>
<command batch="950">% TRIMLINE EXTEND BY INPUT</command>
<command batch="950">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="950">'pixel','position',[170 50 20 20],...</command>
<command batch="950">'string','0',...</command>
<command batch="950">'Callback',@extendTrimLines);</command>
<command batch="950">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="950">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="950">'pixel','position',[15 30 300 20],...</command>
<command batch="950">'string','0','string','Add trim lines',...</command>
<command batch="950">'Callback',@addTrimLines);</command>
<command batch="950">% PUSH BUTTON (OK)</command>
<command batch="950">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="950">'pixel','position',[15 1 140 20],...</command>
<command batch="950">'string','0','string','OK',...</command>
<command batch="950">'Callback',@OK);</command>
<command batch="950">% PUSH BUTTON (CANCEL)</command>
<command batch="950">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="950">'pixel','position',[176 1 140 20],...</command>
<command batch="950">'string','0','string','Cancel',...</command>
<command batch="950" execution_time="437">'Callback',@Cancel);</command>
<command batch="951">hPrompt = figure;</command>
<command batch="951">axis off;</command>
<command batch="951">name = 'Trim lines';</command>
<command batch="951">%         set(hPrompt,'Resize','off');</command>
<command batch="951">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="951">set(hPrompt,'name',name);</command>
<command batch="951">set(hPrompt,'NumberTitle','off');</command>
<command batch="951">set(hPrompt,'MenuBar','none');</command>
<command batch="951">set(hPrompt,'ToolBar','none');</command>
<command batch="951">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="951">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="951">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="951">'pixel','position',[15 80 300 20],...</command>
<command batch="951">'string','0','string','Draw trim lines',...</command>
<command batch="951">'Callback',@drawTrimLines);</command>
<command batch="951">% TRIMLINE EXTEND BY</command>
<command batch="951">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="951">'pixel','position',[15 50 150 20],...</command>
<command batch="951">'string','Extend by (mm)');</command>
<command batch="951">% TRIMLINE EXTEND BY INPUT</command>
<command batch="951">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="951">'pixel','position',[170 50 20 20],...</command>
<command batch="951">'string','0',...</command>
<command batch="951">'Callback',@extendTrimLines);</command>
<command batch="951">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="951">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="951">'pixel','position',[15 20 300 20],...</command>
<command batch="951">'string','0','string','Add trim lines',...</command>
<command batch="951">'Callback',@addTrimLines);</command>
<command batch="951">% PUSH BUTTON (OK)</command>
<command batch="951">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="951">'pixel','position',[15 5 140 20],...</command>
<command batch="951">'string','0','string','OK',...</command>
<command batch="951">'Callback',@OK);</command>
<command batch="951">% PUSH BUTTON (CANCEL)</command>
<command batch="951">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="951">'pixel','position',[176 5 140 20],...</command>
<command batch="951">'string','0','string','Cancel',...</command>
<command batch="951" execution_time="422">'Callback',@Cancel);</command>
<command batch="952">hPrompt = figure;</command>
<command batch="952">axis off;</command>
<command batch="952">name = 'Trim lines';</command>
<command batch="952">%         set(hPrompt,'Resize','off');</command>
<command batch="952">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="952">set(hPrompt,'name',name);</command>
<command batch="952">set(hPrompt,'NumberTitle','off');</command>
<command batch="952">set(hPrompt,'MenuBar','none');</command>
<command batch="952">set(hPrompt,'ToolBar','none');</command>
<command batch="952">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="952">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="952">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="952">'pixel','position',[15 85 300 20],...</command>
<command batch="952">'string','0','string','Draw trim lines',...</command>
<command batch="952">'Callback',@drawTrimLines);</command>
<command batch="952">% TRIMLINE EXTEND BY</command>
<command batch="952">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="952">'pixel','position',[15 55 150 20],...</command>
<command batch="952">'string','Extend by (mm)');</command>
<command batch="952">% TRIMLINE EXTEND BY INPUT</command>
<command batch="952">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="952">'pixel','position',[170 55 20 20],...</command>
<command batch="952">'string','0',...</command>
<command batch="952">'Callback',@extendTrimLines);</command>
<command batch="952">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="952">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="952">'pixel','position',[15 25 300 20],...</command>
<command batch="952">'string','0','string','Add trim lines',...</command>
<command batch="952">'Callback',@addTrimLines);</command>
<command batch="952">% PUSH BUTTON (OK)</command>
<command batch="952">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="952">'pixel','position',[15 5 140 20],...</command>
<command batch="952">'string','0','string','OK',...</command>
<command batch="952">'Callback',@OK);</command>
<command batch="952">% PUSH BUTTON (CANCEL)</command>
<command batch="952">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="952">'pixel','position',[176 5 140 20],...</command>
<command batch="952">'string','0','string','Cancel',...</command>
<command batch="952" execution_time="437">'Callback',@Cancel);</command>
<command batch="953">hPrompt = figure;</command>
<command batch="953">axis off;</command>
<command batch="953">name = 'Trim lines';</command>
<command batch="953">%         set(hPrompt,'Resize','off');</command>
<command batch="953">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="953">set(hPrompt,'name',name);</command>
<command batch="953">set(hPrompt,'NumberTitle','off');</command>
<command batch="953">set(hPrompt,'MenuBar','none');</command>
<command batch="953">set(hPrompt,'ToolBar','none');</command>
<command batch="953">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="953">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="953">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="953">'pixel','position',[15 85 300 20],...</command>
<command batch="953">'string','0','string','Draw trim lines',...</command>
<command batch="953">'Callback',@drawTrimLines);</command>
<command batch="953">% TRIMLINE EXTEND BY</command>
<command batch="953">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="953">'pixel','position',[15 55 150 20],...</command>
<command batch="953">'string','Extend by (mm)');</command>
<command batch="953">% TRIMLINE EXTEND BY INPUT</command>
<command batch="953">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="953">'pixel','position',[170 55 20 20],...</command>
<command batch="953">'string','0',...</command>
<command batch="953">'Callback',@extendTrimLines);</command>
<command batch="953">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="953">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="953">'pixel','position',[15 35 300 20],...</command>
<command batch="953">'string','0','string','Add trim lines',...</command>
<command batch="953">'Callback',@addTrimLines);</command>
<command batch="953">% PUSH BUTTON (OK)</command>
<command batch="953">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="953">'pixel','position',[15 5 140 20],...</command>
<command batch="953">'string','0','string','OK',...</command>
<command batch="953">'Callback',@OK);</command>
<command batch="953">% PUSH BUTTON (CANCEL)</command>
<command batch="953">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="953">'pixel','position',[176 5 140 20],...</command>
<command batch="953">'string','0','string','Cancel',...</command>
<command batch="953" execution_time="411">'Callback',@Cancel);</command>
<command batch="954">hPrompt = figure;</command>
<command batch="954">axis off;</command>
<command batch="954">name = 'Trim lines';</command>
<command batch="954">%         set(hPrompt,'Resize','off');</command>
<command batch="954">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="954">set(hPrompt,'name',name);</command>
<command batch="954">set(hPrompt,'NumberTitle','off');</command>
<command batch="954">set(hPrompt,'MenuBar','none');</command>
<command batch="954">set(hPrompt,'ToolBar','none');</command>
<command batch="954">set(hPrompt,'Position',[2738 520 329 112]);</command>
<command batch="954">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="954">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="954">'pixel','position',[15 95 300 20],...</command>
<command batch="954">'string','0','string','Draw trim lines',...</command>
<command batch="954">'Callback',@drawTrimLines);</command>
<command batch="954">% TRIMLINE EXTEND BY</command>
<command batch="954">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="954">'pixel','position',[15 65 150 20],...</command>
<command batch="954">'string','Extend by (mm)');</command>
<command batch="954">% TRIMLINE EXTEND BY INPUT</command>
<command batch="954">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="954">'pixel','position',[170 65 20 20],...</command>
<command batch="954">'string','0',...</command>
<command batch="954">'Callback',@extendTrimLines);</command>
<command batch="954">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="954">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="954">'pixel','position',[15 35 300 20],...</command>
<command batch="954">'string','0','string','Add trim lines',...</command>
<command batch="954">'Callback',@addTrimLines);</command>
<command batch="954">% PUSH BUTTON (OK)</command>
<command batch="954">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="954">'pixel','position',[15 5 140 20],...</command>
<command batch="954">'string','0','string','OK',...</command>
<command batch="954">'Callback',@OK);</command>
<command batch="954">% PUSH BUTTON (CANCEL)</command>
<command batch="954">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="954">'pixel','position',[176 5 140 20],...</command>
<command batch="954">'string','0','string','Cancel',...</command>
<command batch="954" execution_time="422">'Callback',@Cancel);</command>
<command execution_time="31">get(hPrompt,'position')</command>
<command batch="955">hPrompt = figure;</command>
<command batch="955">axis off;</command>
<command batch="955">name = 'Trim lines';</command>
<command batch="955">%         set(hPrompt,'Resize','off');</command>
<command batch="955">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="955">set(hPrompt,'name',name);</command>
<command batch="955">set(hPrompt,'NumberTitle','off');</command>
<command batch="955">set(hPrompt,'MenuBar','none');</command>
<command batch="955">set(hPrompt,'ToolBar','none');</command>
<command batch="955">set(hPrompt,'Position',[2531 633 329 121]);</command>
<command batch="955">% PUSH BUTTON (START ADD TRIM LINES)</command>
<command batch="955">hDrawTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="955">'pixel','position',[15 95 300 20],...</command>
<command batch="955">'string','0','string','Draw trim lines',...</command>
<command batch="955">'Callback',@drawTrimLines);</command>
<command batch="955">% TRIMLINE EXTEND BY</command>
<command batch="955">hCycAdapHeight = uicontrol('style','text','units',...</command>
<command batch="955">'pixel','position',[15 65 150 20],...</command>
<command batch="955">'string','Extend by (mm)');</command>
<command batch="955">% TRIMLINE EXTEND BY INPUT</command>
<command batch="955">hCycAdapHeightInput = uicontrol('style','edit','units',...</command>
<command batch="955">'pixel','position',[170 65 20 20],...</command>
<command batch="955">'string','0',...</command>
<command batch="955">'Callback',@extendTrimLines);</command>
<command batch="955">% PUSH BUTTON (ADD TRIM LINES)</command>
<command batch="955">hAddTrimLines = uicontrol('style','pushbutton','units',...</command>
<command batch="955">'pixel','position',[15 35 300 20],...</command>
<command batch="955">'string','0','string','Add trim lines',...</command>
<command batch="955">'Callback',@addTrimLines);</command>
<command batch="955">% PUSH BUTTON (OK)</command>
<command batch="955">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="955">'pixel','position',[15 5 140 20],...</command>
<command batch="955">'string','0','string','OK',...</command>
<command batch="955">'Callback',@OK);</command>
<command batch="955">% PUSH BUTTON (CANCEL)</command>
<command batch="955">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="955">'pixel','position',[176 5 140 20],...</command>
<command batch="955">'string','0','string','Cancel',...</command>
<command batch="955" execution_time="422">'Callback',@Cancel);</command>
<command batch="956" error="true">templateLiner</command>
<command batch="956" error="true">close all</command>
<command batch="956" error="true">templateLiner</command>
<command batch="956" error="true" execution_time="243761">errordlg('Draw trim line');</command>
<command error="true" execution_time="107281" repeat="9">templateLiner</command>
<command execution_time="16">test.foo = 1;</command>
<command error="true" execution_time="386">fieldexists('test','foo')</command>
<command execution_time="32">fieldnames(test)</command>
<command error="true" execution_time="389">strcmp('foo',fielnames(test))</command>
<command execution_time="16">strcmp('foo',fieldnames(test))</command>
<command execution_time="31">strcmp('foo1',fieldnames(test))</command>
<command execution_time="16">test.foo = 1;</command>
<command error="true" execution_time="29755" repeat="2">templateLiner</command>
<command execution_time="31">strcmp('trimLines',fieldnames(model))</command>
<command execution_time="31">any(strcmp('trimLines',fieldnames(model)))</command>
<command error="true" execution_time="86846" repeat="4">templateLiner</command>
<command execution_time="562" repeat="2">main</command>
</session>
<session>
<command time_stamp="15189617ec3">%-- 12/9/2015 7:54 PM --%</command>
<command error="true" execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V.2');</command>
<command execution_time="78">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="4573">main</command>
<command error="true" execution_time="483" repeat="2">hObject</command>
<command execution_time="15">hEventData</command>
</session>
<session>
<command time_stamp="15189738dba">%-- 12/9/2015 8:13 PM --%</command>
<command execution_time="124">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1201">main</command>
<command execution_time="15">model</command>
<command execution_time="32" repeat="2">model.guiCylAdapHeight</command>
</session>
<session>
<command time_stamp="15189853af0">%-- 12/9/2015 8:33 PM --%</command>
<command execution_time="281">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1139">main</command>
</session>
<session>
<command time_stamp="15189916d43">%-- 12/9/2015 8:46 PM --%</command>
<command execution_time="359">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1373">main</command>
<command execution_time="78">load('savasTest2.mat')</command>
<command execution_time="31">model</command>
<command execution_time="281">figure; plot(model.data(:,3),model.data(:,1))</command>
</session>
<session>
<command time_stamp="1518998696c">%-- 12/9/2015 8:54 PM --%</command>
<command execution_time="140">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1296">main</command>
<command batch="957">selection = questdlg('Exit limbRevolution.CAD?',...</command>
<command batch="957">'Close Request Function',...</command>
<command batch="957">'Yes','No','Yes');</command>
<command batch="957">switch selection,</command>
<command batch="957">case 'Yes',</command>
<command batch="957">delete(gcf)</command>
<command batch="957">case 'No'</command>
<command batch="957">return</command>
<command batch="957" execution_time="9839">end</command>
</session>
<session>
<command time_stamp="15189a4c6e9">%-- 12/9/2015 9:07 PM --%</command>
<command execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1046">main</command>
<command execution_time="78">figure;</command>
<command execution_time="15">a=get(gcf,'Position');</command>
<command execution_time="31">a</command>
</session>
<session>
<command time_stamp="15189ac6f72">%-- 12/9/2015 9:15 PM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1219">main</command>
<command execution_time="31">201-172</command>
<command execution_time="16" repeat="2">201-121</command>
<command execution_time="31">201-112</command>
</session>
<session>
<command time_stamp="15189bbebe8">%-- 12/9/2015 9:32 PM --%</command>
<command execution_time="375">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1639">main</command>
<command batch="958" error="true">selection = questdlg('Exit limbRevolution.CAD? Your work won''t be saved',...</command>
<command batch="958" error="true">'',...</command>
<command batch="958" error="true">'Yes','No','Yes');</command>
<command batch="958" error="true">switch selection,</command>
<command batch="958" error="true">case 'Yes',</command>
<command batch="958" error="true">delete(hObject);</command>
<command batch="958" error="true">% FIGURE THIS OUT LATER-TYLER FROM THE PAST :)</command>
<command batch="958" error="true">%                 delete(jFrame);</command>
<command batch="958" error="true">case 'No'</command>
<command batch="958" error="true">return</command>
<command batch="958" error="true" execution_time="9511">end</command>
<command batch="959">selection = questdlg('Exit limbRevolution.CAD? \n Your work won''t be saved.',...</command>
<command batch="959">'',...</command>
<command batch="959">'Yes','No','Yes');</command>
<command batch="959">switch selection,</command>
<command batch="959">case 'Yes',</command>
<command batch="959">delete(hObject);</command>
<command batch="959">% FIGURE THIS OUT LATER-TYLER FROM THE PAST :)</command>
<command batch="959">%                 delete(jFrame);</command>
<command batch="959">case 'No'</command>
<command batch="959">return</command>
<command batch="959" execution_time="2266">end</command>
</session>
<session>
<command time_stamp="15189c4d620">%-- 12/9/2015 9:42 PM --%</command>
<command error="true" execution_time="356">main</command>
<command execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1124">main</command>
</session>
<session>
<command time_stamp="15189d38269">%-- 12/9/2015 9:58 PM --%</command>
<command execution_time="140">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1313">main</command>
<command execution_time="16">toggleCylAdap</command>
<command execution_time="16">model</command>
<command execution_time="32">toggleCylAdap</command>
<command execution_time="16" repeat="2">get(hSlider,'Position')</command>
<command execution_time="16">592-454</command>
<command execution_time="15">hObjectPos</command>
<command batch="960">hSlider = figure;</command>
<command batch="960">axis off;</command>
<command batch="960">name = 'Cylindrical adapter alignment';</command>
<command batch="960">set(hSlider,'Resize','off');</command>
<command batch="960">set(hSlider,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="960">set(hSlider,'name',name);</command>
<command batch="960">set(hSlider,'NumberTitle','off');</command>
<command batch="960">set(hSlider,'MenuBar','none');</command>
<command batch="960">set(hSlider,'ToolBar','none');</command>
<command batch="960">hObjectPos=get(hObject,'Position');</command>
<command batch="960" execution_time="546">set(hSlider,'Position',[hObjectPos(1)-329, hObjectPos(2), 329, 201]);</command>
<command execution_time="72">model.hl</command>
<command execution_time="17">delete(model.hl)</command>
<command execution_time="25" repeat="2">model.hl</command>
<command execution_time="20">delete(model.hl)</command>
<command execution_time="28">model.hl</command>
<command execution_time="19">set(model.hl,'XData',[])</command>
<command execution_time="20">set(model.hl,'XData',[],'YData',[],'ZData',[])</command>
<command execution_time="22">drawnow</command>
<command execution_time="25">model.hl</command>
</session>
<session>
<command time_stamp="15189f0c1a2">%-- 12/9/2015 10:30 PM --%</command>
<command execution_time="103">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1058">main</command>
<command execution_time="63">camzoom(10)</command>
<command error="true" execution_time="663">camzomm(-10)</command>
<command error="true" execution_time="62">camzoom(-10)</command>
<command execution_time="31">camzoom(.5)</command>
<command execution_time="16">camzoom(.1)</command>
<command execution_time="1125">zoom(2)</command>
<command execution_time="46">zoom(.5)</command>
</session>
<session>
<command time_stamp="15189f90af7">%-- 12/9/2015 10:39 PM --%</command>
<command execution_time="140">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1237">main</command>
<command error="true" execution_time="634">zoomcam(1.1)</command>
<command execution_time="31">camzoom(1.1)</command>
<command execution_time="15">zm</command>
<command execution_time="78">zm = zm*1.1;</command>
<command execution_time="15">camzoom(zm);</command>
<command execution_time="16">zm</command>
<command execution_time="31">zm = 1;</command>
<command batch="961">zm = zm*1.1;</command>
<command batch="961" execution_time="31">camzoom(zm);</command>
</session>
<session>
<command time_stamp="1518a02fdb7">%-- 12/9/2015 10:50 PM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1281">main</command>
</session>
<session>
<command time_stamp="1518a049a98">%-- 12/9/2015 10:52 PM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1046">main</command>
</session>
<session>
<command time_stamp="1518a0be626">%-- 12/9/2015 11:00 PM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="3728">main</command>
</session>
<session>
<command time_stamp="1518a24e933">%-- 12/9/2015 11:27 PM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1092">main</command>
</session>
<session>
<command time_stamp="1518a492920">%-- 12/10/2015 12:07 AM --%</command>
<command execution_time="78">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1031">main</command>
</session>
<session>
<command time_stamp="1518a4cf7c4">%-- 12/10/2015 12:11 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1046">main</command>
</session>
<session>
<command time_stamp="1518a58e64c">%-- 12/10/2015 12:24 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1031">main</command>
<command batch="962">delete</command>
</session>
<session>
<command time_stamp="1518a605fb5">%-- 12/10/2015 12:32 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1030">main</command>
</session>
<session>
<command time_stamp="1518a61c4fd">%-- 12/10/2015 12:34 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1029">main</command>
</session>
<session>
<command time_stamp="1518a65426c">%-- 12/10/2015 12:37 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1045">main</command>
</session>
<session>
<command time_stamp="1518a679bab">%-- 12/10/2015 12:40 AM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1005">main</command>
<command execution_time="234">set(hObject,'WindowButtonMotionFcn',{@handleMouseMove});</command>
<command execution_time="62">close(handle.Parent);</command>
<command execution_time="63">delete(handle.Parent)</command>
</session>
<session>
<command time_stamp="1518a6e2320">%-- 12/10/2015 12:47 AM --%</command>
<command execution_time="172">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1031">main</command>
<command batch="963">getAlign([],[]);</command>
<command batch="963" execution_time="61672">toggleAlign</command>
</session>
<session>
<command time_stamp="1518a78a5a3">%-- 12/10/2015 12:59 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1076">main</command>
<command execution_time="15">size(model.guiPerRed)</command>
<command execution_time="359">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command execution_time="32">size(tmpData)</command>
<command execution_time="16">tmpData = bsxfun(@times,tmpData,model.guiPerRed');</command>
<command execution_time="16">model.data(:,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,2);</command>
<command execution_time="125">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">model.data(:,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,2);</command>
<command execution_time="46">hold on; plot(model.data(:,3),model.data(:,1))</command>
</session>
<session>
<command time_stamp="1518a81e603">%-- 12/10/2015 1:09 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1077">main</command>
</session>
<session>
<command time_stamp="1518a8670d6">%-- 12/10/2015 1:14 AM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1092">main</command>
</session>
<session>
<command time_stamp="1518a88b14c">%-- 12/10/2015 1:16 AM --%</command>
<command execution_time="189">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1076">main</command>
</session>
<session>
<command time_stamp="1518c08d838">%-- 12/10/2015 8:16 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1529">main</command>
</session>
<session>
<command time_stamp="1518c12e012">%-- 12/10/2015 8:27 AM --%</command>
<command execution_time="359">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1701">main</command>
<command execution_time="78" repeat="3">figure; plot(model.tmpLandmarks)</command>
<command execution_time="31">guidata(hObject,model);</command>
<command execution_time="94">figure; plot(model.tmpLandmarks)</command>
<command execution_time="31">min(model.tmpLandmarks)</command>
<command execution_time="31">idxLandmark</command>
<command execution_time="31">model = guidata(hObject);</command>
<command execution_time="78">figure; plot(model.tmpLandmarks)</command>
<command batch="964">model.tmpLandmarks(idxLandmark:idxLandmark+model.numSlicePoints-1)=0;</command>
<command batch="964">set(model.handlePatch,'CData',model.tmpLandmarks);</command>
<command batch="964">drawnow;</command>
<command batch="964" execution_time="187">guidata(hObject,model);</command>
<command execution_time="78">figure; plot(model.tmpLandmarks)</command>
<command batch="965">model.tmpLandmarks(idxLandmark:idxLandmark+model.numSlicePoints-1)=0;</command>
<command batch="965">set(model.handlePatch,'CData',model.tmpLandmarks);</command>
<command batch="965">drawnow;</command>
<command batch="965" execution_time="187">guidata(hObject,model);</command>
</session>
<session>
<command time_stamp="1518c7b7aa7">%-- 12/10/2015 10:21 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1060">main</command>
<command batch="966" error="true">hPrompt = figure;</command>
<command batch="966" error="true">axis off;</command>
<command batch="966" error="true">name = 'Extend model';</command>
<command batch="966" error="true">set(hPrompt,'Resize','off');</command>
<command batch="966" error="true">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="966" error="true">set(hPrompt,'name',name);</command>
<command batch="966" error="true">set(hPrompt,'NumberTitle','off');</command>
<command batch="966" error="true">set(hPrompt,'MenuBar','none');</command>
<command batch="966" error="true">set(hPrompt,'ToolBar','none');</command>
<command batch="966" error="true">hObjectPos=get(hObject,'Position');</command>
<command batch="966" error="true">set(hPrompt,'Position',[hObjectPos(1)-329 hObjectPos(2) 329 112]);</command>
<command batch="966" error="true">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="966" error="true">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="966" error="true">'pixel','position',[15 80 300 20],...</command>
<command batch="966" error="true">'string','0','string','Select top of section',...</command>
<command batch="966" error="true">'Callback',@topCallBack);</command>
<command batch="966" error="true">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="966" error="true">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="966" error="true">'pixel','position',[15 50 300 20],...</command>
<command batch="966" error="true">'string','0','string','Select bottom of section',...</command>
<command batch="966" error="true">'Callback',@bottomCallBack);</command>
<command batch="966" error="true">% EXTEND MODEL BY (TEXT)</command>
<command batch="966" error="true">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="966" error="true">'pixel','position',[15 20 140 20],...</command>
<command batch="966" error="true">'string','Extend by (mm):');</command>
<command batch="966" error="true">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="966" error="true">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="966" error="true">'pixel','position',[175 20 140 20],...</command>
<command batch="966" error="true">'string','0',...</command>
<command batch="966" error="true">'Callback',@extendByCallBack);</command>
<command batch="966" error="true">% PUSH BUTTON (OK)</command>
<command batch="966" error="true">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="966" error="true">'pixel','position',[15 5 150 20],...</command>
<command batch="966" error="true">'string','0','string','OK',...</command>
<command batch="966" error="true">'Callback',@OK);</command>
<command batch="966" error="true">% PUSH BUTTON (Cancel)</command>
<command batch="966" error="true">hCancel = uicontrol('style','pushbutton','units',...</command>
<command batch="966" error="true">'pixel','position',[15 5 165 20],...</command>
<command batch="966" error="true">'string','0','string','Cancel',...</command>
<command batch="966" error="true" execution_time="6686">'Callback',@Cancel);</command>
<command batch="967">hPrompt = figure;</command>
<command batch="967">axis off;</command>
<command batch="967">name = 'Extend model';</command>
<command batch="967">set(hPrompt,'Resize','off');</command>
<command batch="967">set(hPrompt,'color',[0.192156862745098 0.188235294117647 0.188235294117647]);</command>
<command batch="967">set(hPrompt,'name',name);</command>
<command batch="967">set(hPrompt,'NumberTitle','off');</command>
<command batch="967">set(hPrompt,'MenuBar','none');</command>
<command batch="967" execution_time="156">set(hPrompt,'ToolBar','none');</command>
<command batch="968">% PUSH BUTTON (SELECT TOP OF SECTION)</command>
<command batch="968">hTopOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="968">'pixel','position',[15 80 300 20],...</command>
<command batch="968">'string','0','string','Select top of section',...</command>
<command batch="968">'Callback',@topCallBack);</command>
<command batch="968">% PUSH BUTTON (SELECT BOTTOM OF SECTION)</command>
<command batch="968">hButtomOfSection = uicontrol('style','pushbutton','units',...</command>
<command batch="968">'pixel','position',[15 50 300 20],...</command>
<command batch="968">'string','0','string','Select bottom of section',...</command>
<command batch="968">'Callback',@bottomCallBack);</command>
<command batch="968">% EXTEND MODEL BY (TEXT)</command>
<command batch="968">hExtendBy = uicontrol('style','text','units',...</command>
<command batch="968">'pixel','position',[15 20 140 20],...</command>
<command batch="968">'string','Extend by (mm):');</command>
<command batch="968">% EXTEND MODEL BY (UI INPUT)</command>
<command batch="968">hExtendBy = uicontrol('style','edit','units',...</command>
<command batch="968">'pixel','position',[175 20 140 20],...</command>
<command batch="968">'string','0',...</command>
<command batch="968">'Callback',@extendByCallBack);</command>
<command batch="968">% PUSH BUTTON (OK)</command>
<command batch="968">hOK = uicontrol('style','pushbutton','units',...</command>
<command batch="968">'pixel','position',[15 5 150 20],...</command>
<command batch="968">'string','0','string','OK',...</command>
<command batch="968">'Callback',@OK);</command>
<command batch="968">% PUSH BUTTON (Cancel)</command>
<command batch="968">hCancel = uicontrol('style','pushbutton','units',...</command>
<command batch="968">'pixel','position',[15 5 165 20],...</command>
<command batch="968">'string','0','string','Cancel',...</command>
<command batch="968" execution_time="265">'Callback',@Cancel);</command>
<command error="true" execution_time="4229">get('Position')</command>
<command execution_time="16">model</command>
</session>
<session>
<command time_stamp="1518cb8a99b">%-- 12/10/2015 11:28 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1014">main</command>
</session>
<session>
<command time_stamp="1518cbd89df">%-- 12/10/2015 11:33 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="999">main</command>
</session>
<session>
<command time_stamp="1518cc203fc">%-- 12/10/2015 11:38 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1264">main</command>
</session>
<session>
<command time_stamp="1518cc42683">%-- 12/10/2015 11:40 AM --%</command>
<command execution_time="124">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1014">main</command>
<command batch="969">tmp = find(model.trimLines(:,3)&gt;0);</command>
<command batch="969">model.trimLines = model.trimLines(tmp,:);</command>
<command batch="969">theta = atand(model.trimLines(1,2)/model.trimLines(1,1));</command>
<command batch="969">theta = round(theta/model.angleStep);</command>
<command batch="969">numSlices = model.numSliceHeights/model.numSlicePoints;</command>
<command batch="969">[m n] = size(model.trimLines);</command>
<command batch="969">v = 1:m;</command>
<command batch="969">xq = linspace(1,m,model.numSlicePoints);</command>
<command batch="969">% INTERPOLATE TRIM LINE X, Y AND Z DATA</command>
<command batch="969">newTLZ = interp1(v,model.trimLines(:,3),xq);</command>
<command batch="969">newTLX = interp1(v,model.trimLines(:,1),xq);</command>
<command batch="969">newTLY = interp1(v,model.trimLines(:,2),xq);</command>
<command batch="969">[~, loc] = min(abs(atan2d(newTLY,newTLX)));</command>
<command batch="969">newTLZ = circshift(newTLZ',model.numSlicePoints-loc);</command>
<command batch="969">% DRAW TRIMLINE</command>
<command batch="969">%                 hl2 = line(hObject,'XData',newTLX,'YData',newTLY,...</command>
<command batch="969">%                     'ZData',newTLZ,'Marker','o','Color','m');</command>
<command batch="969">%                 drawnow;</command>
<command batch="969">% ADD TRIM LINES</command>
<command batch="969">tmpDataHeight = reshape(model.data(:,3),model.numSlicePoints,...</command>
<command batch="969">numSlices);</command>
<command batch="969">%                     tmpDataX = reshape(model.data(:,1),model.numSlicePoints,...</command>
<command batch="969">%                         numSlices);</command>
<command batch="969">%                     tmpDataY = reshape(model.data(:,2),model.numSlicePoints,...</command>
<command batch="969">%                         numSlices);</command>
<command batch="969">%                     tmpR = sqrt(tmpDataX.^2+tmpDataY.^2);</command>
<command batch="969">%                     tmpDataSlop = diff(tmpR,1);</command>
<command batch="969">model.guiPerRed = model.trimLineExpand * bsxfun(@ge,tmpDataHeight,newTLZ);</command>
<command batch="969">tmpData = reshape(model.data(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="969">model.guiPerRed = bsxfun(@times,abs(tmpData)./tmpData,model.guiPerRed); % unit vector</command>
<command batch="969">model.guiPerRed = 1+(model.guiPerRed./tmpData);</command>
<command batch="969">model.guiPerRed = reshape(model.guiPerRed,model.numSlicePoints*numSlices,2);</command>
<command batch="969">guidata(hObject,model);</command>
<command batch="969">adjustCir( hObject );</command>
<command batch="969">% DRAW SCENE</command>
<command batch="969">set(model.handlePatch,'vertices',model.data);</command>
<command batch="969" execution_time="530">drawnow;</command>
</session>
<session>
<command time_stamp="1518cd21a3d">%-- 12/10/2015 11:55 AM --%</command>
<command execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1014">main</command>
<command batch="970">guidata(hObject,model);</command>
<command batch="970">set(model.handlePatch,'vertices',model.data);</command>
<command batch="970" execution_time="203">drawnow;</command>
<command execution_time="141">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,2))</command>
</session>
<session>
<command time_stamp="1518cea73bd">%-- 12/10/2015 12:22 PM --%</command>
<command execution_time="2248">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1061">main</command>
</session>
<session>
<command time_stamp="1518cec708f">%-- 12/10/2015 12:24 PM --%</command>
<command execution_time="110">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1014">main</command>
</session>
<session>
<command time_stamp="1518cee8cc0">%-- 12/10/2015 12:27 PM --%</command>
<command execution_time="141">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1014">main</command>
<command execution_time="15" repeat="2">set(hObject,'WindowButtonMotionFcn',{@handleMouseMove});</command>
<command execution_time="47">hJava</command>
<command execution_time="31">hEventData</command>
<command execution_time="32">hEventData(1)</command>
<command execution_time="31">size(hEventData)</command>
<command execution_time="31" repeat="2">hEventData(1)</command>
</session>
<session>
<command time_stamp="1518d0b5dd7">%-- 12/10/2015 12:58 PM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1341">main</command>
<command execution_time="15" repeat="4">cla</command>
</session>
<session>
<command time_stamp="1518d104a74">%-- 12/10/2015 1:03 PM --%</command>
<command execution_time="468">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1358">main</command>
<command batch="971" error="true">newSectionZ = reshape(newSectionZ,model.numSlicePoints*...</command>
<command batch="971" error="true" execution_time="46">tmpNewNumSliceHeights,1);</command>
<command execution_time="31">size(newSectionZ)</command>
<command execution_time="15">size(tmpNewNumSliceHeights)</command>
<command error="true" execution_time="1509">tmpNewNulSliceHeights</command>
<command execution_time="31">tmpNewNumSliceHeights</command>
<command execution_time="16">newSectionZ = section(1,3):model.sliceHeightStep:section(end,3)+extendBy;</command>
<command execution_time="15">size(newSectionZ)</command>
<command execution_time="32">tmpNewNumSliceHeights</command>
<command execution_time="15">extendBy</command>
<command execution_time="15">extendBy / model.sliceHeightStep</command>
<command execution_time="31">str2double(handle.String)/model.sliceHeightStep</command>
<command execution_time="16">size(section)</command>
<command batch="972" error="true">newSectionX = interp1(v,tmpSectionX,xq);</command>
<command batch="972" error="true">newSectionY = interp1(v,tmpSectionY,xq);</command>
<command batch="972" error="true" execution_time="173">newSectionZ = interp1(v,tmpSectionZ,xq);</command>
<command error="true" execution_time="46">newSectionX = interp1(v,tmpSectionX,xq);</command>
<command execution_time="16">size(tmpSectionX)</command>
<command execution_time="31">size(v)</command>
<command batch="973">v = 1:tmpNumSliceHeights;</command>
<command batch="973">v = repmat(v,model.numSlicePoints,1);</command>
<command batch="973">xq = linspace(1,tmpNumSliceHeights,tmpNewNumSliceHeights);</command>
<command batch="973" execution_time="31">xq = repmat(xq,model.numSlicePoints,1);</command>
<command execution_time="31">size(v)</command>
<command execution_time="31">size(xq)</command>
<command batch="974">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="974">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="974" execution_time="31">tmpSectionZ = reshape(section(:,3),model.numSlicePoints,tmpNumSliceHeights);</command>
<command error="true" execution_time="63">newSectionX = interp1(v,tmpSectionX,xq);</command>
<command error="true" execution_time="32">newSectionX = interp1(v',tmpSectionX',xq');</command>
<command error="true" execution_time="47">newSectionX = interp1(v,tmpSectionX',xq);</command>
<command batch="975">v = 1:tmpNumSliceHeights;</command>
<command batch="975">%                 v = repmat(v,model.numSlicePoints,1);</command>
<command batch="975" execution_time="31">xq = linspace(1,tmpNumSliceHeights,tmpNewNumSliceHeights);</command>
<command execution_time="31">size(v)</command>
<command execution_time="156">newSectionX = interp1(v,tmpSectionX',xq);</command>
<command execution_time="31">size(newSectionX)</command>
<command execution_time="15">newSectionX = interp1(v,tmpSectionX',xq)';</command>
<command execution_time="31">size(newSectionX)</command>
<command batch="976">newSectionX = interp1(v,tmpSectionX',xq)';</command>
<command batch="976">newSectionY = interp1(v,tmpSectionY',xq)';</command>
<command batch="976" execution_time="47">newSectionZ = interp1(v,tmpSectionZ',xq)';</command>
<command batch="977">newSectionX = reshape(newSectionX,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="977">newSectionY = reshape(newSectionY,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="977">%                 newSectionZ = section(1,3):model.sliceHeightStep:section(end,3)+extendBy;</command>
<command batch="977">%                 newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command batch="977" execution_time="47">newSectionZ = reshape(newSectionZ,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="978">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ],...</command>
<command batch="978" execution_time="16">orgTop);</command>
<command batch="979">model.faces = bsxfun(@plus, ones(model.numSlicePoints*(length(model.sliceHeights)-1)-1,4),...</command>
<command batch="979">(0:(model.numSlicePoints*(length(model.sliceHeights)-1)-2))');</command>
<command batch="979">model.faces = bsxfun(@plus,model.faces,[0,1,1+model.numSlicePoints,model.numSlicePoints]);</command>
<command batch="979">% DRAW SCENE</command>
<command batch="979">set(model.handlePatch,'vertices',model.data,'faces',model.faces);</command>
<command batch="979" execution_time="187">drawnow;</command>
</session>
<session>
<command time_stamp="1518d2cba04">%-- 12/10/2015 1:34 PM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1560">main</command>
<command execution_time="3574">2-1*3</command>
<command execution_time="15">1+2*3</command>
<command batch="980">model.tmpLandmarks([model.numSlicePoints*numPoints+1+locLandmark, locLandmark]) = 0;</command>
<command batch="980">% DRAW SCENE</command>
<command batch="980">set(model.handlePatch,'vertices',model.data,'faces',model.faces);</command>
<command batch="980" execution_time="187">drawnow;</command>
<command execution_time="374">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="981">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ],...</command>
<command batch="981" execution_time="16">orgTop);</command>
<command execution_time="78">hold on; plot(model.data(:,3),model.data(:,1))</command>
<command error="true" execution_time="109">hold on; plot(orgData(:,3),model.data(:,1))</command>
<command execution_time="15">hold on; plot(orgData(:,3),orgData(:,1))</command>
<command execution_time="15">223.6-216.4</command>
<command execution_time="31">extendBy</command>
<command execution_time="31">model.sliceHeightStep</command>
<command execution_time="15">5.4108+1.8036</command>
<command batch="982">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ],...</command>
<command batch="982" execution_time="31">orgTop);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">hold on; plot(orgData(:,3),orgData(:,1))</command>
<command execution_time="32">221.8-216.4</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="31">129.9-122.7</command>
<command execution_time="16">hold on; plot(orgBottom(:,3),orgBottom(:,1))</command>
<command execution_time="16">hold on; plot(orgTop(:,3),orgTop(:,1))</command>
<command execution_time="16">129.9-99.2</command>
<command execution_time="31">7.2-extendBy</command>
<command batch="983">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ+extendBy],...</command>
<command batch="983" execution_time="31">orgTop);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command error="true" execution_time="375">newSectionZ = linspce(newSectionZ(1),newSectionZ(end)+extendBy,tmpNewNumSliceHeights);</command>
<command execution_time="16">newSectionZ = linspace(newSectionZ(1),newSectionZ(end)+extendBy,tmpNewNumSliceHeights);</command>
<command batch="984" error="true">newSectionX = reshape(newSectionX,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="984" error="true">newSectionY = reshape(newSectionY,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="984" error="true">newSectionZ = reshape(newSectionZ,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="984" error="true">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ+extendBy],...</command>
<command batch="984" error="true" execution_time="62">orgTop);</command>
<command execution_time="31">size(newSectionZ)</command>
<command execution_time="31">size(tmpSectionZ)</command>
<command execution_time="31">newSectionZ = linspace(tmpSectionZ(1,1),tmpSectionZ(1,end)+extendBy,tmpNewNumSliceHeights);</command>
<command execution_time="31">size(newSectionZ)</command>
<command execution_time="15">size(newSectionX)</command>
<command execution_time="15">size(xq)</command>
<command error="true" execution_time="442">newSectionZ = repmat(newSection,model.numSlicePoints,1);</command>
<command execution_time="16">newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command execution_time="32">size(newSectionZ)</command>
<command execution_time="15">size(newSectionX)</command>
<command batch="985">newSectionX = reshape(newSectionX,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="985">newSectionY = reshape(newSectionY,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="985" execution_time="31">newSectionZ = reshape(newSectionZ,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="986">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ+extendBy],...</command>
<command batch="986" execution_time="31">orgTop);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="987">if bottomOfSection == 1</command>
<command batch="987">orgBottom = [];</command>
<command batch="987">elseif bottomOfSection == model.numSlicePoints*(model.numSliceHeights-1)+1</command>
<command batch="987">orgBottom = [];</command>
<command batch="987">else</command>
<command batch="987">orgBottom = model.data(1:bottomOfSection,:);</command>
<command batch="987">end</command>
<command batch="987">if topOfSection == model.numSlicePoints</command>
<command batch="987">orgTop = [];</command>
<command batch="987">elseif topOfSection == model.numSlicePoints*model.numSliceHeights</command>
<command batch="987">orgTop = [];</command>
<command batch="987">else</command>
<command batch="987">orgTop = model.data(topOfSection+1:end,:);</command>
<command batch="987">orgTop(:,3) = orgTop(:,3)+extendBy;</command>
<command batch="987">end</command>
<command batch="987">% GET SECTION TO EXTEND</command>
<command batch="987">section = model.data(bottomOfSection:topOfSection,:);</command>
<command batch="987">numPoints = round(extendBy/model.sliceHeightStep); % extend in steps equal to slice height step resolution</command>
<command batch="987">% EXTEND SECTION</command>
<command batch="987">tmpLen = size(section,1);</command>
<command batch="987">tmpNumSliceHeights = tmpLen/model.numSlicePoints;</command>
<command batch="987">tmpNewNumSliceHeights = tmpNumSliceHeights+numPoints;</command>
<command batch="987">v = 1:tmpNumSliceHeights;</command>
<command batch="987">xq = linspace(1,tmpNumSliceHeights,tmpNewNumSliceHeights);</command>
<command batch="987">% RESHAPE THE NEW X AND Y SECTIONS FOR INTERPOLATION</command>
<command batch="987">tmpSectionX = reshape(section(:,1),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="987">tmpSectionY = reshape(section(:,2),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="987">tmpSectionZ = reshape(section(:,3),model.numSlicePoints,tmpNumSliceHeights);</command>
<command batch="987">% EXTEND SECTION</command>
<command batch="987">newSectionX = interp1(v,tmpSectionX',xq)';</command>
<command batch="987">newSectionY = interp1(v,tmpSectionY',xq)';</command>
<command batch="987">%                 newSectionZ = interp1(v,tmpSectionZ',xq)';</command>
<command batch="987">newSectionZ = linspace(tmpSectionZ(1,1),tmpSectionZ(1,end)+extendBy,tmpNewNumSliceHeights);</command>
<command batch="987">newSectionZ = repmat(newSectionZ,model.numSlicePoints,1);</command>
<command batch="987">newSectionX = reshape(newSectionX,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="987">newSectionY = reshape(newSectionY,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="987">newSectionZ = reshape(newSectionZ,model.numSlicePoints*tmpNewNumSliceHeights,1);</command>
<command batch="987">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ+extendBy],...</command>
<command batch="987" execution_time="405">orgTop);</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command batch="988">model.data = cat(1,orgBottom,[newSectionX, newSectionY, newSectionZ],...</command>
<command batch="988" execution_time="46">orgTop);</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">hold on; plot(orgData(:,3),orgData(:,1))</command>
<command execution_time="31">221.8-216.4</command>
<command execution_time="33">extendBy</command>
<command execution_time="16">model</command>
<command batch="989">tmpSliceHeights = model.sliceHeights(end)+model.sliceHeightStep:...</command>
<command batch="989" execution_time="15">model.sliceHeightStep:model.guiExtend+model.sliceHeights(end);</command>
<command batch="990">for idx = 1:length(tmpSliceHeights)</command>
<command batch="990">tmpData(:,3) = tmpSliceHeights(idx);</command>
<command batch="990">model.data = cat(1,model.data,tmpData);</command>
<command batch="990" execution_time="78">end</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="16">size(model.sliceHeights)</command>
<command execution_time="32">size(tmpSliceHeights)</command>
<command execution_time="78">figure; plot(model.sliceHeights)</command>
<command execution_time="16">model.sliceHeights = cat(1,model.sliceHeights,tmpSliceHeights');</command>
<command execution_time="78">figure; plot(model.sliceHeights)</command>
<command execution_time="16">model.guiExtend</command>
<command execution_time="16">216.4 + model.guiExtend</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="15">orgData = model.data;</command>
<command execution_time="16">model.data(:,1:2) = model.data(:,1:2) .* model.guiPerRed;</command>
<command execution_time="94">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="31">hold on; plot(orgData(:,3),orgData(:,1))</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,2))</command>
<command execution_time="31">hold on; plot(orgData(:,3),orgData(:,2))</command>
<command batch="991">tmpData = reshape(model.data(model.numSlicePoints+1:end,1:2),model.numSlicePoints,numSlices,2);</command>
<command batch="991">tmpData = bsxfun(@times,tmpData,model.guiPerRed');</command>
<command batch="991" execution_time="31">model.data(model.numSlicePoints+1:end,1:2) = reshape(tmpData,model.numSlicePoints*numSlices,2);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
</session>
<session>
<command time_stamp="1518da4bbe1">%-- 12/10/2015 3:46 PM --%</command>
<command execution_time="172">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1310">main</command>
<command execution_time="32">size(model.data(model.numSlicePoints+1:end,1:2))</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command batch="992">% DRAW SCENE</command>
<command batch="992">set(model.handlePatch,'vertices',model.data);</command>
<command batch="992" execution_time="187">drawnow;</command>
<command execution_time="109">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="31">size(model.sliceHeights)</command>
<command execution_time="94">figure; plot(model.sliceHeights)</command>
<command execution_time="31">model.data(end,3)</command>
</session>
<session>
<command time_stamp="1518dbcb6a0">%-- 12/10/2015 4:12 PM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1280">main</command>
<command execution_time="31">size(model.guiPerRed)</command>
</session>
<session>
<command time_stamp="1518dc633ee">%-- 12/10/2015 4:22 PM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1248">main</command>
<command execution_time="125">load('INNERMOLD_lastName_firstName_20151210.mat')</command>
<command execution_time="124" repeat="2">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="141">open([pn,fn]);</command>
<command execution_time="78">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="31">fn</command>
<command execution_time="187">output = open([pn,fn]);</command>
<command execution_time="47">output</command>
<command execution_time="15">output.model</command>
</session>
<session>
<command time_stamp="1518df9a31d">%-- 12/10/2015 5:18 PM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1076">main</command>
</session>
<session>
<command time_stamp="1518e6a6f3c">%-- 12/10/2015 7:21 PM --%</command>
<command execution_time="172">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="7441">main</command>
</session>
<session>
<command time_stamp="151916cba13">%-- 12/11/2015 9:23 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1779">main</command>
<command execution_time="156">winopen('./Manual/limbRevolutionCADHelp.pdf');</command>
</session>
<session>
<command time_stamp="15191a43ccf">%-- 12/11/2015 10:23 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1155">main</command>
</session>
<session>
<command time_stamp="15191af854b">%-- 12/11/2015 10:36 AM --%</command>
<command execution_time="484">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="2309">main</command>
<command execution_time="24815">RandDCode</command>
<command execution_time="16">V = [(1:5)',(1:5)',(1:5)'];</command>
<command error="true" execution_time="234">Vq = interp3(V,(1:10)',(1:10)',(1:10)');</command>
<command execution_time="16">size(V)</command>
<command error="true" execution_time="31">V = [(1:5),(1:5),(1:5)]; Vq = interp3(V,(1:10),(1:10),(1:10));</command>
<command error="true" execution_time="47">Vq = interp3(V,2);</command>
<command execution_time="15">size(V)</command>
<command execution_time="62">V = meshgrid(1:10,1:10,1:10);</command>
<command execution_time="32">size(V)</command>
<command execution_time="280">Vq = interp3(V,2);</command>
<command execution_time="32">size(Vq)</command>
<command error="true" execution_time="172">figure; plot3(Vq)</command>
<command error="true" execution_time="1014">figure; mesh(Vq)</command>
<command execution_time="16">x = 1:5; y = 1:5; z = 1:5;</command>
<command error="true" execution_time="47">vq = interp3(x,y,z,2);</command>
<command error="true" execution_time="31">[xq,yq,zq] = interp3(x,y,z,2);</command>
<command error="true" execution_time="121">vq = interp3(x,y,z,1:10,1:10,1:10);</command>
<command execution_time="47">x = rand(1,10), y = rand(1,10); z = rand(1,10);</command>
<command error="true" execution_time="203">F = scatteredInterpolant(x,y,z);</command>
<command execution_time="94">F = scatteredInterpolant(x',y',z');</command>
<command execution_time="16">f</command>
<command execution_time="78">F</command>
<command execution_time="15">xq = 1:.1:10; yq = xq; zq = xq;</command>
<command error="true" execution_time="47">vq = F(xq,yq,zq);</command>
<command execution_time="47">vq = F(xq,yq);</command>
<command execution_time="31">size(vq)</command>
<command execution_time="125">figure; plot(vq)</command>
<command error="true" execution_time="125">figure; plot(xq,yq,vq)</command>
<command error="true" execution_time="78">figure; plot(xq',yq',vq)</command>
<command execution_time="78">figure; plot3(xq',yq',vq)</command>
<command execution_time="47">vq = F({xq,yq});</command>
<command execution_time="125">figure; plot3(xq',yq',vq)</command>
<command execution_time="78">figure; plot(x)</command>
<command execution_time="78">figure; plot3(x,y,z)</command>
<command execution_time="15">foo = 1:.1:length(x);</command>
<command execution_time="15">[xq, yq] = meshgrid(foo,foo);</command>
<command execution_time="47">vq = F(xq,yq);</command>
<command execution_time="171">figure; mesh(xq,yq,vq); hold on; plot3(x,y,z,'o'); hold off;</command>
<command error="true" execution_time="312">data = rand(5,5); dataq = interp(data,2);</command>
<command error="true" execution_time="234">data = rand(10,10); dataq = interp(data,2);</command>
<command execution_time="312">data = rand(1,10); dataq = interp(data,2);</command>
<command execution_time="16">size(dataq)</command>
<command execution_time="32">355 / 90</command>
<command execution_time="31">356/90</command>
<command execution_time="31">90 * 4</command>
<command batch="993">name1='Print settings';</command>
<command batch="993">prompt1={'Initial spindle speed:','Initial feed speed:',...</command>
<command batch="993">'Initial base feed speed:'};</command>
<command batch="993" execution_time="47">defaultanswer1={'100','350','800'};</command>
<command execution_time="14466">answer1=inputdlg(prompt1,name1,1,defaultanswer1);</command>
<command batch="994">name1='Settings';</command>
<command batch="994">prompt1={'Initial spindle speed:','Initial feed speed:',...</command>
<command batch="994">'Initial base feed speed:'};</command>
<command batch="994">defaultanswer1={'100','350','800'};</command>
<command batch="994" execution_time="7131">answer1=inputdlg(prompt1,name1,1,defaultanswer1);</command>
<command execution_time="31">whos object</command>
<command execution_time="34">exist('object')</command>
<command execution_time="27">object.n = 1;</command>
<command execution_time="21">object</command>
<command execution_time="25">exist('obejct')</command>
<command execution_time="26">exist('object')</command>
<command execution_time="416">errordlg('Load file');</command>
<command execution_time="31">name</command>
<command execution_time="16">name(end-4:end)</command>
<command execution_time="16">name(end-3:end)</command>
<command execution_time="15">~strcmp(name(end-3:end),'.aop')</command>
<command execution_time="15">pname</command>
<command error="true" execution_time="1506">nam</command>
<command execution_time="20">name</command>
<command execution_time="31">~strcmp(name(end-3:end),'.aop')</command>
<command execution_time="16">strcmp(name(end-3:end),'.aop')</command>
</session>
<session>
<command time_stamp="15192c0f52e">%-- 12/11/2015 3:34 PM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="2761">main</command>
</session>
<session>
<command time_stamp="15192c5abee">%-- 12/11/2015 3:40 PM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="998">main</command>
<command execution_time="15">fn</command>
<command execution_time="2031">fn(end-3:end)</command>
<command execution_time="31">strcmp(fn(end-3:end),'.mat')</command>
<command execution_time="31">fn</command>
<command execution_time="31">pn</command>
<command error="true" execution_time="47">break</command>
<command execution_time="6868">return</command>
<command execution_time="31">model</command>
<command execution_time="15">hObject</command>
<command execution_time="31">any(strcmp('model',fieldnames(hObject)))</command>
<command execution_time="16">model = guidata(hObject);</command>
<command execution_time="15">model</command>
</session>
<session>
<command time_stamp="15192d6b1a1">%-- 12/11/2015 3:58 PM --%</command>
<command execution_time="125">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1575">main</command>
<command execution_time="16">model</command>
<command execution_time="391">tmpData = reshape(model.data,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints,3);</command>
<command batch="995">z = squeeze(tmpData(1,:,3));</command>
<command batch="995" execution_time="31">zq = z(1):z(end);</command>
<command error="true" execution_time="1311">interpData = zeros(model.numSlicePoints*r,model.numSliceHeights/model.numSlicePoints*r,3);</command>
<command error="true" execution_time="63">interpData = zeros(model.numSlicePoints,zq,2);</command>
<command execution_time="31">interpData = zeros(model.numSlicePoints,length(zq),2);</command>
<command execution_time="31">size(interpData)</command>
<command execution_time="31">size(zq)</command>
<command execution_time="16">size(z)</command>
<command batch="996" error="true">for idxAxis = 1:2</command>
<command batch="996" error="true">for idx = 1:model.numSlicePoints</command>
<command batch="996" error="true">interpData(idx,:,idxAxis) = interp(z,tmpData(idx,:,idxAxis),zq);</command>
<command batch="996" error="true">end</command>
<command batch="996" error="true" execution_time="78">end</command>
<command batch="997" error="true">for idxAxis = 1:2</command>
<command batch="997" error="true">for idx = 1:model.numSlicePoints</command>
<command batch="997" error="true">interpData(idx,:,idxAxis) = interp(z,squeeze(tmpData(idx,:,idxAxis)),zq);</command>
<command batch="997" error="true">end</command>
<command batch="997" error="true" execution_time="63">end</command>
<command execution_time="16">idxAxis</command>
<command execution_time="16">idx</command>
<command batch="998">for idxAxis = 1:2</command>
<command batch="998">for idx = 1:model.numSlicePoints</command>
<command batch="998">interpData(idx,:,idxAxis) = interp1(z,squeeze(tmpData(idx,:,idxAxis)),zq);</command>
<command batch="998">end</command>
<command batch="998" execution_time="93">end</command>
<command execution_time="15">interpRData = sum(interpData.^2,3);</command>
<command execution_time="16">interpZ = repmat(zq,model.numSlicePoints,1);</command>
<command execution_time="32">size(interpZ)</command>
<command execution_time="31">lastAngle = round(360/model.angleStep)*model.angleStep;</command>
<command execution_time="16">lastAngle</command>
<command execution_time="31">model.angleStep</command>
<command execution_time="16">lastAngle = model.numSlicePoints*model.angleStep;</command>
<command execution_time="31">lastAngle</command>
<command execution_time="15">size(tmpData)</command>
<command execution_time="125">figure; imagesc(squeeze(tmpData(:,:,3)))</command>
<command execution_time="94">figure; plot(tmpData(:,1,3))</command>
<command execution_time="31">model.data(1:10,3)</command>
<command execution_time="31">z = linspace(0,model.data(end,end),model.numSliceHeights);</command>
<command execution_time="16">size(z)</command>
<command execution_time="78">figure; plot(z)</command>
<command execution_time="78">figure; imagesc(tmpData(:,:,3))</command>
<command batch="999">zq = linspace(0,model.data(end,end),model.numSliceHeights);</command>
<command batch="999" execution_time="31">zq = reshape(zq,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command execution_time="31">size(zq)</command>
<command execution_time="94">figure; imagesc(zq)</command>
<command execution_time="78">figure; imagesc(z)</command>
<command execution_time="31">z = tmpData(:,:,3);</command>
<command execution_time="93">figure; imagesc(z)</command>
<command batch="1000">model = guidata(hObject);</command>
<command batch="1000">tmpData = reshape(model.data,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints,3);</command>
<command batch="1000">z = tmpData(:,:,3);</command>
<command batch="1000">zq = linspace(0,model.data(end,end),model.numSliceHeights);</command>
<command batch="1000">zq = reshape(zq,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command batch="1000">% INITIALIZE BUFFER</command>
<command batch="1000">interpData = zeros(model.numSlicePoints,length(zq),2);</command>
<command batch="1000">% INTERPOLATE IN Z</command>
<command batch="1000">for idxAxis = 1:2</command>
<command batch="1000">for idx = 1:model.numSlicePoints</command>
<command batch="1000">interpData(idx,:,idxAxis) = interp1(z(idx,:),squeeze(tmpData(idx,:,idxAxis)),zq(idx,:));</command>
<command batch="1000">end</command>
<command batch="1000" execution_time="156">end</command>
<command batch="1001" error="true">interpRData = sum(interpData.^2,3);</command>
<command batch="1001" error="true">lastAngle = model.numSlicePoints*model.angleStep;</command>
<command batch="1001" error="true">angle = (0:model.angleStep:lastAngle)';</command>
<command batch="1001" error="true">angle = repmat(angle,model.numSliceHeights,2);</command>
<command batch="1001" error="true" execution_time="438">interpData = cat(3,interpRData,interpZ,angle);</command>
<command execution_time="31">size(interpRData)</command>
<command batch="1002">model = guidata(hObject);</command>
<command batch="1002">tmpData = reshape(model.data,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints,3);</command>
<command batch="1002">z = tmpData(:,:,3);</command>
<command batch="1002">interpZ = linspace(0,model.data(end,end),model.numSliceHeights);</command>
<command batch="1002">interpZ = reshape(interpZ,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command batch="1002">% INITIALIZE BUFFER</command>
<command batch="1002">interpData = zeros(model.numSlicePoints,length(zq),2);</command>
<command batch="1002">% INTERPOLATE IN Z</command>
<command batch="1002">for idxAxis = 1:2</command>
<command batch="1002">for idx = 1:model.numSlicePoints</command>
<command batch="1002">interpData(idx,:,idxAxis) = interp1(z(idx,:),squeeze(tmpData(idx,:,idxAxis)),interpZ(idx,:));</command>
<command batch="1002">end</command>
<command batch="1002" execution_time="187">end</command>
<command execution_time="15">size(interpData)</command>
<command execution_time="15">interpRData = sum(interpData.^2,3);</command>
<command execution_time="31">size(interpRData)</command>
<command execution_time="16">lastAngle = model.numSlicePoints*model.angleStep;</command>
<command execution_time="31">angle = (0:model.angleStep:lastAngle)';</command>
<command execution_time="15">size(angle)</command>
<command batch="1003">lastAngle = (model.numSlicePoints*model.angleStep)-model.angleStep;</command>
<command batch="1003" execution_time="31">angle = (0:model.angleStep:lastAngle)';</command>
<command execution_time="31">size(angle)</command>
<command execution_time="31">angle = repmat(angle,model.numSliceHeights,2);</command>
<command execution_time="16">size(angle)</command>
<command execution_time="16">angle = (0:model.angleStep:lastAngle)';</command>
<command execution_time="31">angle = repmat(angle,model.numSliceHeights/model.numSlicePoints,2);</command>
<command execution_time="32">size(angle)</command>
<command batch="1004">angle = (0:model.angleStep:lastAngle)';</command>
<command batch="1004" execution_time="31">angle = repmat(angle,model.numSlicePoints,2);</command>
<command execution_time="32">size(angle)</command>
<command execution_time="32">foo = ones(10,1)</command>
<command execution_time="31">repmat(foo,2,2)</command>
<command execution_time="16">repmat(foo,1,2)</command>
<command batch="1005">angle = (0:model.angleStep:lastAngle)';</command>
<command batch="1005" execution_time="32">angle = repmat(angle,1,model.numSlicePoints);</command>
<command execution_time="16">size(angle)</command>
<command execution_time="16">size(interpZ)</command>
<command execution_time="15">size(interpZ,2)</command>
<command execution_time="32">angle = repmat(angle,1,size(interpZ,2));</command>
<command execution_time="15">size(angle)</command>
<command batch="1006">angle = (0:model.angleStep:lastAngle)';</command>
<command batch="1006" execution_time="31">angle = repmat(angle,1,size(interpZ,2));</command>
<command execution_time="31">size(angle)</command>
<command execution_time="31">interpData = cat(3,interpRData,interpZ,angle);</command>
<command execution_time="15">size(interpData)</command>
<command execution_time="78">figure; imagesc(interpData(:,:,3))</command>
<command execution_time="94">figure; imagesc(interpData(:,:,2))</command>
<command execution_time="78">figure; imagesc(interpData(:,:,1))</command>
<command execution_time="16">interpData = reshape(interpData,model.numSliceHeights,3);</command>
<command execution_time="15">size(interpData)</command>
<command execution_time="94">figure; plot(interpData(:,1))</command>
<command execution_time="78">figure; plot(interpData(:,2))</command>
<command execution_time="78">figure; plot(interpData(:,3))</command>
</session>
<session>
<command time_stamp="15193032eb8">%-- 12/11/2015 4:47 PM --%</command>
<command execution_time="281">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="2045">main</command>
<command execution_time="1107">interpData = reshape(interpData,model.numSliceHeights,3);</command>
<command execution_time="109">figure; plot(interpData(:,2),interpData(:,1))</command>
<command error="true" execution_time="31">interpData = cat(3,interpData(:,:,1),interpData(:,:,2),interpZ);</command>
<command execution_time="31">size(interpData)</command>
<command batch="1007" error="true">for idxAxis = 1:2</command>
<command batch="1007" error="true">for idx = 1:model.numSlicePoints</command>
<command batch="1007" error="true">interpData(idx,:,idxAxis) = interp1(z(idx,:),squeeze(tmpData(idx,:,idxAxis)),interpZ(idx,:));</command>
<command batch="1007" error="true">end</command>
<command batch="1007" error="true" execution_time="94">end</command>
<command batch="1008">model = guidata(hObject);</command>
<command batch="1008">tmpData = reshape(model.data,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints,3);</command>
<command batch="1008">z = tmpData(:,:,3);</command>
<command batch="1008">interpZ = linspace(0,model.data(end,end),model.numSliceHeights);</command>
<command batch="1008">interpZ = reshape(interpZ,model.numSlicePoints,model.numSliceHeights/model.numSlicePoints);</command>
<command batch="1008">% INITIALIZE BUFFER</command>
<command batch="1008">interpData = zeros(model.numSlicePoints,length(interpZ),2);</command>
<command batch="1008">% INTERPOLATE IN Z</command>
<command batch="1008">for idxAxis = 1:2</command>
<command batch="1008">for idx = 1:model.numSlicePoints</command>
<command batch="1008">interpData(idx,:,idxAxis) = interp1(z(idx,:),squeeze(tmpData(idx,:,idxAxis)),interpZ(idx,:));</command>
<command batch="1008">end</command>
<command batch="1008" execution_time="141">end</command>
<command execution_time="15">interpData = cat(3,interpData(:,:,1),interpData(:,:,2),interpZ);</command>
<command execution_time="31">size(interpData)</command>
<command execution_time="31">interpData = reshape(interpData,model.numSliceHeights,3);</command>
<command execution_time="31">size(interpData)</command>
<command error="true" execution_time="1326">[theta rho z] = cart2po(interpData(:,1),interpData(:,2),interpData(:,3));</command>
<command execution_time="47">[theta rho z] = cart2pol(interpData(:,1),interpData(:,2),interpData(:,3));</command>
<command execution_time="16">size(theta)</command>
<command execution_time="15">size(rho)</command>
<command error="true" execution_time="232">size(Z)</command>
<command execution_time="20">size(z)</command>
<command execution_time="78">figure; plot(z,rho)</command>
<command execution_time="78">figure; plot(interpData(:,3),interpData(:,1))</command>
</session>
<session>
<command time_stamp="151931946fe">%-- 12/11/2015 5:11 PM --%</command>
<command execution_time="44959">RandDCode</command>
</session>
<session>
<command time_stamp="151a0993ad6">%-- 12/14/2015 8:06 AM --%</command>
<command execution_time="156">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="13357">main</command>
</session>
<session>
<command time_stamp="151a0a982b5">%-- 12/14/2015 8:24 AM --%</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command execution_time="1092">main</command>
<command execution_time="16">any(strcmp('model',fieldnames(hObject)))</command>
<command execution_time="78">hObject</command>
<command execution_time="31">model</command>
<command execution_time="31">model = guidata(hObject);</command>
<command execution_time="32">any(strcmp('model',fieldnames(hObject)))</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command error="true" execution_time="93">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command error="true" execution_time="32">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,numSlices-1,2);</command>
<command execution_time="32">model.numSlicePoints * numSlices-1</command>
<command execution_time="31">numSlices = length(model.sliceHeights);</command>
<command execution_time="15">numSlices</command>
<command execution_time="16">model.numSlicePoints * numSlices-1</command>
<command execution_time="46">model.numSlicePoints * numSlices</command>
<command error="true" execution_time="31">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,2);</command>
<command error="true" execution_time="31">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints-1,2);</command>
<command error="true" execution_time="31">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,numSlices-1,2);</command>
<command error="true" execution_time="32">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command execution_time="31">size(model.guiPerRed)</command>
<command execution_time="31">29880 / model.numSlicePoints</command>
<command execution_time="31">numSlices</command>
<command batch="1009" error="true">numSlices = size(model.guiPerRed,1)/model.numSlicePoints;</command>
<command batch="1009" error="true">innerKeyExtend = ones(model.numSlicePoints,numSlices,2);</command>
<command batch="1009" error="true" execution_time="93">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command execution_time="16">tmpData = reshape(model.guiPerRed(:,1:2),model.numSlicePoints,numSlices,2);</command>
<command execution_time="47">x1</command>
<command execution_time="31">linerThicknessProfile(z(tmp))</command>
<command error="true" execution_time="109">load([pn,fn]);</command>
<command execution_time="296">figure; plot(model.data(:,3),model.data(:,1))</command>
<command execution_time="31">ans</command>
<command execution_time="31">ans.model</command>
</session>
<session>
<command time_stamp="151a0e8119c">%-- 12/14/2015 9:32 AM --%</command>
<command execution_time="93">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
</session>
<session>
<command time_stamp="151a10e661a">%-- 12/14/2015 10:14 AM --%</command>
<command execution_time="297">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
</session>
<session>
<command time_stamp="151a1118c11">%-- 12/14/2015 10:17 AM --%</command>
<command execution_time="94">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
</session>
<session>
<command time_stamp="151a18a5b68">%-- 12/14/2015 12:29 PM --%</command>
</session>
<session>
<command time_stamp="151a19f4fa7">%-- 12/14/2015 12:52 PM --%</command>
<command execution_time="5632">msgbox('helloword')</command>
<command execution_time="109">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
</session>
<session>
<command time_stamp="151a5c3e001">%-- 12/15/2015 8:10 AM --%</command>
<command execution_time="100">which startup.m</command>
</session>
<session>
<command time_stamp="151a5c7f471">%-- 12/15/2015 8:15 AM --%</command>
<command execution_time="140">cd('C:\Users\Tyler Fosnight\Documents\Tyler Documents\PDI\CAD_V2.0');</command>
<command error="true" execution_time="183">main</command>
</session>
<session>
<command time_stamp="151a5df1120">%-- 12/15/2015 8:40 AM --%</command>
<command error="true" execution_time="124">cd C:\Users\Tyler Fosnight\Documents\MATLAB\JFrame_example_window</command>
<command execution_time="351">main</command>
</session>
</history>
